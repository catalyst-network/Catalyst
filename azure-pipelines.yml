# ASP.NET Core

pool:
  vmImage: 'VS2017-Win2016'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
- script: |
    mkdir $(Build.SourcesDirectory)/results
# dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura  src/*[Tt]ests/*.csproj
    dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura  src/Catalyst.Node.Common.UnitTests/Catalyst.Node.Common.UnitTests.csproj
# dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:MergeWtih=$(Build.SourcesDirectory)/Catalyst.Node.Common.UnitTests/coverage.cobertura.xml Catalyst.Node.Core.UnitTests
# copy $(Build.SourcesDirectory)/src/*[Tt]est/coverage.cobertura.xml $(Build.SourcesDirectory)/results
    copy $(Build.SourcesDirectory)/src/Catalyst.Node.Core.UnitTests/coverage.cobertura.xml $(Build.SourcesDirectory)/results
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.0-rc4
    ./reportgenerator "-reports:$(Build.SourcesDirectory)/src/Catalyst.Node.Core.UnitTests/coverage.cobertura.xml" "-targetdir:results" "-reporttypes:HTMLInline;HTMLChart"
  displayName: 'Unit testing'
- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)/results/coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/results
    codecoverageTool: cobertura
