variables:
  release.type: '-beta'
  BuildPlatform: 'x64'
  BuildConfiguration: 'Debug'
  
stages:
  - stage: 'BuildCatalystCoreSolutions'
    jobs:
      - job: A1
        continueOnError: false
        pool:
          vmImage: 'macos-10.14'
        steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Install .NetCore SDK'
            inputs:
              version: 2.2.104
              failOnStandardError: 'true'
            timeoutInMinutes: 10

          - bash: |
              git submodule update --init --force --recursive
            displayName: 'Clone submodules'

#          - task: DotNetCoreCLI@2
#            displayName: 'Build solution'
#            inputs:
#              projects: 'src/**/*.csproj'
#              arguments: '--configuration=$(BuildConfiguration)'
#              failOnStandardError: 'true'
#            timeoutInMinutes: 10
  
          - task: CopyFiles@2
            inputs:
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/build'

          - publish: '$(Build.ArtifactStagingDirectory)/build'
            artifact: 'build'

  - stage: 'PackAndPublishCoreModules'
    dependsOn: 'BuildCatalystCoreSolutions'
    condition: succeeded()
    jobs:
      - job: 'BuildCoreLibsProtocolAndAbstractions'
        continueOnError: false
        pool:
          vmImage: 'macos-10.14'
        strategy:
          matrix:
            abstractions:
              package_name: 'Catalyst.Abstractions'
              project: 'build/src/Catalyst.Abstractions/Catalyst.Abstractions.csproj'
            protocol:
              package_name: 'Catalyst.Protocol'
              project: 'build/src/Catalyst.Protocol/Catalyst.Protocol.csproj'
            core-lib:
              package_name: 'Catalyst.Core.Lib'
              project: 'build/src/Catalyst.Core.Lib/Catalyst.Core.Lib.csproj'
        steps:
          - checkout: none
          - download: current
            artifact: 'build'
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'ls -la ../'
          - template: nuget-pack-steps-azure-pipelines.yml

      - job: 'BuildCoreModules'
        continueOnError: false
        pool:
          vmImage: 'macos-10.14'
        strategy:
          matrix:
            core-modules-consensus:
              package_name: 'Catalyst.Core.Modules.Consensus'
              project: 'src/Catalyst.Core.Modules.Consensus/Catalyst.Core.Modules.Consensus.csproj'
            core-modules-dfs:
              package_name: 'Catalyst.Core.Modules.Dfs'
              project: 'src/Catalyst.Core.Modules.Dfs/Catalyst.Core.Modules.Dfs.csproj'
            core-modules-KeySigner:
              package_name: 'Catalyst.Core.Modules.KeySigner'
              project: 'src/Catalyst.Core.Modules.KeySigner/Catalyst.Core.Modules.KeySigner.csproj'
            core-modules-Keystore:
              package_name: 'Catalyst.Core.Modules.Keystore'
              project: 'src/Catalyst.Core.Modules.Keystore/Catalyst.Core.Modules.Keystore.csproj'
            core-modules-Kvm:
              package_name: 'Catalyst.Core.Modules.Kvm'
              project: 'src/Catalyst.Core.Modules.Kvm/Catalyst.Core.Modules.Kvm.csproj'
            core-modules-Ledger:
              package_name: 'Catalyst.Core.Modules.Ledger'
              project: 'src/Catalyst.Core.Modules.Ledger/Catalyst.Core.Modules.Ledger.csproj'
            core-modules-Mempool:
              package_name: 'Catalyst.Core.Modules.Mempool'
              project: 'src/Catalyst.Core.Modules.Mempool/Catalyst.Core.Modules.Mempool.csproj'
            core-modules-web3:
              package_name: 'Catalyst.Core.Modules.Web3'
              project: 'src/Catalyst.Core.Modules.Web3/Catalyst.Core.Modules.Web3.csproj'    
            core-modules-Rpc-Client:
              package_name: 'Catalyst.Core.Modules.Rpc.Client'
              project: 'src/Catalyst.Core.Modules.Rpc.Client/Catalyst.Core.Modules.Rpc.Client.csproj'
            core-modules-Rpc-Server:
              package_name: 'Catalyst.Core.Modules.Rpc.Server'
              project: 'src/Catalyst.Core.Modules.Rpc.Server/Catalyst.Core.Modules.Rpc.Server.csproj'
            core-modules-P2P-Discovery-hastings:
              package_name: 'Catalyst.Core.Modules.P2P.Discovery.Hastings'
              project: 'src/Catalyst.Core.Modules.P2P.Discovery.Hastings/Catalyst.Core.Modules.P2P.Discovery.Hastings.csproj'
        steps:
          - checkout: none
          - download: current
            artifact: 'build'
          - template: nuget-pack-steps-azure-pipelines.yml

      - job: 'BuildModules'
        continueOnError: false
        pool:
          vmImage: 'macos-10.14'
        strategy:
          matrix:
            modules-Repository-CosmosDb:
              package_name: 'Catalyst.Modules.Repository.CosmosDb'
              project: 'src/Catalyst.Modules.Repository.CosmosDb/Catalyst.Core.Modules.Repository.CosmosDb.csproj'
            modules-Repository-MongoDb:
              package_name: 'Catalyst.Modules.Repository.MongoDb'
              project: 'src/Catalyst.Modules.Repository.MongoDb/Catalyst.Core.Modules.Repository.MongoDb.csproj'
          maxParallel: 3
        steps:
          - checkout: none
          - download: current
            artifact: 'build'
          - template: nuget-pack-steps-azure-pipelines.yml 
        