@startuml
abstract class "MessageHandlerBase`1"<TProto> {
    # MessageHandlerBase(logger:ILogger)
    + StartObserving(messageStream:IObservable<IChanneledMessage<AnySigned>>) : void
    + <<virtual>> HandleMessage(message:IChanneledMessage<AnySigned>) : void
    # {abstract} Handler(message:IChanneledMessage<AnySigned>) : void
    # <<virtual>> Dispose(disposing:bool) : void
    + Dispose() : void
}
IMessageHandler <|-- "MessageHandlerBase`1"
IDisposable <|-- "MessageHandlerBase`1"
"MessageHandlerBase`1" --> "_messageSubscription" IDisposable
"MessageHandlerBase`1" --> "Logger" ILogger
@enduml
