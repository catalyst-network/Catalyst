@startuml
class VerifyMessageRequestHandler <<sealed>> {
    - <<const>> PublicKeyEncodingInvalid : string = "Invalid PublicKey encoding"
    - <<const>> PublicKeyNotProvided : string = "PublicKey not provided"
    - <<const>> SignatureEncodingInvalid : string = "Invalid Signature encoding"
    - <<const>> SignatureNotProvided : string = "Signature not provided"
    - <<const>> FailedToHandleMessage : string = "Failed to handle VerifyMessageRequest after receiving message"
    + VerifyMessageRequestHandler(peerIdentifier:IPeerIdentifier, logger:ILogger, keySigner:IKeySigner, messageCorrelationCache:IMessageCorrelationCache)
    # <<override>> Handler(message:IChanneledMessage<AnySigned>) : void
    - ReturnResponse(result:bool) : void
}
class "CorrelatableMessageHandlerBase`2"<T1,T2> {
}
class "IChanneledMessage`1"<T> {
}
"CorrelatableMessageHandlerBase`2" "<VerifyMessageRequest,IMessageCorrelationCache>" <|-- VerifyMessageRequestHandler
IRpcRequestHandler <|-- VerifyMessageRequestHandler
VerifyMessageRequestHandler --> "_keySigner" IKeySigner
VerifyMessageRequestHandler --> "_peerId" PeerId
VerifyMessageRequestHandler --> "_message<AnySigned>" "IChanneledMessage`1"
@enduml
