// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Peer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Catalyst.Protocol.Peer {

  /// <summary>Holder for reflection information generated from Peer.proto</summary>
  public static partial class PeerReflection {

    #region Descriptor
    /// <summary>File descriptor for Peer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PeerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpQZWVyLnByb3RvEhZDYXRhbHlzdC5Qcm90b2NvbC5QZWVyIuMCCgxQZWVy",
            "UHJvdG9jb2waGwoLUGluZ1JlcXVlc3QSDAoEcGluZxgBIAEoCRocCgxQb25n",
            "UmVzcG9uc2USDAoEcG9uZxgBIAEoCRoSCgNBQ0sSCwoDYWNrGAEgASgMGhQK",
            "BE5BQ0sSDAoEbmFjaxgBIAEoDBofCg9QZWVySW5mb1JlcXVlc3QSDAoEcGlu",
            "ZxgBIAEoCRogChBQZWVySW5mb1Jlc3BvbnNlEgwKBHBvbmcYASABKAkaJAoU",
            "UGVlck5laWdoYm9yc1JlcXVlc3QSDAoEcGluZxgBIAEoCRolChVQZWVyTmVp",
            "Z2hib3JzUmVzcG9uc2USDAoEcG9uZxgBIAEoCRohChBDaGFsbGVuZ2VSZXF1",
            "ZXN0Eg0KBW5vbmNlGAEgASgSGjsKEUNoYWxsZW5nZVJlc3BvbnNlEhMKC3Np",
            "Z25lZE5vbmNlGAEgASgJEhEKCXB1YmxpY0tleRgCIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol), global::Catalyst.Protocol.Peer.PeerProtocol.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PingRequest), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PingRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PongResponse), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PongResponse.Parser, new[]{ "Pong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.ACK), global::Catalyst.Protocol.Peer.PeerProtocol.Types.ACK.Parser, new[]{ "Ack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.NACK), global::Catalyst.Protocol.Peer.PeerProtocol.Types.NACK.Parser, new[]{ "Nack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerInfoRequest), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerInfoRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerInfoResponse), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerInfoResponse.Parser, new[]{ "Pong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerNeighborsRequest), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerNeighborsRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerNeighborsResponse), global::Catalyst.Protocol.Peer.PeerProtocol.Types.PeerNeighborsResponse.Parser, new[]{ "Pong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.ChallengeRequest), global::Catalyst.Protocol.Peer.PeerProtocol.Types.ChallengeRequest.Parser, new[]{ "Nonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Catalyst.Protocol.Peer.PeerProtocol.Types.ChallengeResponse), global::Catalyst.Protocol.Peer.PeerProtocol.Types.ChallengeResponse.Parser, new[]{ "SignedNonce", "PublicKey" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PeerProtocol : pb::IMessage<PeerProtocol> {
    private static readonly pb::MessageParser<PeerProtocol> _parser = new pb::MessageParser<PeerProtocol>(() => new PeerProtocol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerProtocol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Catalyst.Protocol.Peer.PeerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerProtocol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerProtocol(PeerProtocol other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerProtocol Clone() {
      return new PeerProtocol(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerProtocol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerProtocol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerProtocol other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PeerProtocol message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PingRequest : pb::IMessage<PingRequest> {
        private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest(PingRequest other) : this() {
          ping_ = other.ping_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PingRequest Clone() {
          return new PingRequest(this);
        }

        /// <summary>Field number for the "ping" field.</summary>
        public const int PingFieldNumber = 1;
        private string ping_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ping {
          get { return ping_; }
          set {
            ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PingRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PingRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ping != other.Ping) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ping.Length != 0) hash ^= Ping.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Ping.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ping);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ping.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PingRequest other) {
          if (other == null) {
            return;
          }
          if (other.Ping.Length != 0) {
            Ping = other.Ping;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ping = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PongResponse : pb::IMessage<PongResponse> {
        private static readonly pb::MessageParser<PongResponse> _parser = new pb::MessageParser<PongResponse>(() => new PongResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PongResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PongResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PongResponse(PongResponse other) : this() {
          pong_ = other.pong_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PongResponse Clone() {
          return new PongResponse(this);
        }

        /// <summary>Field number for the "pong" field.</summary>
        public const int PongFieldNumber = 1;
        private string pong_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pong {
          get { return pong_; }
          set {
            pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PongResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PongResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Pong != other.Pong) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Pong.Length != 0) hash ^= Pong.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Pong.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pong);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Pong.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PongResponse other) {
          if (other == null) {
            return;
          }
          if (other.Pong.Length != 0) {
            Pong = other.Pong;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Pong = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ACK : pb::IMessage<ACK> {
        private static readonly pb::MessageParser<ACK> _parser = new pb::MessageParser<ACK>(() => new ACK());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ACK> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ACK() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ACK(ACK other) : this() {
          ack_ = other.ack_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ACK Clone() {
          return new ACK(this);
        }

        /// <summary>Field number for the "ack" field.</summary>
        public const int AckFieldNumber = 1;
        private pb::ByteString ack_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Ack {
          get { return ack_; }
          set {
            ack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ACK);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ACK other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ack != other.Ack) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ack.Length != 0) hash ^= Ack.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Ack.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Ack);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ack.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ack);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ACK other) {
          if (other == null) {
            return;
          }
          if (other.Ack.Length != 0) {
            Ack = other.Ack;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ack = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class NACK : pb::IMessage<NACK> {
        private static readonly pb::MessageParser<NACK> _parser = new pb::MessageParser<NACK>(() => new NACK());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NACK> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NACK() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NACK(NACK other) : this() {
          nack_ = other.nack_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NACK Clone() {
          return new NACK(this);
        }

        /// <summary>Field number for the "nack" field.</summary>
        public const int NackFieldNumber = 1;
        private pb::ByteString nack_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Nack {
          get { return nack_; }
          set {
            nack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NACK);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NACK other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Nack != other.Nack) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Nack.Length != 0) hash ^= Nack.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Nack.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Nack);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Nack.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nack);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NACK other) {
          if (other == null) {
            return;
          }
          if (other.Nack.Length != 0) {
            Nack = other.Nack;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Nack = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PeerInfoRequest : pb::IMessage<PeerInfoRequest> {
        private static readonly pb::MessageParser<PeerInfoRequest> _parser = new pb::MessageParser<PeerInfoRequest>(() => new PeerInfoRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PeerInfoRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoRequest(PeerInfoRequest other) : this() {
          ping_ = other.ping_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoRequest Clone() {
          return new PeerInfoRequest(this);
        }

        /// <summary>Field number for the "ping" field.</summary>
        public const int PingFieldNumber = 1;
        private string ping_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ping {
          get { return ping_; }
          set {
            ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PeerInfoRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PeerInfoRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ping != other.Ping) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ping.Length != 0) hash ^= Ping.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Ping.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ping);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ping.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PeerInfoRequest other) {
          if (other == null) {
            return;
          }
          if (other.Ping.Length != 0) {
            Ping = other.Ping;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ping = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PeerInfoResponse : pb::IMessage<PeerInfoResponse> {
        private static readonly pb::MessageParser<PeerInfoResponse> _parser = new pb::MessageParser<PeerInfoResponse>(() => new PeerInfoResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PeerInfoResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoResponse(PeerInfoResponse other) : this() {
          pong_ = other.pong_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerInfoResponse Clone() {
          return new PeerInfoResponse(this);
        }

        /// <summary>Field number for the "pong" field.</summary>
        public const int PongFieldNumber = 1;
        private string pong_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pong {
          get { return pong_; }
          set {
            pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PeerInfoResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PeerInfoResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Pong != other.Pong) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Pong.Length != 0) hash ^= Pong.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Pong.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pong);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Pong.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PeerInfoResponse other) {
          if (other == null) {
            return;
          }
          if (other.Pong.Length != 0) {
            Pong = other.Pong;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Pong = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PeerNeighborsRequest : pb::IMessage<PeerNeighborsRequest> {
        private static readonly pb::MessageParser<PeerNeighborsRequest> _parser = new pb::MessageParser<PeerNeighborsRequest>(() => new PeerNeighborsRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PeerNeighborsRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsRequest(PeerNeighborsRequest other) : this() {
          ping_ = other.ping_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsRequest Clone() {
          return new PeerNeighborsRequest(this);
        }

        /// <summary>Field number for the "ping" field.</summary>
        public const int PingFieldNumber = 1;
        private string ping_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Ping {
          get { return ping_; }
          set {
            ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PeerNeighborsRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PeerNeighborsRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Ping != other.Ping) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Ping.Length != 0) hash ^= Ping.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Ping.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Ping);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Ping.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PeerNeighborsRequest other) {
          if (other == null) {
            return;
          }
          if (other.Ping.Length != 0) {
            Ping = other.Ping;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Ping = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class PeerNeighborsResponse : pb::IMessage<PeerNeighborsResponse> {
        private static readonly pb::MessageParser<PeerNeighborsResponse> _parser = new pb::MessageParser<PeerNeighborsResponse>(() => new PeerNeighborsResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PeerNeighborsResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsResponse(PeerNeighborsResponse other) : this() {
          pong_ = other.pong_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PeerNeighborsResponse Clone() {
          return new PeerNeighborsResponse(this);
        }

        /// <summary>Field number for the "pong" field.</summary>
        public const int PongFieldNumber = 1;
        private string pong_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pong {
          get { return pong_; }
          set {
            pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PeerNeighborsResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PeerNeighborsResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Pong != other.Pong) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Pong.Length != 0) hash ^= Pong.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Pong.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pong);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Pong.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PeerNeighborsResponse other) {
          if (other == null) {
            return;
          }
          if (other.Pong.Length != 0) {
            Pong = other.Pong;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Pong = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ChallengeRequest : pb::IMessage<ChallengeRequest> {
        private static readonly pb::MessageParser<ChallengeRequest> _parser = new pb::MessageParser<ChallengeRequest>(() => new ChallengeRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChallengeRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeRequest(ChallengeRequest other) : this() {
          nonce_ = other.nonce_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeRequest Clone() {
          return new ChallengeRequest(this);
        }

        /// <summary>Field number for the "nonce" field.</summary>
        public const int NonceFieldNumber = 1;
        private long nonce_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Nonce {
          get { return nonce_; }
          set {
            nonce_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChallengeRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChallengeRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Nonce != other.Nonce) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Nonce != 0L) hash ^= Nonce.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Nonce != 0L) {
            output.WriteRawTag(8);
            output.WriteSInt64(Nonce);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Nonce != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Nonce);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChallengeRequest other) {
          if (other == null) {
            return;
          }
          if (other.Nonce != 0L) {
            Nonce = other.Nonce;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Nonce = input.ReadSInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ChallengeResponse : pb::IMessage<ChallengeResponse> {
        private static readonly pb::MessageParser<ChallengeResponse> _parser = new pb::MessageParser<ChallengeResponse>(() => new ChallengeResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChallengeResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Catalyst.Protocol.Peer.PeerProtocol.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeResponse(ChallengeResponse other) : this() {
          signedNonce_ = other.signedNonce_;
          publicKey_ = other.publicKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChallengeResponse Clone() {
          return new ChallengeResponse(this);
        }

        /// <summary>Field number for the "signedNonce" field.</summary>
        public const int SignedNonceFieldNumber = 1;
        private string signedNonce_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SignedNonce {
          get { return signedNonce_; }
          set {
            signedNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "publicKey" field.</summary>
        public const int PublicKeyFieldNumber = 2;
        private string publicKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PublicKey {
          get { return publicKey_; }
          set {
            publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChallengeResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChallengeResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SignedNonce != other.SignedNonce) return false;
          if (PublicKey != other.PublicKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SignedNonce.Length != 0) hash ^= SignedNonce.GetHashCode();
          if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (SignedNonce.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SignedNonce);
          }
          if (PublicKey.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PublicKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SignedNonce.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedNonce);
          }
          if (PublicKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChallengeResponse other) {
          if (other == null) {
            return;
          }
          if (other.SignedNonce.Length != 0) {
            SignedNonce = other.SignedNonce;
          }
          if (other.PublicKey.Length != 0) {
            PublicKey = other.PublicKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SignedNonce = input.ReadString();
                break;
              }
              case 18: {
                PublicKey = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
