# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='Peer.proto',
  package='Catalyst.Protocol.Peer',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nPeer.proto\x12\x16\x43\x61talyst.Protocol.Peer\"\xe3\x02\n\x0cPeerProtocol\x1a\x1b\n\x0bPingRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\x1a\x1c\n\x0cPongResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\x1a\x12\n\x03\x41\x43K\x12\x0b\n\x03\x61\x63k\x18\x01 \x01(\x0c\x1a\x14\n\x04NACK\x12\x0c\n\x04nack\x18\x01 \x01(\x0c\x1a\x1f\n\x0fPeerInfoRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\x1a \n\x10PeerInfoResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\x1a$\n\x14PeerNeighborsRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\x1a%\n\x15PeerNeighborsResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\x1a!\n\x10\x43hallengeRequest\x12\r\n\x05nonce\x18\x01 \x01(\x12\x1a;\n\x11\x43hallengeResponse\x12\x13\n\x0bsignedNonce\x18\x01 \x01(\t\x12\x11\n\tpublicKey\x18\x02 \x01(\tb\x06proto3')
)




_PEERPROTOCOL_PINGREQUEST = _descriptor.Descriptor(
  name='PingRequest',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='Catalyst.Protocol.Peer.PeerProtocol.PingRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=82,
)

_PEERPROTOCOL_PONGRESPONSE = _descriptor.Descriptor(
  name='PongResponse',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PongResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='Catalyst.Protocol.Peer.PeerProtocol.PongResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=112,
)

_PEERPROTOCOL_ACK = _descriptor.Descriptor(
  name='ACK',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.ACK',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ack', full_name='Catalyst.Protocol.Peer.PeerProtocol.ACK.ack', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=114,
  serialized_end=132,
)

_PEERPROTOCOL_NACK = _descriptor.Descriptor(
  name='NACK',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.NACK',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nack', full_name='Catalyst.Protocol.Peer.PeerProtocol.NACK.nack', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=154,
)

_PEERPROTOCOL_PEERINFOREQUEST = _descriptor.Descriptor(
  name='PeerInfoRequest',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerInfoRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=156,
  serialized_end=187,
)

_PEERPROTOCOL_PEERINFORESPONSE = _descriptor.Descriptor(
  name='PeerInfoResponse',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerInfoResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=189,
  serialized_end=221,
)

_PEERPROTOCOL_PEERNEIGHBORSREQUEST = _descriptor.Descriptor(
  name='PeerNeighborsRequest',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=259,
)

_PEERPROTOCOL_PEERNEIGHBORSRESPONSE = _descriptor.Descriptor(
  name='PeerNeighborsResponse',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=261,
  serialized_end=298,
)

_PEERPROTOCOL_CHALLENGEREQUEST = _descriptor.Descriptor(
  name='ChallengeRequest',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.ChallengeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='Catalyst.Protocol.Peer.PeerProtocol.ChallengeRequest.nonce', index=0,
      number=1, type=18, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=300,
  serialized_end=333,
)

_PEERPROTOCOL_CHALLENGERESPONSE = _descriptor.Descriptor(
  name='ChallengeResponse',
  full_name='Catalyst.Protocol.Peer.PeerProtocol.ChallengeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signedNonce', full_name='Catalyst.Protocol.Peer.PeerProtocol.ChallengeResponse.signedNonce', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='Catalyst.Protocol.Peer.PeerProtocol.ChallengeResponse.publicKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=394,
)

_PEERPROTOCOL = _descriptor.Descriptor(
  name='PeerProtocol',
  full_name='Catalyst.Protocol.Peer.PeerProtocol',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_PEERPROTOCOL_PINGREQUEST, _PEERPROTOCOL_PONGRESPONSE, _PEERPROTOCOL_ACK, _PEERPROTOCOL_NACK, _PEERPROTOCOL_PEERINFOREQUEST, _PEERPROTOCOL_PEERINFORESPONSE, _PEERPROTOCOL_PEERNEIGHBORSREQUEST, _PEERPROTOCOL_PEERNEIGHBORSRESPONSE, _PEERPROTOCOL_CHALLENGEREQUEST, _PEERPROTOCOL_CHALLENGERESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=394,
)

_PEERPROTOCOL_PINGREQUEST.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_PONGRESPONSE.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_ACK.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_NACK.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_PEERINFOREQUEST.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_PEERINFORESPONSE.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_PEERNEIGHBORSREQUEST.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_PEERNEIGHBORSRESPONSE.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_CHALLENGEREQUEST.containing_type = _PEERPROTOCOL
_PEERPROTOCOL_CHALLENGERESPONSE.containing_type = _PEERPROTOCOL
DESCRIPTOR.message_types_by_name['PeerProtocol'] = _PEERPROTOCOL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PeerProtocol = _reflection.GeneratedProtocolMessageType('PeerProtocol', (_message.Message,), dict(

  PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PINGREQUEST,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PingRequest)
    ))
  ,

  PongResponse = _reflection.GeneratedProtocolMessageType('PongResponse', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PONGRESPONSE,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PongResponse)
    ))
  ,

  ACK = _reflection.GeneratedProtocolMessageType('ACK', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_ACK,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.ACK)
    ))
  ,

  NACK = _reflection.GeneratedProtocolMessageType('NACK', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_NACK,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.NACK)
    ))
  ,

  PeerInfoRequest = _reflection.GeneratedProtocolMessageType('PeerInfoRequest', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PEERINFOREQUEST,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PeerInfoRequest)
    ))
  ,

  PeerInfoResponse = _reflection.GeneratedProtocolMessageType('PeerInfoResponse', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PEERINFORESPONSE,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PeerInfoResponse)
    ))
  ,

  PeerNeighborsRequest = _reflection.GeneratedProtocolMessageType('PeerNeighborsRequest', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PEERNEIGHBORSREQUEST,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsRequest)
    ))
  ,

  PeerNeighborsResponse = _reflection.GeneratedProtocolMessageType('PeerNeighborsResponse', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_PEERNEIGHBORSRESPONSE,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.PeerNeighborsResponse)
    ))
  ,

  ChallengeRequest = _reflection.GeneratedProtocolMessageType('ChallengeRequest', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_CHALLENGEREQUEST,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.ChallengeRequest)
    ))
  ,

  ChallengeResponse = _reflection.GeneratedProtocolMessageType('ChallengeResponse', (_message.Message,), dict(
    DESCRIPTOR = _PEERPROTOCOL_CHALLENGERESPONSE,
    __module__ = 'Peer_pb2'
    # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol.ChallengeResponse)
    ))
  ,
  DESCRIPTOR = _PEERPROTOCOL,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:Catalyst.Protocol.Peer.PeerProtocol)
  ))
_sym_db.RegisterMessage(PeerProtocol)
_sym_db.RegisterMessage(PeerProtocol.PingRequest)
_sym_db.RegisterMessage(PeerProtocol.PongResponse)
_sym_db.RegisterMessage(PeerProtocol.ACK)
_sym_db.RegisterMessage(PeerProtocol.NACK)
_sym_db.RegisterMessage(PeerProtocol.PeerInfoRequest)
_sym_db.RegisterMessage(PeerProtocol.PeerInfoResponse)
_sym_db.RegisterMessage(PeerProtocol.PeerNeighborsRequest)
_sym_db.RegisterMessage(PeerProtocol.PeerNeighborsResponse)
_sym_db.RegisterMessage(PeerProtocol.ChallengeRequest)
_sym_db.RegisterMessage(PeerProtocol.ChallengeResponse)


# @@protoc_insertion_point(module_scope)
