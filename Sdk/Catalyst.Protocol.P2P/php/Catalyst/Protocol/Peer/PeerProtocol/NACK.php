<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

namespace Catalyst\Protocol\Peer\PeerProtocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Catalyst.Protocol.Peer.PeerProtocol.NACK</code>
 */
class NACK extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes nack = 1;</code>
     */
    private $nack = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $nack
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Peer::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes nack = 1;</code>
     * @return string
     */
    public function getNack()
    {
        return $this->nack;
    }

    /**
     * Generated from protobuf field <code>bytes nack = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNack($var)
    {
        GPBUtil::checkString($var, False);
        $this->nack = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(NACK::class, \Catalyst\Protocol\Peer\PeerProtocol_NACK::class);

