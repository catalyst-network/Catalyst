// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.Service.proto

package Catalyst.Protocol.Rpc.Node;

public final class RpcService {
  private RpcService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Rpc.Service.proto\022\032Catalyst.Protocol.R" +
      "pc.Node\032\tRpc.proto2\237\030\n\tRpcServer\022Y\n\004Ping" +
      "\022\'.Catalyst.Protocol.Rpc.Node.PingReques" +
      "t\032(.Catalyst.Protocol.Rpc.Node.PongRespo" +
      "nse\022b\n\007Version\022*.Catalyst.Protocol.Rpc.N" +
      "ode.VersionRequest\032+.Catalyst.Protocol.R" +
      "pc.Node.VersionResponse\022b\n\007GetInfo\022*.Cat" +
      "alyst.Protocol.Rpc.Node.GetInfoRequest\032+" +
      ".Catalyst.Protocol.Rpc.Node.GetInfoRespo" +
      "nse\022q\n\014CreateWallet\022/.Catalyst.Protocol." +
      "Rpc.Node.CreateWalletRequest\0320.Catalyst." +
      "Protocol.Rpc.Node.CreateWalletResponse\022k" +
      "\n\nListWallet\022-.Catalyst.Protocol.Rpc.Nod" +
      "e.ListWalletRequest\032..Catalyst.Protocol." +
      "Rpc.Node.ListWalletResponse\022t\n\rCreateAdd" +
      "ress\0220.Catalyst.Protocol.Rpc.Node.Create" +
      "AddressRequest\0321.Catalyst.Protocol.Rpc.N" +
      "ode.CreateAddressResponse\022k\n\nGetAddress\022" +
      "-.Catalyst.Protocol.Rpc.Node.GetAddressR" +
      "equest\032..Catalyst.Protocol.Rpc.Node.GetA" +
      "ddressResponse\022n\n\013ListAddress\022..Catalyst" +
      ".Protocol.Rpc.Node.ListAddressRequest\032/." +
      "Catalyst.Protocol.Rpc.Node.ListAddressRe" +
      "sponse\022z\n\017ValidateAddress\0222.Catalyst.Pro" +
      "tocol.Rpc.Node.ValidateAddressRequest\0323." +
      "Catalyst.Protocol.Rpc.Node.ValidateAddre" +
      "ssResponse\022k\n\nGetBalance\022-.Catalyst.Prot" +
      "ocol.Rpc.Node.GetBalanceRequest\032..Cataly" +
      "st.Protocol.Rpc.Node.GetBalanceResponse\022" +
      "\211\001\n\024CreateRawTransaction\0227.Catalyst.Prot" +
      "ocol.Rpc.Node.CreateRawTransactionReques" +
      "t\0328.Catalyst.Protocol.Rpc.Node.CreateRaw" +
      "TransactionResponse\022\203\001\n\022SignRawTransacti" +
      "on\0225.Catalyst.Protocol.Rpc.Node.SignRawT" +
      "ransactionRequest\0326.Catalyst.Protocol.Rp" +
      "c.Node.SignRawTransactionResponse\022\211\001\n\024De" +
      "codeRawTransaction\0227.Catalyst.Protocol.R" +
      "pc.Node.DecodeRawTransactionRequest\0328.Ca" +
      "talyst.Protocol.Rpc.Node.DecodeRawTransa" +
      "ctionResponse\022\222\001\n\027BroadcastRawTransactio" +
      "n\022:.Catalyst.Protocol.Rpc.Node.Broadcast" +
      "RawTransactionRequest\032;.Catalyst.Protoco" +
      "l.Rpc.Node.BroadcastRawTransactionRespon" +
      "se\022_\n\006SendTo\022).Catalyst.Protocol.Rpc.Nod" +
      "e.SendToRequest\032*.Catalyst.Protocol.Rpc." +
      "Node.SendToResponse\022k\n\nSendToFrom\022-.Cata" +
      "lyst.Protocol.Rpc.Node.SendToFromRequest" +
      "\032..Catalyst.Protocol.Rpc.Node.SendToFrom" +
      "Response\022e\n\010SendMany\022+.Catalyst.Protocol" +
      ".Rpc.Node.SendManyRequest\032,.Catalyst.Pro" +
      "tocol.Rpc.Node.SendManyResponse\022q\n\014SendF" +
      "romMany\022/.Catalyst.Protocol.Rpc.Node.Sen" +
      "dFromManyRequest\0320.Catalyst.Protocol.Rpc" +
      ".Node.SendFromManyResponse\022b\n\007AddNode\022*." +
      "Catalyst.Protocol.Rpc.Node.AddNodeReques" +
      "t\032+.Catalyst.Protocol.Rpc.Node.AddNodeRe" +
      "sponse\022n\n\013GetPeerList\022..Catalyst.Protoco" +
      "l.Rpc.Node.GetPeerListRequest\032/.Catalyst" +
      ".Protocol.Rpc.Node.GetPeerListResponse\022n" +
      "\n\013GetPeerInfo\022..Catalyst.Protocol.Rpc.No" +
      "de.GetPeerInfoRequest\032/.Catalyst.Protoco" +
      "l.Rpc.Node.GetPeerInfoResponse\022\203\001\n\022GetCo" +
      "nnectionCount\0225.Catalyst.Protocol.Rpc.No" +
      "de.GetConnectionCountRequest\0326.Catalyst." +
      "Protocol.Rpc.Node.GetConnectionCountResp" +
      "onse\022e\n\010GetDelta\022+.Catalyst.Protocol.Rpc" +
      ".Node.GetDeltaRequest\032,.Catalyst.Protoco" +
      "l.Rpc.Node.GetDeltaResponse\022k\n\nGetMempoo" +
      "l\022-.Catalyst.Protocol.Rpc.Node.GetMempoo" +
      "lRequest\032..Catalyst.Protocol.Rpc.Node.Ge" +
      "tMempoolResponse\022n\n\013SignMessage\022..Cataly" +
      "st.Protocol.Rpc.Node.SignMessageRequest\032" +
      "/.Catalyst.Protocol.Rpc.Node.SignMessage" +
      "Response\022t\n\rVerifyMessage\0220.Catalyst.Pro" +
      "tocol.Rpc.Node.VerifyMessageRequest\0321.Ca" +
      "talyst.Protocol.Rpc.Node.VerifyMessageRe" +
      "sponse\022t\n\rServiceStatus\0220.Catalyst.Proto" +
      "col.Rpc.Node.ServiceStatusRequest\0321.Cata" +
      "lyst.Protocol.Rpc.Node.ServiceStatusResp" +
      "onseb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Catalyst.Protocol.Rpc.Node.Rpc.getDescriptor(),
        }, assigner);
    Catalyst.Protocol.Rpc.Node.Rpc.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
