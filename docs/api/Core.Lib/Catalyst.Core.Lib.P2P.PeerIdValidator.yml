### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator
  commentId: T:Catalyst.Core.Lib.P2P.PeerIdValidator
  id: PeerIdValidator
  parent: Catalyst.Core.Lib.P2P
  children:
  - Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor(Catalyst.Abstractions.Cryptography.ICryptoContext)
  - Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  - Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList{System.String})
  langs:
  - csharp
  - vb
  name: PeerIdValidator
  nameWithType: PeerIdValidator
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerIdValidator
    path: ../src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  summary: "\n@TODO move to SDK\n"
  example: []
  syntax:
    content: 'public sealed class PeerIdValidator : IPeerIdValidator'
    content.vb: >-
      Public NotInheritable Class PeerIdValidator

          Implements IPeerIdValidator
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.P2P.IPeerIdValidator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor(Catalyst.Abstractions.Cryptography.ICryptoContext)
  commentId: M:Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor(Catalyst.Abstractions.Cryptography.ICryptoContext)
  id: '#ctor(Catalyst.Abstractions.Cryptography.ICryptoContext)'
  parent: Catalyst.Core.Lib.P2P.PeerIdValidator
  langs:
  - csharp
  - vb
  name: PeerIdValidator(ICryptoContext)
  nameWithType: PeerIdValidator.PeerIdValidator(ICryptoContext)
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.PeerIdValidator(Catalyst.Abstractions.Cryptography.ICryptoContext)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
    startLine: 40
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public PeerIdValidator(ICryptoContext cryptoContext)
    parameters:
    - id: cryptoContext
      type: Catalyst.Abstractions.Cryptography.ICryptoContext
    content.vb: Public Sub New(cryptoContext As ICryptoContext)
  overload: Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  id: ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  parent: Catalyst.Core.Lib.P2P.PeerIdValidator
  langs:
  - csharp
  - vb
  name: ValidatePeerIdFormat(PeerId)
  nameWithType: PeerIdValidator.ValidatePeerIdFormat(PeerId)
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ValidatePeerIdFormat
    path: ../src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  example: []
  syntax:
    content: public bool ValidatePeerIdFormat(PeerId peerId)
    parameters:
    - id: peerId
      type: Catalyst.Protocol.Peer.PeerId
    return:
      type: System.Boolean
    content.vb: Public Function ValidatePeerIdFormat(peerId As PeerId) As Boolean
  overload: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat*
  implements:
  - Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList{System.String})
  commentId: M:Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList{System.String})
  id: ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList{System.String})
  parent: Catalyst.Core.Lib.P2P.PeerIdValidator
  langs:
  - csharp
  - vb
  name: ValidateRawPidChunks(IReadOnlyList<String>)
  nameWithType: PeerIdValidator.ValidateRawPidChunks(IReadOnlyList<String>)
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList<System.String>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ValidateRawPidChunks
    path: ../src/Catalyst.Core.Lib/P2P/PeerIdValidator.cs
    startLine: 60
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  summary: Validates the raw PID chunks.
  example: []
  syntax:
    content: public void ValidateRawPidChunks(IReadOnlyList<string> peerIdChunks)
    parameters:
    - id: peerIdChunks
      type: System.Collections.Generic.IReadOnlyList{System.String}
      description: The peer identifier chunks.
    content.vb: Public Sub ValidateRawPidChunks(peerIdChunks As IReadOnlyList(Of String))
  overload: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks*
  nameWithType.vb: PeerIdValidator.ValidateRawPidChunks(IReadOnlyList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks(System.Collections.Generic.IReadOnlyList(Of System.String))
  name.vb: ValidateRawPidChunks(IReadOnlyList(Of String))
references:
- uid: Catalyst.Core.Lib.P2P
  commentId: N:Catalyst.Core.Lib.P2P
  name: Catalyst.Core.Lib.P2P
  nameWithType: Catalyst.Core.Lib.P2P
  fullName: Catalyst.Core.Lib.P2P
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.P2P.IPeerIdValidator
  commentId: T:Catalyst.Abstractions.P2P.IPeerIdValidator
  parent: Catalyst.Abstractions.P2P
  name: IPeerIdValidator
  nameWithType: IPeerIdValidator
  fullName: Catalyst.Abstractions.P2P.IPeerIdValidator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerIdValidator.#ctor
  name: PeerIdValidator
  nameWithType: PeerIdValidator.PeerIdValidator
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.PeerIdValidator
- uid: Catalyst.Abstractions.Cryptography.ICryptoContext
  commentId: T:Catalyst.Abstractions.Cryptography.ICryptoContext
  parent: Catalyst.Abstractions.Cryptography
  name: ICryptoContext
  nameWithType: ICryptoContext
  fullName: Catalyst.Abstractions.Cryptography.ICryptoContext
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat
  name: ValidatePeerIdFormat
  nameWithType: PeerIdValidator.ValidatePeerIdFormat
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidatePeerIdFormat
- uid: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  parent: Catalyst.Abstractions.P2P.IPeerIdValidator
  name: ValidatePeerIdFormat(PeerId)
  nameWithType: IPeerIdValidator.ValidatePeerIdFormat(PeerId)
  fullName: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
    name: ValidatePeerIdFormat
    nameWithType: IPeerIdValidator.ValidatePeerIdFormat
    fullName: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat(Catalyst.Protocol.Peer.PeerId)
    name: ValidatePeerIdFormat
    nameWithType: IPeerIdValidator.ValidatePeerIdFormat
    fullName: Catalyst.Abstractions.P2P.IPeerIdValidator.ValidatePeerIdFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
- uid: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks
  name: ValidateRawPidChunks
  nameWithType: PeerIdValidator.ValidateRawPidChunks
  fullName: Catalyst.Core.Lib.P2P.PeerIdValidator.ValidateRawPidChunks
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
