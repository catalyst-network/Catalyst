### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.DAO.PeerDao
  commentId: T:Catalyst.Core.Lib.DAO.PeerDao
  id: PeerDao
  parent: Catalyst.Core.Lib.DAO
  children:
  - Catalyst.Core.Lib.DAO.PeerDao.BlackListed
  - Catalyst.Core.Lib.DAO.PeerDao.Created
  - Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
  - Catalyst.Core.Lib.DAO.PeerDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
  - Catalyst.Core.Lib.DAO.PeerDao.LastSeen
  - Catalyst.Core.Lib.DAO.PeerDao.Modified
  - Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
  - Catalyst.Core.Lib.DAO.PeerDao.Reputation
  - Catalyst.Core.Lib.DAO.PeerDao.Touch
  langs:
  - csharp
  - vb
  name: PeerDao
  nameWithType: PeerDao
  fullName: Catalyst.Core.Lib.DAO.PeerDao
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerDao
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: 'public sealed class PeerDao : DaoBase<Peer, PeerDao>, IMapperInitializer, IValueConverter<Peer, PeerDao>'
    content.vb: >-
      Public NotInheritable Class PeerDao

          Inherits DaoBase(Of Peer, PeerDao)

          Implements IMapperInitializer, IValueConverter(Of Peer, PeerDao)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  implements:
  - Catalyst.Abstractions.DAO.IMapperInitializer
  - AutoMapper.IValueConverter{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  inheritedMembers:
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Id
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToProtoBuff
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToDao(Catalyst.Core.Lib.P2P.Models.Peer)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.P2P.Models.Peer,AutoMapper.ResolutionContext)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.DAO.PeerDao,AutoMapper.ResolutionContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
  id: PeerIdentifier
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: PeerIdentifier
  nameWithType: PeerDao.PeerIdentifier
  fullName: Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerIdentifier
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public PeerIdDao PeerIdentifier { get; set; }
    parameters: []
    return:
      type: Catalyst.Core.Lib.DAO.PeerIdDao
    content.vb: Public Property PeerIdentifier As PeerIdDao
  overload: Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.Reputation
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.Reputation
  id: Reputation
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: Reputation
  nameWithType: PeerDao.Reputation
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Reputation
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Reputation
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public int Reputation { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Reputation As Integer
  overload: Catalyst.Core.Lib.DAO.PeerDao.Reputation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.BlackListed
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.BlackListed
  id: BlackListed
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: BlackListed
  nameWithType: PeerDao.BlackListed
  fullName: Catalyst.Core.Lib.DAO.PeerDao.BlackListed
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BlackListed
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public bool BlackListed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BlackListed As Boolean
  overload: Catalyst.Core.Lib.DAO.PeerDao.BlackListed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.Created
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.Created
  id: Created
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: PeerDao.Created
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Created
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Created
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  summary: "\nWhen peer was first seen by the peer.\n"
  example: []
  syntax:
    content: public DateTime Created { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Created As Date
  overload: Catalyst.Core.Lib.DAO.PeerDao.Created*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.Modified
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.Modified
  id: Modified
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: Modified
  nameWithType: PeerDao.Modified
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Modified
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Modified
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public DateTime? Modified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property Modified As Date?
  overload: Catalyst.Core.Lib.DAO.PeerDao.Modified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.LastSeen
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.LastSeen
  id: LastSeen
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: LastSeen
  nameWithType: PeerDao.LastSeen
  fullName: Catalyst.Core.Lib.DAO.PeerDao.LastSeen
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: LastSeen
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public DateTime LastSeen { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property LastSeen As Date
  overload: Catalyst.Core.Lib.DAO.PeerDao.LastSeen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
  id: IsAwolPeer
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: IsAwolPeer
  nameWithType: PeerDao.IsAwolPeer
  fullName: Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IsAwolPeer
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public bool IsAwolPeer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAwolPeer As Boolean
  overload: Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
  commentId: P:Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
  id: InactiveFor
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: InactiveFor
  nameWithType: PeerDao.InactiveFor
  fullName: Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: InactiveFor
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public TimeSpan InactiveFor { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property InactiveFor As TimeSpan
  overload: Catalyst.Core.Lib.DAO.PeerDao.InactiveFor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.DAO.PeerDao.Touch
  commentId: M:Catalyst.Core.Lib.DAO.PeerDao.Touch
  id: Touch
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: Touch()
  nameWithType: PeerDao.Touch()
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Touch()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Touch
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 53
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public void Touch()
    content.vb: Public Sub Touch
  overload: Catalyst.Core.Lib.DAO.PeerDao.Touch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.PeerDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.PeerDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  id: InitMappers(AutoMapper.IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.PeerDao
  langs:
  - csharp
  - vb
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: PeerDao.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.PeerDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/PeerDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: InitMappers
    path: ../src/Catalyst.Core.Lib/DAO/PeerDao.cs
    startLine: 55
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public override void InitMappers(IMapperConfigurationExpression cfg)
    parameters:
    - id: cfg
      type: AutoMapper.IMapperConfigurationExpression
    content.vb: Public Overrides Sub InitMappers(cfg As IMapperConfigurationExpression)
  overridden: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  overload: Catalyst.Core.Lib.DAO.PeerDao.InitMappers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Lib.DAO
  commentId: N:Catalyst.Core.Lib.DAO
  name: Catalyst.Core.Lib.DAO
  nameWithType: Catalyst.Core.Lib.DAO
  fullName: Catalyst.Core.Lib.DAO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  parent: Catalyst.Core.Lib.DAO
  definition: Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<Peer, PeerDao>
  nameWithType: DaoBase<Peer, PeerDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>
  nameWithType.vb: DaoBase(Of Peer, PeerDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao)
  name.vb: DaoBase(Of Peer, PeerDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO.IMapperInitializer
  commentId: T:Catalyst.Abstractions.DAO.IMapperInitializer
  parent: Catalyst.Abstractions.DAO
  name: IMapperInitializer
  nameWithType: IMapperInitializer
  fullName: Catalyst.Abstractions.DAO.IMapperInitializer
- uid: AutoMapper.IValueConverter{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  commentId: T:AutoMapper.IValueConverter{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  parent: AutoMapper
  definition: AutoMapper.IValueConverter`2
  name: IValueConverter<Peer, PeerDao>
  nameWithType: IValueConverter<Peer, PeerDao>
  fullName: AutoMapper.IValueConverter<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>
  nameWithType.vb: IValueConverter(Of Peer, PeerDao)
  fullName.vb: AutoMapper.IValueConverter(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao)
  name.vb: IValueConverter(Of Peer, PeerDao)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Id
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<Peer, PeerDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.Id
  nameWithType.vb: DaoBase(Of Peer, PeerDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToProtoBuff
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<Peer, PeerDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of Peer, PeerDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<Peer, PeerDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of Peer, PeerDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToDao(Catalyst.Core.Lib.P2P.Models.Peer)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.ToDao(Catalyst.Core.Lib.P2P.Models.Peer)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(Peer)
  nameWithType: DaoBase<Peer, PeerDao>.ToDao(Peer)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.ToDao(Catalyst.Core.Lib.P2P.Models.Peer)
  nameWithType.vb: DaoBase(Of Peer, PeerDao).ToDao(Peer)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).ToDao(Catalyst.Core.Lib.P2P.Models.Peer)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<Peer, PeerDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of Peer, PeerDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<Peer, PeerDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.InitMappers(AutoMapper.IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of Peer, PeerDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).InitMappers(AutoMapper.IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<Peer, PeerDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of Peer, PeerDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.P2P.Models.Peer,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.P2P.Models.Peer,AutoMapper.ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  name: Convert(Peer, ResolutionContext)
  nameWithType: DaoBase<Peer, PeerDao>.Convert(Peer, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.Convert(Catalyst.Core.Lib.P2P.Models.Peer, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of Peer, PeerDao).Convert(Peer, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).Convert(Catalyst.Core.Lib.P2P.Models.Peer, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<Peer, PeerDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of Peer, PeerDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.P2P.Models.Peer
    name: Peer
    nameWithType: Peer
    fullName: Catalyst.Core.Lib.P2P.Models.Peer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.DAO.PeerDao,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}.Convert(Catalyst.Core.Lib.DAO.PeerDao,AutoMapper.ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Core.Lib.P2P.Models.Peer,Catalyst.Core.Lib.DAO.PeerDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  name: Convert(PeerDao, ResolutionContext)
  nameWithType: DaoBase<Peer, PeerDao>.Convert(PeerDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.Convert(Catalyst.Core.Lib.DAO.PeerDao, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of Peer, PeerDao).Convert(PeerDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).Convert(Catalyst.Core.Lib.DAO.PeerDao, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<Peer, PeerDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of Peer, PeerDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Core.Lib.P2P.Models.Peer, Catalyst.Core.Lib.DAO.PeerDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.DAO.DaoBase`2
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<TProto, TDao>
  nameWithType: DaoBase<TProto, TDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>
  nameWithType.vb: DaoBase(Of TProto, TDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao)
  name.vb: DaoBase(Of TProto, TDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO
  commentId: N:Catalyst.Abstractions.DAO
  name: Catalyst.Abstractions.DAO
  nameWithType: Catalyst.Abstractions.DAO
  fullName: Catalyst.Abstractions.DAO
- uid: AutoMapper.IValueConverter`2
  commentId: T:AutoMapper.IValueConverter`2
  isExternal: true
  name: IValueConverter<TSourceMember, TDestinationMember>
  nameWithType: IValueConverter<TSourceMember, TDestinationMember>
  fullName: AutoMapper.IValueConverter<TSourceMember, TDestinationMember>
  nameWithType.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  fullName.vb: AutoMapper.IValueConverter(Of TSourceMember, TDestinationMember)
  name.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<TProto, TDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Id
  nameWithType.vb: DaoBase(Of TProto, TDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<TProto, TDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of TProto, TDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<TProto, TDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of TProto, TDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(TProto)
  nameWithType: DaoBase<TProto, TDao>.ToDao(TProto)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao(TProto)
  nameWithType.vb: DaoBase(Of TProto, TDao).ToDao(TProto)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao(TProto)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<TProto, TDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of TProto, TDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  isExternal: true
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<TProto, TDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers(AutoMapper.IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of TProto, TDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers(AutoMapper.IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<TProto, TDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of TProto, TDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  isExternal: true
  name: Convert(TProto, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TProto, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TProto, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TProto, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TProto, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  isExternal: true
  name: Convert(TDao, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TDao, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TDao, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
  name: PeerIdentifier
  nameWithType: PeerDao.PeerIdentifier
  fullName: Catalyst.Core.Lib.DAO.PeerDao.PeerIdentifier
- uid: Catalyst.Core.Lib.DAO.PeerIdDao
  commentId: T:Catalyst.Core.Lib.DAO.PeerIdDao
  parent: Catalyst.Core.Lib.DAO
  name: PeerIdDao
  nameWithType: PeerIdDao
  fullName: Catalyst.Core.Lib.DAO.PeerIdDao
- uid: Catalyst.Core.Lib.DAO.PeerDao.Reputation*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.Reputation
  name: Reputation
  nameWithType: PeerDao.Reputation
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Reputation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.DAO.PeerDao.BlackListed*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.BlackListed
  name: BlackListed
  nameWithType: PeerDao.BlackListed
  fullName: Catalyst.Core.Lib.DAO.PeerDao.BlackListed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Core.Lib.DAO.PeerDao.Created*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.Created
  name: Created
  nameWithType: PeerDao.Created
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Catalyst.Core.Lib.DAO.PeerDao.Modified*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.Modified
  name: Modified
  nameWithType: PeerDao.Modified
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Modified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.PeerDao.LastSeen*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.LastSeen
  name: LastSeen
  nameWithType: PeerDao.LastSeen
  fullName: Catalyst.Core.Lib.DAO.PeerDao.LastSeen
- uid: Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
  name: IsAwolPeer
  nameWithType: PeerDao.IsAwolPeer
  fullName: Catalyst.Core.Lib.DAO.PeerDao.IsAwolPeer
- uid: Catalyst.Core.Lib.DAO.PeerDao.InactiveFor*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
  name: InactiveFor
  nameWithType: PeerDao.InactiveFor
  fullName: Catalyst.Core.Lib.DAO.PeerDao.InactiveFor
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Catalyst.Core.Lib.DAO.PeerDao.Touch*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.Touch
  name: Touch
  nameWithType: PeerDao.Touch
  fullName: Catalyst.Core.Lib.DAO.PeerDao.Touch
- uid: Catalyst.Core.Lib.DAO.PeerDao.InitMappers*
  commentId: Overload:Catalyst.Core.Lib.DAO.PeerDao.InitMappers
  name: InitMappers
  nameWithType: PeerDao.InitMappers
  fullName: Catalyst.Core.Lib.DAO.PeerDao.InitMappers
- uid: AutoMapper.IMapperConfigurationExpression
  commentId: T:AutoMapper.IMapperConfigurationExpression
  parent: AutoMapper
  isExternal: true
  name: IMapperConfigurationExpression
  nameWithType: IMapperConfigurationExpression
  fullName: AutoMapper.IMapperConfigurationExpression
