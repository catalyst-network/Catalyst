### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.P2P.PeerClient
  commentId: T:Catalyst.Core.Lib.P2P.PeerClient
  id: PeerClient
  parent: Catalyst.Core.Lib.P2P
  children:
  - Catalyst.Core.Lib.P2P.PeerClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory,Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory,Catalyst.Abstractions.P2P.IPeerSettings)
  - Catalyst.Core.Lib.P2P.PeerClient.StartAsync
  langs:
  - csharp
  - vb
  name: PeerClient
  nameWithType: PeerClient
  fullName: Catalyst.Core.Lib.P2P.PeerClient
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerClient
    path: ../src/Catalyst.Core.Lib/P2P/PeerClient.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: 'public sealed class PeerClient : UdpClient, IUdpClient, IPeerClient, ISocketClient, ISocket, IDisposable'
    content.vb: >-
      Public NotInheritable Class PeerClient

          Inherits UdpClient

          Implements IUdpClient, IPeerClient, ISocketClient, ISocket, IDisposable
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Transport.SocketBase
  - Catalyst.Core.Lib.IO.Transport.ClientBase
  - Catalyst.Core.Lib.IO.Transport.UdpClient
  implements:
  - Catalyst.Abstractions.IO.Transport.IUdpClient
  - Catalyst.Abstractions.P2P.IPeerClient
  - Catalyst.Abstractions.IO.Transport.ISocketClient
  - Catalyst.Abstractions.IO.Transport.ISocket
  - System.IDisposable
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}})
  - Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.P2P.PeerClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory,Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory,Catalyst.Abstractions.P2P.IPeerSettings)
  commentId: M:Catalyst.Core.Lib.P2P.PeerClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory,Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory,Catalyst.Abstractions.P2P.IPeerSettings)
  id: '#ctor(Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory,Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory,Catalyst.Abstractions.P2P.IPeerSettings)'
  parent: Catalyst.Core.Lib.P2P.PeerClient
  langs:
  - csharp
  - vb
  name: PeerClient(IUdpClientChannelFactory, IUdpClientEventLoopGroupFactory, IPeerSettings)
  nameWithType: PeerClient.PeerClient(IUdpClientChannelFactory, IUdpClientEventLoopGroupFactory, IPeerSettings)
  fullName: Catalyst.Core.Lib.P2P.PeerClient.PeerClient(Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory, Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory, Catalyst.Abstractions.P2P.IPeerSettings)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/P2P/PeerClient.cs
    startLine: 41
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  example: []
  syntax:
    content: public PeerClient(IUdpClientChannelFactory clientChannelFactory, IUdpClientEventLoopGroupFactory eventLoopGroupFactory, IPeerSettings peerSettings)
    parameters:
    - id: clientChannelFactory
      type: Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory
      description: A factory used to build the appropriate kind of channel for a udp client.
    - id: eventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory
      description: ''
    - id: peerSettings
      type: Catalyst.Abstractions.P2P.IPeerSettings
      description: ''
    content.vb: Public Sub New(clientChannelFactory As IUdpClientChannelFactory, eventLoopGroupFactory As IUdpClientEventLoopGroupFactory, peerSettings As IPeerSettings)
  overload: Catalyst.Core.Lib.P2P.PeerClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.PeerClient.StartAsync
  commentId: M:Catalyst.Core.Lib.P2P.PeerClient.StartAsync
  id: StartAsync
  parent: Catalyst.Core.Lib.P2P.PeerClient
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: PeerClient.StartAsync()
  fullName: Catalyst.Core.Lib.P2P.PeerClient.StartAsync()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StartAsync
    path: ../src/Catalyst.Core.Lib/P2P/PeerClient.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public override Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function StartAsync As Task
  overridden: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  overload: Catalyst.Core.Lib.P2P.PeerClient.StartAsync*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Lib.P2P
  commentId: N:Catalyst.Core.Lib.P2P
  name: Catalyst.Core.Lib.P2P
  nameWithType: Catalyst.Core.Lib.P2P
  fullName: Catalyst.Core.Lib.P2P
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.SocketBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: SocketBase
  nameWithType: SocketBase
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.ClientBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: ClientBase
  nameWithType: ClientBase
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase
- uid: Catalyst.Core.Lib.IO.Transport.UdpClient
  commentId: T:Catalyst.Core.Lib.IO.Transport.UdpClient
  parent: Catalyst.Core.Lib.IO.Transport
  name: UdpClient
  nameWithType: UdpClient
  fullName: Catalyst.Core.Lib.IO.Transport.UdpClient
- uid: Catalyst.Abstractions.IO.Transport.IUdpClient
  commentId: T:Catalyst.Abstractions.IO.Transport.IUdpClient
  parent: Catalyst.Abstractions.IO.Transport
  name: IUdpClient
  nameWithType: IUdpClient
  fullName: Catalyst.Abstractions.IO.Transport.IUdpClient
- uid: Catalyst.Abstractions.P2P.IPeerClient
  commentId: T:Catalyst.Abstractions.P2P.IPeerClient
  parent: Catalyst.Abstractions.P2P
  name: IPeerClient
  nameWithType: IPeerClient
  fullName: Catalyst.Abstractions.P2P.IPeerClient
- uid: Catalyst.Abstractions.IO.Transport.ISocketClient
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocketClient
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocketClient
  nameWithType: ISocketClient
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClient
- uid: Catalyst.Abstractions.IO.Transport.ISocket
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocket
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocket
  nameWithType: ISocket
  fullName: Catalyst.Abstractions.IO.Transport.ISocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}})
  commentId: M:Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  parent: Catalyst.Core.Lib.IO.Transport.ClientBase
  definition: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  name: SendMessage<T>(IMessageDto<T>)
  nameWithType: ClientBase.SendMessage<T>(IMessageDto<T>)
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>)
  nameWithType.vb: ClientBase.SendMessage(Of T)(IMessageDto(Of T))
  fullName.vb: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T))
  name.vb: SendMessage(Of T)(IMessageDto(Of T))
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage<T>
    nameWithType: ClientBase.SendMessage<T>
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage(Of T)
    nameWithType: ClientBase.SendMessage(Of T)
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: ChannelFactory
  nameWithType: SocketBase.ChannelFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: EventLoopGroupFactory
  nameWithType: SocketBase.EventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Channel
  nameWithType: SocketBase.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Dispose()
  nameWithType: SocketBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SocketBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Transport
  commentId: N:Catalyst.Core.Lib.IO.Transport
  name: Catalyst.Core.Lib.IO.Transport
  nameWithType: Catalyst.Core.Lib.IO.Transport
  fullName: Catalyst.Core.Lib.IO.Transport
- uid: Catalyst.Abstractions.IO.Transport
  commentId: N:Catalyst.Abstractions.IO.Transport
  name: Catalyst.Abstractions.IO.Transport
  nameWithType: Catalyst.Abstractions.IO.Transport
  fullName: Catalyst.Abstractions.IO.Transport
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  commentId: M:Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  name: SendMessage<T>(IMessageDto<T>)
  nameWithType: ClientBase.SendMessage<T>(IMessageDto<T>)
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>)
  nameWithType.vb: ClientBase.SendMessage(Of T)(IMessageDto(Of T))
  fullName.vb: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T))
  name.vb: SendMessage(Of T)(IMessageDto(Of T))
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage<T>
    nameWithType: ClientBase.SendMessage<T>
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage(Of T)
    nameWithType: ClientBase.SendMessage(Of T)
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.P2P.PeerClient.#ctor*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerClient.#ctor
  name: PeerClient
  nameWithType: PeerClient.PeerClient
  fullName: Catalyst.Core.Lib.P2P.PeerClient.PeerClient
- uid: Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory
  parent: Catalyst.Abstractions.IO.Transport.Channels
  name: IUdpClientChannelFactory
  nameWithType: IUdpClientChannelFactory
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IUdpClientChannelFactory
- uid: Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IUdpClientEventLoopGroupFactory
  nameWithType: IUdpClientEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IUdpClientEventLoopGroupFactory
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: StartAsync()
  nameWithType: SocketBase.StartAsync()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.P2P.PeerClient.StartAsync*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerClient.StartAsync
  name: StartAsync
  nameWithType: PeerClient.StartAsync
  fullName: Catalyst.Core.Lib.P2P.PeerClient.StartAsync
- uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  parent: Catalyst.Abstractions.IO.Transport.ISocket
  name: StartAsync()
  nameWithType: ISocket.StartAsync()
  fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
