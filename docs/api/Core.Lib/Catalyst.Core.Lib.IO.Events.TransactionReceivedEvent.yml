### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent
  commentId: T:Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent
  id: TransactionReceivedEvent
  parent: Catalyst.Core.Lib.IO.Events
  children:
  - Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor(Catalyst.Abstractions.Validators.ITransactionValidator,Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument},Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger)
  - Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  langs:
  - csharp
  - vb
  name: TransactionReceivedEvent
  nameWithType: TransactionReceivedEvent
  fullName: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TransactionReceivedEvent
    path: ../src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Events
  syntax:
    content: 'public class TransactionReceivedEvent : ITransactionReceivedEvent'
    content.vb: >-
      Public Class TransactionReceivedEvent

          Implements ITransactionReceivedEvent
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor(Catalyst.Abstractions.Validators.ITransactionValidator,Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument},Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger)
  commentId: M:Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor(Catalyst.Abstractions.Validators.ITransactionValidator,Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument},Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger)
  id: '#ctor(Catalyst.Abstractions.Validators.ITransactionValidator,Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument},Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger)'
  parent: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent
  langs:
  - csharp
  - vb
  name: TransactionReceivedEvent(ITransactionValidator, IMempool<MempoolDocument>, IBroadcastManager, IPeerSettings, ILogger)
  nameWithType: TransactionReceivedEvent.TransactionReceivedEvent(ITransactionValidator, IMempool<MempoolDocument>, IBroadcastManager, IPeerSettings, ILogger)
  fullName: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.TransactionReceivedEvent(Catalyst.Abstractions.Validators.ITransactionValidator, Catalyst.Abstractions.Mempool.IMempool<Catalyst.Core.Lib.Mempool.Documents.MempoolDocument>, Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager, Catalyst.Abstractions.P2P.IPeerSettings, Serilog.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Events
  syntax:
    content: public TransactionReceivedEvent(ITransactionValidator validator, IMempool<MempoolDocument> mempool, IBroadcastManager broadcastManager, IPeerSettings peerSettings, ILogger logger)
    parameters:
    - id: validator
      type: Catalyst.Abstractions.Validators.ITransactionValidator
    - id: mempool
      type: Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument}
    - id: broadcastManager
      type: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
    - id: peerSettings
      type: Catalyst.Abstractions.P2P.IPeerSettings
    - id: logger
      type: Serilog.ILogger
    content.vb: Public Sub New(validator As ITransactionValidator, mempool As IMempool(Of MempoolDocument), broadcastManager As IBroadcastManager, peerSettings As IPeerSettings, logger As ILogger)
  overload: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor*
  nameWithType.vb: TransactionReceivedEvent.TransactionReceivedEvent(ITransactionValidator, IMempool(Of MempoolDocument), IBroadcastManager, IPeerSettings, ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.TransactionReceivedEvent(Catalyst.Abstractions.Validators.ITransactionValidator, Catalyst.Abstractions.Mempool.IMempool(Of Catalyst.Core.Lib.Mempool.Documents.MempoolDocument), Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager, Catalyst.Abstractions.P2P.IPeerSettings, Serilog.ILogger)
  name.vb: TransactionReceivedEvent(ITransactionValidator, IMempool(Of MempoolDocument), IBroadcastManager, IPeerSettings, ILogger)
- uid: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  id: OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent
  langs:
  - csharp
  - vb
  name: OnTransactionReceived(ProtocolMessage)
  nameWithType: TransactionReceivedEvent.OnTransactionReceived(ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: OnTransactionReceived
    path: ../src/Catalyst.Core.Lib/IO/Events/TransactionReceivedEvent.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Events
  syntax:
    content: public ResponseCode OnTransactionReceived(ProtocolMessage protocolMessage)
    parameters:
    - id: protocolMessage
      type: Catalyst.Protocol.Wire.ProtocolMessage
    return:
      type: Catalyst.Protocol.Rpc.Node.ResponseCode
    content.vb: Public Function OnTransactionReceived(protocolMessage As ProtocolMessage) As ResponseCode
  overload: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived*
  implements:
  - Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.IO.Events
  commentId: N:Catalyst.Core.Lib.IO.Events
  name: Catalyst.Core.Lib.IO.Events
  nameWithType: Catalyst.Core.Lib.IO.Events
  fullName: Catalyst.Core.Lib.IO.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent
  commentId: T:Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent
  parent: Catalyst.Abstractions.IO.Events
  name: ITransactionReceivedEvent
  nameWithType: ITransactionReceivedEvent
  fullName: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Events
  commentId: N:Catalyst.Abstractions.IO.Events
  name: Catalyst.Abstractions.IO.Events
  nameWithType: Catalyst.Abstractions.IO.Events
  fullName: Catalyst.Abstractions.IO.Events
- uid: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.#ctor
  name: TransactionReceivedEvent
  nameWithType: TransactionReceivedEvent.TransactionReceivedEvent
  fullName: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.TransactionReceivedEvent
- uid: Catalyst.Abstractions.Validators.ITransactionValidator
  commentId: T:Catalyst.Abstractions.Validators.ITransactionValidator
  parent: Catalyst.Abstractions.Validators
  name: ITransactionValidator
  nameWithType: ITransactionValidator
  fullName: Catalyst.Abstractions.Validators.ITransactionValidator
- uid: Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument}
  commentId: T:Catalyst.Abstractions.Mempool.IMempool{Catalyst.Core.Lib.Mempool.Documents.MempoolDocument}
  parent: Catalyst.Abstractions.Mempool
  definition: Catalyst.Abstractions.Mempool.IMempool`1
  name: IMempool<MempoolDocument>
  nameWithType: IMempool<MempoolDocument>
  fullName: Catalyst.Abstractions.Mempool.IMempool<Catalyst.Core.Lib.Mempool.Documents.MempoolDocument>
  nameWithType.vb: IMempool(Of MempoolDocument)
  fullName.vb: Catalyst.Abstractions.Mempool.IMempool(Of Catalyst.Core.Lib.Mempool.Documents.MempoolDocument)
  name.vb: IMempool(Of MempoolDocument)
  spec.csharp:
  - uid: Catalyst.Abstractions.Mempool.IMempool`1
    name: IMempool
    nameWithType: IMempool
    fullName: Catalyst.Abstractions.Mempool.IMempool
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.Mempool.Documents.MempoolDocument
    name: MempoolDocument
    nameWithType: MempoolDocument
    fullName: Catalyst.Core.Lib.Mempool.Documents.MempoolDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.Mempool.IMempool`1
    name: IMempool
    nameWithType: IMempool
    fullName: Catalyst.Abstractions.Mempool.IMempool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.Mempool.Documents.MempoolDocument
    name: MempoolDocument
    nameWithType: MempoolDocument
    fullName: Catalyst.Core.Lib.Mempool.Documents.MempoolDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  commentId: T:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: IBroadcastManager
  nameWithType: IBroadcastManager
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Abstractions.Validators
  commentId: N:Catalyst.Abstractions.Validators
  name: Catalyst.Abstractions.Validators
  nameWithType: Catalyst.Abstractions.Validators
  fullName: Catalyst.Abstractions.Validators
- uid: Catalyst.Abstractions.Mempool.IMempool`1
  commentId: T:Catalyst.Abstractions.Mempool.IMempool`1
  name: IMempool<T>
  nameWithType: IMempool<T>
  fullName: Catalyst.Abstractions.Mempool.IMempool<T>
  nameWithType.vb: IMempool(Of T)
  fullName.vb: Catalyst.Abstractions.Mempool.IMempool(Of T)
  name.vb: IMempool(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.Mempool.IMempool`1
    name: IMempool
    nameWithType: IMempool
    fullName: Catalyst.Abstractions.Mempool.IMempool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.Mempool.IMempool`1
    name: IMempool
    nameWithType: IMempool
    fullName: Catalyst.Abstractions.Mempool.IMempool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.Mempool
  commentId: N:Catalyst.Abstractions.Mempool
  name: Catalyst.Abstractions.Mempool
  nameWithType: Catalyst.Abstractions.Mempool
  fullName: Catalyst.Abstractions.Mempool
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  commentId: N:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  nameWithType: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived*
  commentId: Overload:Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived
  name: OnTransactionReceived
  nameWithType: TransactionReceivedEvent.OnTransactionReceived
  fullName: Catalyst.Core.Lib.IO.Events.TransactionReceivedEvent.OnTransactionReceived
- uid: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent
  name: OnTransactionReceived(ProtocolMessage)
  nameWithType: ITransactionReceivedEvent.OnTransactionReceived(ProtocolMessage)
  fullName: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
    name: OnTransactionReceived
    nameWithType: ITransactionReceivedEvent.OnTransactionReceived
    fullName: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived(Catalyst.Protocol.Wire.ProtocolMessage)
    name: OnTransactionReceived
    nameWithType: ITransactionReceivedEvent.OnTransactionReceived
    fullName: Catalyst.Abstractions.IO.Events.ITransactionReceivedEvent.OnTransactionReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: Catalyst.Protocol.Rpc.Node.ResponseCode
  commentId: T:Catalyst.Protocol.Rpc.Node.ResponseCode
  parent: Catalyst.Protocol.Rpc.Node
  name: ResponseCode
  nameWithType: ResponseCode
  fullName: Catalyst.Protocol.Rpc.Node.ResponseCode
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: Catalyst.Protocol.Rpc.Node
  commentId: N:Catalyst.Protocol.Rpc.Node
  name: Catalyst.Protocol.Rpc.Node
  nameWithType: Catalyst.Protocol.Rpc.Node
  fullName: Catalyst.Protocol.Rpc.Node
