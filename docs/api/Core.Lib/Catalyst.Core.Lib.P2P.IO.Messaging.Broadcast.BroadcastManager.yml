### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  commentId: T:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  id: BroadcastManager
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  children:
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor(Catalyst.Core.Lib.P2P.Repository.IPeerRepository,Catalyst.Abstractions.P2P.IPeerSettings,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.P2P.IPeerClient,Catalyst.Abstractions.KeySigner.IKeySigner,Serilog.ILogger)
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  - Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  langs:
  - csharp
  - vb
  name: BroadcastManager
  nameWithType: BroadcastManager
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BroadcastManager
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  summary: "\nThe Gossip Manager used to broadcast and receive gossip messages\n"
  example: []
  syntax:
    content: 'public sealed class BroadcastManager : IBroadcastManager'
    content.vb: >-
      Public NotInheritable Class BroadcastManager

          Implements IBroadcastManager
  seealso:
  - linkId: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
    commentId: T:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
  commentId: P:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
  id: MaxGossipPeersPerRound
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: MaxGossipPeersPerRound
  nameWithType: BroadcastManager.MaxGossipPeersPerRound
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MaxGossipPeersPerRound
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 79
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  summary: The maximum peers the node can gossip to for a single message, per gossip cycle
  example: []
  syntax:
    content: public static int MaxGossipPeersPerRound { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property MaxGossipPeersPerRound As Integer
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  commentId: P:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  id: BroadcastOwnerMaximumGossipPeersPerRound
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: BroadcastOwnerMaximumGossipPeersPerRound
  nameWithType: BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BroadcastOwnerMaximumGossipPeersPerRound
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 82
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  summary: The maximum peers a broadcast originator can gossip to for a single message, per gossip cycle.
  example: []
  syntax:
    content: public static int BroadcastOwnerMaximumGossipPeersPerRound { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property BroadcastOwnerMaximumGossipPeersPerRound As Integer
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor(Catalyst.Core.Lib.P2P.Repository.IPeerRepository,Catalyst.Abstractions.P2P.IPeerSettings,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.P2P.IPeerClient,Catalyst.Abstractions.KeySigner.IKeySigner,Serilog.ILogger)
  commentId: M:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor(Catalyst.Core.Lib.P2P.Repository.IPeerRepository,Catalyst.Abstractions.P2P.IPeerSettings,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.P2P.IPeerClient,Catalyst.Abstractions.KeySigner.IKeySigner,Serilog.ILogger)
  id: '#ctor(Catalyst.Core.Lib.P2P.Repository.IPeerRepository,Catalyst.Abstractions.P2P.IPeerSettings,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.P2P.IPeerClient,Catalyst.Abstractions.KeySigner.IKeySigner,Serilog.ILogger)'
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: BroadcastManager(IPeerRepository, IPeerSettings, IMemoryCache, IPeerClient, IKeySigner, ILogger)
  nameWithType: BroadcastManager.BroadcastManager(IPeerRepository, IPeerSettings, IMemoryCache, IPeerClient, IKeySigner, ILogger)
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastManager(Catalyst.Core.Lib.P2P.Repository.IPeerRepository, Catalyst.Abstractions.P2P.IPeerSettings, Microsoft.Extensions.Caching.Memory.IMemoryCache, Catalyst.Abstractions.P2P.IPeerClient, Catalyst.Abstractions.KeySigner.IKeySigner, Serilog.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 91
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  summary: Initializes a new instance of the <xref href="Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BroadcastManager(IPeerRepository peers, IPeerSettings peerSettings, IMemoryCache memoryCache, IPeerClient peerClient, IKeySigner signer, ILogger logger)
    parameters:
    - id: peers
      type: Catalyst.Core.Lib.P2P.Repository.IPeerRepository
      description: The peers.
    - id: peerSettings
      type: Catalyst.Abstractions.P2P.IPeerSettings
      description: Peer settings
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
      description: The memory cache.
    - id: peerClient
      type: Catalyst.Abstractions.P2P.IPeerClient
      description: The peer client.
    - id: signer
      type: Catalyst.Abstractions.KeySigner.IKeySigner
      description: The signature writer
    - id: logger
      type: Serilog.ILogger
      description: ''
    content.vb: Public Sub New(peers As IPeerRepository, peerSettings As IPeerSettings, memoryCache As IMemoryCache, peerClient As IPeerClient, signer As IKeySigner, logger As ILogger)
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  id: BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: BroadcastAsync(ProtocolMessage)
  nameWithType: BroadcastManager.BroadcastAsync(ProtocolMessage)
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BroadcastAsync
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 131
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  example: []
  syntax:
    content: public Task BroadcastAsync(ProtocolMessage message)
    parameters:
    - id: message
      type: Catalyst.Protocol.Wire.ProtocolMessage
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function BroadcastAsync(message As ProtocolMessage) As Task
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync*
  implements:
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  id: ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: ReceiveAsync(ProtocolMessage)
  nameWithType: BroadcastManager.ReceiveAsync(ProtocolMessage)
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReceiveAsync
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 151
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  example: []
  syntax:
    content: public Task ReceiveAsync(ProtocolMessage protocolSignedMessage)
    parameters:
    - id: protocolSignedMessage
      type: Catalyst.Protocol.Wire.ProtocolMessage
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ReceiveAsync(protocolSignedMessage As ProtocolMessage) As Task
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync*
  implements:
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  commentId: M:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  id: RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  parent: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  langs:
  - csharp
  - vb
  name: RemoveSignedBroadcastMessageData(ICorrelationId)
  nameWithType: BroadcastManager.RemoveSignedBroadcastMessageData(ICorrelationId)
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RemoveSignedBroadcastMessageData
    path: ../src/Catalyst.Core.Lib/P2P/IO/Messaging/Broadcast/BroadcastManager.cs
    startLine: 162
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  example: []
  syntax:
    content: public void RemoveSignedBroadcastMessageData(ICorrelationId correlationId)
    parameters:
    - id: correlationId
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
    content.vb: Public Sub RemoveSignedBroadcastMessageData(correlationId As ICorrelationId)
  overload: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData*
  implements:
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  commentId: T:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: IBroadcastManager
  nameWithType: IBroadcastManager
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  commentId: N:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  name: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  nameWithType: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  commentId: N:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  nameWithType: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
  name: MaxGossipPeersPerRound
  nameWithType: BroadcastManager.MaxGossipPeersPerRound
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.MaxGossipPeersPerRound
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  name: BroadcastOwnerMaximumGossipPeersPerRound
  nameWithType: BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastOwnerMaximumGossipPeersPerRound
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  commentId: T:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
  name: BroadcastManager
  nameWithType: BroadcastManager
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.#ctor
  name: BroadcastManager
  nameWithType: BroadcastManager.BroadcastManager
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastManager
- uid: Catalyst.Core.Lib.P2P.Repository.IPeerRepository
  commentId: T:Catalyst.Core.Lib.P2P.Repository.IPeerRepository
  parent: Catalyst.Core.Lib.P2P.Repository
  name: IPeerRepository
  nameWithType: IPeerRepository
  fullName: Catalyst.Core.Lib.P2P.Repository.IPeerRepository
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Catalyst.Abstractions.P2P.IPeerClient
  commentId: T:Catalyst.Abstractions.P2P.IPeerClient
  parent: Catalyst.Abstractions.P2P
  name: IPeerClient
  nameWithType: IPeerClient
  fullName: Catalyst.Abstractions.P2P.IPeerClient
- uid: Catalyst.Abstractions.KeySigner.IKeySigner
  commentId: T:Catalyst.Abstractions.KeySigner.IKeySigner
  parent: Catalyst.Abstractions.KeySigner
  name: IKeySigner
  nameWithType: IKeySigner
  fullName: Catalyst.Abstractions.KeySigner.IKeySigner
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Core.Lib.P2P.Repository
  commentId: N:Catalyst.Core.Lib.P2P.Repository
  name: Catalyst.Core.Lib.P2P.Repository
  nameWithType: Catalyst.Core.Lib.P2P.Repository
  fullName: Catalyst.Core.Lib.P2P.Repository
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Catalyst.Abstractions.KeySigner
  commentId: N:Catalyst.Abstractions.KeySigner
  name: Catalyst.Abstractions.KeySigner
  nameWithType: Catalyst.Abstractions.KeySigner
  fullName: Catalyst.Abstractions.KeySigner
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync
  name: BroadcastAsync
  nameWithType: BroadcastManager.BroadcastAsync
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.BroadcastAsync
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  name: BroadcastAsync(ProtocolMessage)
  nameWithType: IBroadcastManager.BroadcastAsync(ProtocolMessage)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
    name: BroadcastAsync
    nameWithType: IBroadcastManager.BroadcastAsync
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
    name: BroadcastAsync
    nameWithType: IBroadcastManager.BroadcastAsync
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync
  name: ReceiveAsync
  nameWithType: BroadcastManager.ReceiveAsync
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.ReceiveAsync
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  name: ReceiveAsync(ProtocolMessage)
  nameWithType: IBroadcastManager.ReceiveAsync(ProtocolMessage)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
    name: ReceiveAsync
    nameWithType: IBroadcastManager.ReceiveAsync
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
    name: ReceiveAsync
    nameWithType: IBroadcastManager.ReceiveAsync
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData*
  commentId: Overload:Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData
  name: RemoveSignedBroadcastMessageData
  nameWithType: BroadcastManager.RemoveSignedBroadcastMessageData
  fullName: Catalyst.Core.Lib.P2P.IO.Messaging.Broadcast.BroadcastManager.RemoveSignedBroadcastMessageData
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  name: RemoveSignedBroadcastMessageData(ICorrelationId)
  nameWithType: IBroadcastManager.RemoveSignedBroadcastMessageData(ICorrelationId)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
    name: RemoveSignedBroadcastMessageData
    nameWithType: IBroadcastManager.RemoveSignedBroadcastMessageData
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
    name: ICorrelationId
    nameWithType: ICorrelationId
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
    name: RemoveSignedBroadcastMessageData
    nameWithType: IBroadcastManager.RemoveSignedBroadcastMessageData
    fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
    name: ICorrelationId
    nameWithType: ICorrelationId
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  name: ICorrelationId
  nameWithType: ICorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Correlation
  commentId: N:Catalyst.Abstractions.IO.Messaging.Correlation
  name: Catalyst.Abstractions.IO.Messaging.Correlation
  nameWithType: Catalyst.Abstractions.IO.Messaging.Correlation
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation
