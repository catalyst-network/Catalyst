### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter
  commentId: T:Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter
  id: DfsHashToByteStringConverter
  parent: Catalyst.Core.Lib.DAO.Converters
  children:
  - Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert(System.String,AutoMapper.ResolutionContext)
  langs:
  - csharp
  - vb
  name: DfsHashToByteStringConverter
  nameWithType: DfsHashToByteStringConverter
  fullName: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/Converters/DfsHashByteStringConverters.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DfsHashToByteStringConverter
    path: ../src/Catalyst.Core.Lib/DAO/Converters/DfsHashByteStringConverters.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO.Converters
  syntax:
    content: 'public class DfsHashToByteStringConverter : IValueConverter<string, ByteString>'
    content.vb: >-
      Public Class DfsHashToByteStringConverter

          Implements IValueConverter(Of String, ByteString)
  inheritance:
  - System.Object
  implements:
  - AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert(System.String,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert(System.String,AutoMapper.ResolutionContext)
  id: Convert(System.String,AutoMapper.ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter
  langs:
  - csharp
  - vb
  name: Convert(String, ResolutionContext)
  nameWithType: DfsHashToByteStringConverter.Convert(String, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert(System.String, AutoMapper.ResolutionContext)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/Converters/DfsHashByteStringConverters.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Convert
    path: ../src/Catalyst.Core.Lib/DAO/Converters/DfsHashByteStringConverters.cs
    startLine: 40
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO.Converters
  syntax:
    content: public ByteString Convert(string sourceMember, ResolutionContext context)
    parameters:
    - id: sourceMember
      type: System.String
    - id: context
      type: AutoMapper.ResolutionContext
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Function Convert(sourceMember As String, context As ResolutionContext) As ByteString
  overload: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert*
  implements:
  - AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}.Convert(System.String,AutoMapper.ResolutionContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.DAO.Converters
  commentId: N:Catalyst.Core.Lib.DAO.Converters
  name: Catalyst.Core.Lib.DAO.Converters
  nameWithType: Catalyst.Core.Lib.DAO.Converters
  fullName: Catalyst.Core.Lib.DAO.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}
  commentId: T:AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}
  parent: AutoMapper
  definition: AutoMapper.IValueConverter`2
  name: IValueConverter<String, ByteString>
  nameWithType: IValueConverter<String, ByteString>
  fullName: AutoMapper.IValueConverter<System.String, Google.Protobuf.ByteString>
  nameWithType.vb: IValueConverter(Of String, ByteString)
  fullName.vb: AutoMapper.IValueConverter(Of System.String, Google.Protobuf.ByteString)
  name.vb: IValueConverter(Of String, ByteString)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Protobuf.ByteString
    name: ByteString
    nameWithType: ByteString
    fullName: Google.Protobuf.ByteString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoMapper.IValueConverter`2
  commentId: T:AutoMapper.IValueConverter`2
  isExternal: true
  name: IValueConverter<TSourceMember, TDestinationMember>
  nameWithType: IValueConverter<TSourceMember, TDestinationMember>
  fullName: AutoMapper.IValueConverter<TSourceMember, TDestinationMember>
  nameWithType.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  fullName.vb: AutoMapper.IValueConverter(Of TSourceMember, TDestinationMember)
  name.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert*
  commentId: Overload:Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert
  name: Convert
  nameWithType: DfsHashToByteStringConverter.Convert
  fullName: Catalyst.Core.Lib.DAO.Converters.DfsHashToByteStringConverter.Convert
- uid: AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}.Convert(System.String,AutoMapper.ResolutionContext)
  commentId: M:AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}.Convert(System.String,AutoMapper.ResolutionContext)
  parent: AutoMapper.IValueConverter{System.String,Google.Protobuf.ByteString}
  definition: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
  name: Convert(String, ResolutionContext)
  nameWithType: IValueConverter<String, ByteString>.Convert(String, ResolutionContext)
  fullName: AutoMapper.IValueConverter<System.String, Google.Protobuf.ByteString>.Convert(System.String, AutoMapper.ResolutionContext)
  nameWithType.vb: IValueConverter(Of String, ByteString).Convert(String, ResolutionContext)
  fullName.vb: AutoMapper.IValueConverter(Of System.String, Google.Protobuf.ByteString).Convert(System.String, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: IValueConverter<String, ByteString>.Convert
    fullName: AutoMapper.IValueConverter<System.String, Google.Protobuf.ByteString>.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: IValueConverter(Of String, ByteString).Convert
    fullName: AutoMapper.IValueConverter(Of System.String, Google.Protobuf.ByteString).Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoMapper.ResolutionContext
  commentId: T:AutoMapper.ResolutionContext
  parent: AutoMapper
  isExternal: true
  name: ResolutionContext
  nameWithType: ResolutionContext
  fullName: AutoMapper.ResolutionContext
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
  commentId: M:AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
  isExternal: true
  name: Convert(TSourceMember, ResolutionContext)
  nameWithType: IValueConverter<TSourceMember, TDestinationMember>.Convert(TSourceMember, ResolutionContext)
  fullName: AutoMapper.IValueConverter<TSourceMember, TDestinationMember>.Convert(TSourceMember, AutoMapper.ResolutionContext)
  nameWithType.vb: IValueConverter(Of TSourceMember, TDestinationMember).Convert(TSourceMember, ResolutionContext)
  fullName.vb: AutoMapper.IValueConverter(Of TSourceMember, TDestinationMember).Convert(TSourceMember, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: IValueConverter<TSourceMember, TDestinationMember>.Convert
    fullName: AutoMapper.IValueConverter<TSourceMember, TDestinationMember>.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoMapper.IValueConverter`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: IValueConverter(Of TSourceMember, TDestinationMember).Convert
    fullName: AutoMapper.IValueConverter(Of TSourceMember, TDestinationMember).Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
