### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  commentId: T:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  id: ConsolePasswordReader
  parent: Catalyst.Core.Lib.Cryptography
  children:
  - Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor(Catalyst.Abstractions.Cli.IUserOutput,Catalyst.Abstractions.Cli.IUserInput)
  - Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.MaxLength
  - Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword(System.String)
  langs:
  - csharp
  - vb
  name: ConsolePasswordReader
  nameWithType: ConsolePasswordReader
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConsolePasswordReader
    path: ../src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: 'public class ConsolePasswordReader : IPasswordReader'
    content.vb: >-
      Public Class ConsolePasswordReader

          Implements IPasswordReader
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Cryptography.IPasswordReader
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.MaxLength
  commentId: F:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.MaxLength
  id: MaxLength
  parent: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: ConsolePasswordReader.MaxLength
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.MaxLength
  type: Field
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MaxLength
    path: ../src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public static readonly int MaxLength
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MaxLength As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor(Catalyst.Abstractions.Cli.IUserOutput,Catalyst.Abstractions.Cli.IUserInput)
  commentId: M:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor(Catalyst.Abstractions.Cli.IUserOutput,Catalyst.Abstractions.Cli.IUserInput)
  id: '#ctor(Catalyst.Abstractions.Cli.IUserOutput,Catalyst.Abstractions.Cli.IUserInput)'
  parent: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  langs:
  - csharp
  - vb
  name: ConsolePasswordReader(IUserOutput, IUserInput)
  nameWithType: ConsolePasswordReader.ConsolePasswordReader(IUserOutput, IUserInput)
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ConsolePasswordReader(Catalyst.Abstractions.Cli.IUserOutput, Catalyst.Abstractions.Cli.IUserInput)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public ConsolePasswordReader(IUserOutput userOutput, IUserInput userInput)
    parameters:
    - id: userOutput
      type: Catalyst.Abstractions.Cli.IUserOutput
    - id: userInput
      type: Catalyst.Abstractions.Cli.IUserInput
    content.vb: Public Sub New(userOutput As IUserOutput, userInput As IUserInput)
  overload: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword(System.String)
  commentId: M:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword(System.String)
  id: ReadSecurePassword(System.String)
  parent: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader
  langs:
  - csharp
  - vb
  name: ReadSecurePassword(String)
  nameWithType: ConsolePasswordReader.ReadSecurePassword(String)
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadSecurePassword
    path: ../src/Catalyst.Core.Lib/Cryptography/ConsolePasswordReader.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public SecureString ReadSecurePassword(string prompt)
    parameters:
    - id: prompt
      type: System.String
    return:
      type: System.Security.SecureString
    content.vb: Public Function ReadSecurePassword(prompt As String) As SecureString
  overload: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword*
  implements:
  - Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.Cryptography
  commentId: N:Catalyst.Core.Lib.Cryptography
  name: Catalyst.Core.Lib.Cryptography
  nameWithType: Catalyst.Core.Lib.Cryptography
  fullName: Catalyst.Core.Lib.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Cryptography.IPasswordReader
  commentId: T:Catalyst.Abstractions.Cryptography.IPasswordReader
  parent: Catalyst.Abstractions.Cryptography
  name: IPasswordReader
  nameWithType: IPasswordReader
  fullName: Catalyst.Abstractions.Cryptography.IPasswordReader
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.#ctor
  name: ConsolePasswordReader
  nameWithType: ConsolePasswordReader.ConsolePasswordReader
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ConsolePasswordReader
- uid: Catalyst.Abstractions.Cli.IUserOutput
  commentId: T:Catalyst.Abstractions.Cli.IUserOutput
  parent: Catalyst.Abstractions.Cli
  name: IUserOutput
  nameWithType: IUserOutput
  fullName: Catalyst.Abstractions.Cli.IUserOutput
- uid: Catalyst.Abstractions.Cli.IUserInput
  commentId: T:Catalyst.Abstractions.Cli.IUserInput
  parent: Catalyst.Abstractions.Cli
  name: IUserInput
  nameWithType: IUserInput
  fullName: Catalyst.Abstractions.Cli.IUserInput
- uid: Catalyst.Abstractions.Cli
  commentId: N:Catalyst.Abstractions.Cli
  name: Catalyst.Abstractions.Cli
  nameWithType: Catalyst.Abstractions.Cli
  fullName: Catalyst.Abstractions.Cli
- uid: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword
  name: ReadSecurePassword
  nameWithType: ConsolePasswordReader.ReadSecurePassword
  fullName: Catalyst.Core.Lib.Cryptography.ConsolePasswordReader.ReadSecurePassword
- uid: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
  commentId: M:Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
  parent: Catalyst.Abstractions.Cryptography.IPasswordReader
  isExternal: true
  name: ReadSecurePassword(String)
  nameWithType: IPasswordReader.ReadSecurePassword(String)
  fullName: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
    name: ReadSecurePassword
    nameWithType: IPasswordReader.ReadSecurePassword
    fullName: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword(System.String)
    name: ReadSecurePassword
    nameWithType: IPasswordReader.ReadSecurePassword
    fullName: Catalyst.Abstractions.Cryptography.IPasswordReader.ReadSecurePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
