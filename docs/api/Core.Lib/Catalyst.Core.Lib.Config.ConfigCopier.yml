### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Config.ConfigCopier
  commentId: T:Catalyst.Core.Lib.Config.ConfigCopier
  id: ConfigCopier
  parent: Catalyst.Core.Lib.Config
  children:
  - Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles(Catalyst.Protocol.Network.NetworkType,System.String)
  - Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  langs:
  - csharp
  - vb
  name: ConfigCopier
  nameWithType: ConfigCopier
  fullName: Catalyst.Core.Lib.Config.ConfigCopier
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigCopier.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfigCopier
    path: ../src/Catalyst.Core.Lib/Config/ConfigCopier.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: 'public abstract class ConfigCopier : IConfigCopier'
    content.vb: >-
      Public MustInherit Class ConfigCopier

          Implements IConfigCopier
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Config.IConfigCopier
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  commentId: M:Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  id: RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  parent: Catalyst.Core.Lib.Config.ConfigCopier
  langs:
  - csharp
  - vb
  name: RunConfigStartUp(String, NetworkType, String, Boolean, String)
  nameWithType: ConfigCopier.RunConfigStartUp(String, NetworkType, String, Boolean, String)
  fullName: Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp(System.String, Catalyst.Protocol.Network.NetworkType, System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigCopier.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RunConfigStartUp
    path: ../src/Catalyst.Core.Lib/Config/ConfigCopier.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  example: []
  syntax:
    content: public void RunConfigStartUp(string dataDir, NetworkType networkType = NetworkType.Devnet, string sourceFolder = null, bool overwrite = false, string overrideNetworkFile = null)
    parameters:
    - id: dataDir
      type: System.String
    - id: networkType
      type: Catalyst.Protocol.Network.NetworkType
    - id: sourceFolder
      type: System.String
    - id: overwrite
      type: System.Boolean
    - id: overrideNetworkFile
      type: System.String
    content.vb: Public Sub RunConfigStartUp(dataDir As String, networkType As NetworkType = NetworkType.Devnet, sourceFolder As String = Nothing, overwrite As Boolean = False, overrideNetworkFile As String = Nothing)
  overload: Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp*
  implements:
  - Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles(Catalyst.Protocol.Network.NetworkType,System.String)
  commentId: M:Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles(Catalyst.Protocol.Network.NetworkType,System.String)
  id: RequiredConfigFiles(Catalyst.Protocol.Network.NetworkType,System.String)
  parent: Catalyst.Core.Lib.Config.ConfigCopier
  langs:
  - csharp
  - vb
  name: RequiredConfigFiles(NetworkType, String)
  nameWithType: ConfigCopier.RequiredConfigFiles(NetworkType, String)
  fullName: Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles(Catalyst.Protocol.Network.NetworkType, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigCopier.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RequiredConfigFiles
    path: ../src/Catalyst.Core.Lib/Config/ConfigCopier.cs
    startLine: 87
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: protected abstract IEnumerable<string> RequiredConfigFiles(NetworkType network, string overrideNetworkFile = null)
    parameters:
    - id: network
      type: Catalyst.Protocol.Network.NetworkType
    - id: overrideNetworkFile
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected MustOverride Function RequiredConfigFiles(network As NetworkType, overrideNetworkFile As String = Nothing) As IEnumerable(Of String)
  overload: Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Catalyst.Core.Lib.Config
  commentId: N:Catalyst.Core.Lib.Config
  name: Catalyst.Core.Lib.Config
  nameWithType: Catalyst.Core.Lib.Config
  fullName: Catalyst.Core.Lib.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Config.IConfigCopier
  commentId: T:Catalyst.Abstractions.Config.IConfigCopier
  parent: Catalyst.Abstractions.Config
  name: IConfigCopier
  nameWithType: IConfigCopier
  fullName: Catalyst.Abstractions.Config.IConfigCopier
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Config
  commentId: N:Catalyst.Abstractions.Config
  name: Catalyst.Abstractions.Config
  nameWithType: Catalyst.Abstractions.Config
  fullName: Catalyst.Abstractions.Config
- uid: Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp*
  commentId: Overload:Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp
  name: RunConfigStartUp
  nameWithType: ConfigCopier.RunConfigStartUp
  fullName: Catalyst.Core.Lib.Config.ConfigCopier.RunConfigStartUp
- uid: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  commentId: M:Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
  parent: Catalyst.Abstractions.Config.IConfigCopier
  isExternal: true
  name: RunConfigStartUp(String, NetworkType, String, Boolean, String)
  nameWithType: IConfigCopier.RunConfigStartUp(String, NetworkType, String, Boolean, String)
  fullName: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String, Catalyst.Protocol.Network.NetworkType, System.String, System.Boolean, System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
    name: RunConfigStartUp
    nameWithType: IConfigCopier.RunConfigStartUp
    fullName: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Network.NetworkType
    name: NetworkType
    nameWithType: NetworkType
    fullName: Catalyst.Protocol.Network.NetworkType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp(System.String,Catalyst.Protocol.Network.NetworkType,System.String,System.Boolean,System.String)
    name: RunConfigStartUp
    nameWithType: IConfigCopier.RunConfigStartUp
    fullName: Catalyst.Abstractions.Config.IConfigCopier.RunConfigStartUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Network.NetworkType
    name: NetworkType
    nameWithType: NetworkType
    fullName: Catalyst.Protocol.Network.NetworkType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Protocol.Network.NetworkType
  commentId: T:Catalyst.Protocol.Network.NetworkType
  parent: Catalyst.Protocol.Network
  name: NetworkType
  nameWithType: NetworkType
  fullName: Catalyst.Protocol.Network.NetworkType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Network
  commentId: N:Catalyst.Protocol.Network
  name: Catalyst.Protocol.Network
  nameWithType: Catalyst.Protocol.Network
  fullName: Catalyst.Protocol.Network
- uid: Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles*
  commentId: Overload:Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles
  name: RequiredConfigFiles
  nameWithType: ConfigCopier.RequiredConfigFiles
  fullName: Catalyst.Core.Lib.Config.ConfigCopier.RequiredConfigFiles
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
