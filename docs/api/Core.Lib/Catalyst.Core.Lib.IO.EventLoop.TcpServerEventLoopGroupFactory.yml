### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  commentId: T:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  id: TcpServerEventLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.EventLoop
  children:
  - Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration)
  - Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose(System.Boolean)
  - Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  - Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  langs:
  - csharp
  - vb
  name: TcpServerEventLoopGroupFactory
  nameWithType: TcpServerEventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TcpServerEventLoopGroupFactory
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
    startLine: 28
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: 'public class TcpServerEventLoopGroupFactory : BaseLoopGroupFactory, ITcpServerEventLoopGroupFactory, IEventLoopGroupFactory, IDisposable'
    content.vb: >-
      Public Class TcpServerEventLoopGroupFactory

          Inherits BaseLoopGroupFactory

          Implements ITcpServerEventLoopGroupFactory, IEventLoopGroupFactory, IDisposable
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  implements:
  - Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory
  - Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  - System.IDisposable
  inheritedMembers:
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration)
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration)
  id: '#ctor(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration)'
  parent: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  langs:
  - csharp
  - vb
  name: TcpServerEventLoopGroupFactory(IEventLoopGroupFactoryConfiguration)
  nameWithType: TcpServerEventLoopGroupFactory.TcpServerEventLoopGroupFactory(IEventLoopGroupFactoryConfiguration)
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.TcpServerEventLoopGroupFactory(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: public TcpServerEventLoopGroupFactory(IEventLoopGroupFactoryConfiguration configuration)
    parameters:
    - id: configuration
      type: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration
    content.vb: Public Sub New(configuration As IEventLoopGroupFactoryConfiguration)
  overload: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  id: GetOrCreateHandlerWorkerEventLoopGroup
  parent: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  langs:
  - csharp
  - vb
  name: GetOrCreateHandlerWorkerEventLoopGroup()
  nameWithType: TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup()
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetOrCreateHandlerWorkerEventLoopGroup
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: public IEventLoopGroup GetOrCreateHandlerWorkerEventLoopGroup()
    return:
      type: DotNetty.Transport.Channels.IEventLoopGroup
    content.vb: Public Function GetOrCreateHandlerWorkerEventLoopGroup As IEventLoopGroup
  overload: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup*
  implements:
  - Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  id: GetOrCreateSupervisorEventLoopGroup
  parent: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  langs:
  - csharp
  - vb
  name: GetOrCreateSupervisorEventLoopGroup()
  nameWithType: TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup()
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetOrCreateSupervisorEventLoopGroup
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: public IEventLoopGroup GetOrCreateSupervisorEventLoopGroup()
    return:
      type: DotNetty.Transport.Channels.IEventLoopGroup
    content.vb: Public Function GetOrCreateSupervisorEventLoopGroup As IEventLoopGroup
  overload: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup*
  implements:
  - Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TcpServerEventLoopGroupFactory.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/TcpServerEventLoopGroupFactory.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  overload: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Catalyst.Core.Lib.IO.EventLoop
  commentId: N:Catalyst.Core.Lib.IO.EventLoop
  name: Catalyst.Core.Lib.IO.EventLoop
  nameWithType: Catalyst.Core.Lib.IO.EventLoop
  fullName: Catalyst.Core.Lib.IO.EventLoop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  commentId: T:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.EventLoop
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
- uid: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: ITcpServerEventLoopGroupFactory
  nameWithType: ITcpServerEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactory
  nameWithType: IEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  name: GetOrCreateSocketIoEventLoopGroup()
  nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup()
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
    name: GetOrCreateSocketIoEventLoopGroup
    nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
    name: GetOrCreateSocketIoEventLoopGroup
    nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  name: Dispose()
  nameWithType: BaseLoopGroupFactory.Dispose()
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
    name: Dispose
    nameWithType: BaseLoopGroupFactory.Dispose
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
    name: Dispose
    nameWithType: BaseLoopGroupFactory.Dispose
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.#ctor
  name: TcpServerEventLoopGroupFactory
  nameWithType: TcpServerEventLoopGroupFactory.TcpServerEventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.TcpServerEventLoopGroupFactory
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactoryConfiguration
  nameWithType: IEventLoopGroupFactoryConfiguration
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactoryConfiguration
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  name: GetOrCreateHandlerWorkerEventLoopGroup
  nameWithType: TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  commentId: M:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  parent: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  name: GetOrCreateHandlerWorkerEventLoopGroup()
  nameWithType: IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup()
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
    name: GetOrCreateHandlerWorkerEventLoopGroup
    nameWithType: IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
    fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
    name: GetOrCreateHandlerWorkerEventLoopGroup
    nameWithType: IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
    fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory.GetOrCreateHandlerWorkerEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IEventLoopGroup
  commentId: T:DotNetty.Transport.Channels.IEventLoopGroup
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IEventLoopGroup
  nameWithType: IEventLoopGroup
  fullName: DotNetty.Transport.Channels.IEventLoopGroup
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  name: GetOrCreateSupervisorEventLoopGroup
  nameWithType: TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
- uid: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  commentId: M:Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  parent: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory
  name: GetOrCreateSupervisorEventLoopGroup()
  nameWithType: ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup()
  fullName: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
    name: GetOrCreateSupervisorEventLoopGroup
    nameWithType: ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
    fullName: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
    name: GetOrCreateSupervisorEventLoopGroup
    nameWithType: ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
    fullName: Catalyst.Abstractions.IO.EventLoop.ITcpServerEventLoopGroupFactory.GetOrCreateSupervisorEventLoopGroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: BaseLoopGroupFactory.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLoopGroupFactory.Dispose
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BaseLoopGroupFactory.Dispose
    fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose
  name: Dispose
  nameWithType: TcpServerEventLoopGroupFactory.Dispose
  fullName: Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
