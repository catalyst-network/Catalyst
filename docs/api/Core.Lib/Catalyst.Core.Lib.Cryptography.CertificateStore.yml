### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore
  commentId: T:Catalyst.Core.Lib.Cryptography.CertificateStore
  id: CertificateStore
  parent: Catalyst.Core.Lib.Cryptography
  children:
  - Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor(Catalyst.Abstractions.FileSystem.IFileSystem,Catalyst.Abstractions.Cryptography.IPasswordManager)
  - Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate(System.Security.SecureString,System.String)
  - Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile(System.String)
  langs:
  - csharp
  - vb
  name: CertificateStore
  nameWithType: CertificateStore
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CertificateStore
    path: ../src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: 'public sealed class CertificateStore : ICertificateStore'
    content.vb: >-
      Public NotInheritable Class CertificateStore

          Implements ICertificateStore
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Cryptography.ICertificateStore
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor(Catalyst.Abstractions.FileSystem.IFileSystem,Catalyst.Abstractions.Cryptography.IPasswordManager)
  commentId: M:Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor(Catalyst.Abstractions.FileSystem.IFileSystem,Catalyst.Abstractions.Cryptography.IPasswordManager)
  id: '#ctor(Catalyst.Abstractions.FileSystem.IFileSystem,Catalyst.Abstractions.Cryptography.IPasswordManager)'
  parent: Catalyst.Core.Lib.Cryptography.CertificateStore
  langs:
  - csharp
  - vb
  name: CertificateStore(IFileSystem, IPasswordManager)
  nameWithType: CertificateStore.CertificateStore(IFileSystem, IPasswordManager)
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.CertificateStore(Catalyst.Abstractions.FileSystem.IFileSystem, Catalyst.Abstractions.Cryptography.IPasswordManager)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public CertificateStore(IFileSystem fileSystem, IPasswordManager passwordManager)
    parameters:
    - id: fileSystem
      type: Catalyst.Abstractions.FileSystem.IFileSystem
    - id: passwordManager
      type: Catalyst.Abstractions.Cryptography.IPasswordManager
    content.vb: Public Sub New(fileSystem As IFileSystem, passwordManager As IPasswordManager)
  overload: Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile(System.String)
  commentId: M:Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile(System.String)
  id: ReadOrCreateCertificateFile(System.String)
  parent: Catalyst.Core.Lib.Cryptography.CertificateStore
  langs:
  - csharp
  - vb
  name: ReadOrCreateCertificateFile(String)
  nameWithType: CertificateStore.ReadOrCreateCertificateFile(String)
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadOrCreateCertificateFile
    path: ../src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
    startLine: 55
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public X509Certificate2 ReadOrCreateCertificateFile(string pfxFilePath)
    parameters:
    - id: pfxFilePath
      type: System.String
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    content.vb: Public Function ReadOrCreateCertificateFile(pfxFilePath As String) As X509Certificate2
  overload: Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile*
  implements:
  - Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate(System.Security.SecureString,System.String)
  commentId: M:Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate(System.Security.SecureString,System.String)
  id: BuildSelfSignedServerCertificate(System.Security.SecureString,System.String)
  parent: Catalyst.Core.Lib.Cryptography.CertificateStore
  langs:
  - csharp
  - vb
  name: BuildSelfSignedServerCertificate(SecureString, String)
  nameWithType: CertificateStore.BuildSelfSignedServerCertificate(SecureString, String)
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate(System.Security.SecureString, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildSelfSignedServerCertificate
    path: ../src/Catalyst.Core.Lib/Cryptography/CertificateStore.cs
    startLine: 161
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public static X509Certificate2 BuildSelfSignedServerCertificate(SecureString password, string commonName = "localhost")
    parameters:
    - id: password
      type: System.Security.SecureString
    - id: commonName
      type: System.String
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    content.vb: Public Shared Function BuildSelfSignedServerCertificate(password As SecureString, commonName As String = "localhost") As X509Certificate2
  overload: Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Cryptography
  commentId: N:Catalyst.Core.Lib.Cryptography
  name: Catalyst.Core.Lib.Cryptography
  nameWithType: Catalyst.Core.Lib.Cryptography
  fullName: Catalyst.Core.Lib.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Cryptography.ICertificateStore
  commentId: T:Catalyst.Abstractions.Cryptography.ICertificateStore
  parent: Catalyst.Abstractions.Cryptography
  name: ICertificateStore
  nameWithType: ICertificateStore
  fullName: Catalyst.Abstractions.Cryptography.ICertificateStore
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.CertificateStore.#ctor
  name: CertificateStore
  nameWithType: CertificateStore.CertificateStore
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.CertificateStore
- uid: Catalyst.Abstractions.FileSystem.IFileSystem
  commentId: T:Catalyst.Abstractions.FileSystem.IFileSystem
  parent: Catalyst.Abstractions.FileSystem
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager
  commentId: T:Catalyst.Abstractions.Cryptography.IPasswordManager
  parent: Catalyst.Abstractions.Cryptography
  name: IPasswordManager
  nameWithType: IPasswordManager
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager
- uid: Catalyst.Abstractions.FileSystem
  commentId: N:Catalyst.Abstractions.FileSystem
  name: Catalyst.Abstractions.FileSystem
  nameWithType: Catalyst.Abstractions.FileSystem
  fullName: Catalyst.Abstractions.FileSystem
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile
  name: ReadOrCreateCertificateFile
  nameWithType: CertificateStore.ReadOrCreateCertificateFile
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.ReadOrCreateCertificateFile
- uid: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
  commentId: M:Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
  parent: Catalyst.Abstractions.Cryptography.ICertificateStore
  isExternal: true
  name: ReadOrCreateCertificateFile(String)
  nameWithType: ICertificateStore.ReadOrCreateCertificateFile(String)
  fullName: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
    name: ReadOrCreateCertificateFile
    nameWithType: ICertificateStore.ReadOrCreateCertificateFile
    fullName: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile(System.String)
    name: ReadOrCreateCertificateFile
    nameWithType: ICertificateStore.ReadOrCreateCertificateFile
    fullName: Catalyst.Abstractions.Cryptography.ICertificateStore.ReadOrCreateCertificateFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate
  name: BuildSelfSignedServerCertificate
  nameWithType: CertificateStore.BuildSelfSignedServerCertificate
  fullName: Catalyst.Core.Lib.Cryptography.CertificateStore.BuildSelfSignedServerCertificate
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
