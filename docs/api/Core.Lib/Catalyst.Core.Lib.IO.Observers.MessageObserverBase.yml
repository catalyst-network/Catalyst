### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  commentId: T:Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  id: MessageObserverBase
  parent: Catalyst.Core.Lib.IO.Observers
  children:
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor(Serilog.ILogger,System.String)
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose(System.Boolean)
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Logger
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageSubscription
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError(System.Exception)
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  - Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  langs:
  - csharp
  - vb
  name: MessageObserverBase
  nameWithType: MessageObserverBase
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MessageObserverBase
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: 'public abstract class MessageObserverBase : IMessageObserver, IObserver<IObserverDto<ProtocolMessage>>, IDisposable'
    content.vb: >-
      Public MustInherit Class MessageObserverBase

          Implements IMessageObserver, IObserver(Of IObserverDto(Of ProtocolMessage)), IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Catalyst.Core.Lib.IO.Observers.BroadcastObserverBase`1
  - Catalyst.Core.Lib.IO.Observers.RequestObserverBase`2
  - Catalyst.Core.Lib.IO.Observers.ResponseObserverBase`1
  implements:
  - Catalyst.Abstractions.IO.Observers.IMessageObserver
  - System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Logger
  commentId: F:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Logger
  id: Logger
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: MessageObserverBase.Logger
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Logger
  type: Field
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Logger
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: protected readonly ILogger Logger
    return:
      type: Serilog.ILogger
    content.vb: Protected ReadOnly Logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageSubscription
  commentId: F:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageSubscription
  id: MessageSubscription
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: MessageSubscription
  nameWithType: MessageObserverBase.MessageSubscription
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageSubscription
  type: Field
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MessageSubscription
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: protected IDisposable MessageSubscription
    return:
      type: System.IDisposable
    content.vb: Protected MessageSubscription As IDisposable
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor(Serilog.ILogger,System.String)
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor(Serilog.ILogger,System.String)
  id: '#ctor(Serilog.ILogger,System.String)'
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: MessageObserverBase(ILogger, String)
  nameWithType: MessageObserverBase.MessageObserverBase(ILogger, String)
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageObserverBase(Serilog.ILogger, System.String)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: protected MessageObserverBase(ILogger logger, string filterMessageType)
    parameters:
    - id: logger
      type: Serilog.ILogger
    - id: filterMessageType
      type: System.String
    content.vb: Protected Sub New(logger As ILogger, filterMessageType As String)
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  id: StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: StartObserving(IObservable<IObserverDto<ProtocolMessage>>)
  nameWithType: MessageObserverBase.StartObserving(IObservable<IObserverDto<ProtocolMessage>>)
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving(System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StartObserving
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: public void StartObserving(IObservable<IObserverDto<ProtocolMessage>> messageStream)
    parameters:
    - id: messageStream
      type: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
    content.vb: Public Sub StartObserving(messageStream As IObservable(Of IObserverDto(Of ProtocolMessage)))
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving*
  implements:
  - Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  nameWithType.vb: MessageObserverBase.StartObserving(IObservable(Of IObserverDto(Of ProtocolMessage)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving(System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)))
  name.vb: StartObserving(IObservable(Of IObserverDto(Of ProtocolMessage)))
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  id: OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: OnNext(IObserverDto<ProtocolMessage>)
  nameWithType: MessageObserverBase.OnNext(IObserverDto<ProtocolMessage>)
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: OnNext
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: public abstract void OnNext(IObserverDto<ProtocolMessage> messageDto)
    parameters:
    - id: messageDto
      type: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}
    content.vb: Public MustOverride Sub OnNext(messageDto As IObserverDto(Of ProtocolMessage))
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext*
  implements:
  - System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  nameWithType.vb: MessageObserverBase.OnNext(IObserverDto(Of ProtocolMessage))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: OnNext(IObserverDto(Of ProtocolMessage))
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted
  id: OnCompleted
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: OnCompleted()
  nameWithType: MessageObserverBase.OnCompleted()
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: OnCompleted
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 59
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: public virtual void OnCompleted()
    content.vb: Public Overridable Sub OnCompleted
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted*
  implements:
  - System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnCompleted
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError(System.Exception)
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError(System.Exception)
  id: OnError(System.Exception)
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: OnError(Exception)
  nameWithType: MessageObserverBase.OnError(Exception)
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: OnError
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 64
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: public virtual void OnError(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Public Overridable Sub OnError(exception As Exception)
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError*
  implements:
  - System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnError(System.Exception)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MessageObserverBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 69
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose
  id: Dispose
  parent: Catalyst.Core.Lib.IO.Observers.MessageObserverBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MessageObserverBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Observers/MessageObserverBase.cs
    startLine: 79
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Observers
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.IO.Observers
  commentId: N:Catalyst.Core.Lib.IO.Observers
  name: Catalyst.Core.Lib.IO.Observers
  nameWithType: Catalyst.Core.Lib.IO.Observers
  fullName: Catalyst.Core.Lib.IO.Observers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Observers.IMessageObserver
  commentId: T:Catalyst.Abstractions.IO.Observers.IMessageObserver
  parent: Catalyst.Abstractions.IO.Observers
  name: IMessageObserver
  nameWithType: IMessageObserver
  fullName: Catalyst.Abstractions.IO.Observers.IMessageObserver
- uid: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  commentId: T:System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  parent: System
  definition: System.IObserver`1
  name: IObserver<IObserverDto<ProtocolMessage>>
  nameWithType: IObserver<IObserverDto<ProtocolMessage>>
  fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>
  nameWithType.vb: IObserver(Of IObserverDto(Of ProtocolMessage))
  fullName.vb: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: IObserver(Of IObserverDto(Of ProtocolMessage))
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Observers
  commentId: N:Catalyst.Abstractions.IO.Observers
  name: Catalyst.Abstractions.IO.Observers
  nameWithType: Catalyst.Abstractions.IO.Observers
  fullName: Catalyst.Abstractions.IO.Observers
- uid: System.IObserver`1
  commentId: T:System.IObserver`1
  isExternal: true
  name: IObserver<T>
  nameWithType: IObserver<T>
  fullName: System.IObserver<T>
  nameWithType.vb: IObserver(Of T)
  fullName.vb: System.IObserver(Of T)
  name.vb: IObserver(Of T)
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.#ctor
  name: MessageObserverBase
  nameWithType: MessageObserverBase.MessageObserverBase
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.MessageObserverBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving
  name: StartObserving
  nameWithType: MessageObserverBase.StartObserving
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.StartObserving
- uid: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  commentId: M:Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
  parent: Catalyst.Abstractions.IO.Observers.IMessageObserver
  isExternal: true
  name: StartObserving(IObservable<IObserverDto<ProtocolMessage>>)
  nameWithType: IMessageObserver.StartObserving(IObservable<IObserverDto<ProtocolMessage>>)
  fullName: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>)
  nameWithType.vb: IMessageObserver.StartObserving(IObservable(Of IObserverDto(Of ProtocolMessage)))
  fullName.vb: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)))
  name.vb: StartObserving(IObservable(Of IObserverDto(Of ProtocolMessage)))
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
    name: StartObserving
    nameWithType: IMessageObserver.StartObserving
    fullName: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}})
    name: StartObserving
    nameWithType: IMessageObserver.StartObserving
    fullName: Catalyst.Abstractions.IO.Observers.IMessageObserver.StartObserving
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  commentId: T:System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  parent: System
  definition: System.IObservable`1
  name: IObservable<IObserverDto<ProtocolMessage>>
  nameWithType: IObservable<IObserverDto<ProtocolMessage>>
  fullName: System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>
  nameWithType.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  fullName.vb: System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext
  name: OnNext
  nameWithType: MessageObserverBase.OnNext
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnNext
- uid: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  commentId: M:System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage})
  parent: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  definition: System.IObserver`1.OnNext(`0)
  name: OnNext(IObserverDto<ProtocolMessage>)
  nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnNext(IObserverDto<ProtocolMessage>)
  fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>)
  nameWithType.vb: IObserver(Of IObserverDto(Of ProtocolMessage)).OnNext(IObserverDto(Of ProtocolMessage))
  fullName.vb: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnNext(Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: OnNext(IObserverDto(Of ProtocolMessage))
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnNext
    fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of IObserverDto(Of ProtocolMessage)).OnNext
    fullName: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}
  parent: Catalyst.Abstractions.IO.Messaging.Dto
  definition: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
  name: IObserverDto<ProtocolMessage>
  nameWithType: IObserverDto<ProtocolMessage>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>
  nameWithType.vb: IObserverDto(Of ProtocolMessage)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)
  name.vb: IObserverDto(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver`1.OnNext(`0)
  commentId: M:System.IObserver`1.OnNext(`0)
  isExternal: true
  name: OnNext(T)
  nameWithType: IObserver<T>.OnNext(T)
  fullName: System.IObserver<T>.OnNext(T)
  nameWithType.vb: IObserver(Of T).OnNext(T)
  fullName.vb: System.IObserver(Of T).OnNext(T)
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<T>.OnNext
    fullName: System.IObserver<T>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of T).OnNext
    fullName: System.IObserver(Of T).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
  name: IObserverDto<T>
  nameWithType: IObserverDto<T>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<T>
  nameWithType.vb: IObserverDto(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of T)
  name.vb: IObserverDto(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto
  commentId: N:Catalyst.Abstractions.IO.Messaging.Dto
  name: Catalyst.Abstractions.IO.Messaging.Dto
  nameWithType: Catalyst.Abstractions.IO.Messaging.Dto
  fullName: Catalyst.Abstractions.IO.Messaging.Dto
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted
  name: OnCompleted
  nameWithType: MessageObserverBase.OnCompleted
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnCompleted
- uid: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnCompleted
  commentId: M:System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnCompleted
  parent: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  definition: System.IObserver`1.OnCompleted
  name: OnCompleted()
  nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnCompleted()
  fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnCompleted()
  nameWithType.vb: IObserver(Of IObserverDto(Of ProtocolMessage)).OnCompleted()
  fullName.vb: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnCompleted
    fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of IObserverDto(Of ProtocolMessage)).OnCompleted
    fullName: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver`1.OnCompleted
  commentId: M:System.IObserver`1.OnCompleted
  isExternal: true
  name: OnCompleted()
  nameWithType: IObserver<T>.OnCompleted()
  fullName: System.IObserver<T>.OnCompleted()
  nameWithType.vb: IObserver(Of T).OnCompleted()
  fullName.vb: System.IObserver(Of T).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<T>.OnCompleted
    fullName: System.IObserver<T>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of T).OnCompleted
    fullName: System.IObserver(Of T).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError
  name: OnError
  nameWithType: MessageObserverBase.OnError
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.OnError
- uid: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnError(System.Exception)
  commentId: M:System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}.OnError(System.Exception)
  parent: System.IObserver{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  definition: System.IObserver`1.OnError(System.Exception)
  name: OnError(Exception)
  nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnError(Exception)
  fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of IObserverDto(Of ProtocolMessage)).OnError(Exception)
  fullName.vb: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<IObserverDto<ProtocolMessage>>.OnError
    fullName: System.IObserver<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of IObserverDto(Of ProtocolMessage)).OnError
    fullName: System.IObserver(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IObserver`1.OnError(System.Exception)
  commentId: M:System.IObserver`1.OnError(System.Exception)
  isExternal: true
  name: OnError(Exception)
  nameWithType: IObserver<T>.OnError(Exception)
  fullName: System.IObserver<T>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of T).OnError(Exception)
  fullName.vb: System.IObserver(Of T).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<T>.OnError
    fullName: System.IObserver<T>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of T).OnError
    fullName: System.IObserver(Of T).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose
  name: Dispose
  nameWithType: MessageObserverBase.Dispose
  fullName: Catalyst.Core.Lib.IO.Observers.MessageObserverBase.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
