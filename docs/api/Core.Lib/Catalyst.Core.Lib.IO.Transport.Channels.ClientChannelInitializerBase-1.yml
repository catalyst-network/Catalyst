### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  id: ClientChannelInitializerBase`1
  parent: Catalyst.Core.Lib.IO.Transport.Channels
  children:
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  langs:
  - csharp
  - vb
  name: ClientChannelInitializerBase<T>
  nameWithType: ClientChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ClientChannelInitializerBase
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: 'public sealed class ClientChannelInitializerBase<T> : ChannelInitializerBase<T>, IChannelHandler where T : IChannel'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class ClientChannelInitializerBase(Of T As IChannel)

          Inherits ChannelInitializerBase(Of T)

          Implements IChannelHandler
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.ChannelHandlerAdapter
  - DotNetty.Transport.Channels.ChannelInitializer{{T}}
  - Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  implements:
  - DotNetty.Transport.Channels.IChannelHandler
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.InitChannel({T})
  - DotNetty.Transport.Channels.ChannelInitializer{{T}}.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelInitializer{{T}}.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  - DotNetty.Transport.Channels.ChannelInitializer{{T}}.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelInitializer{{T}}.IsSharable
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: ClientChannelInitializerBase(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T)
  name.vb: ClientChannelInitializerBase(Of T)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: ClientChannelInitializerBase(Func<IList<IChannelHandler>>, IEventLoopGroupFactory, IPAddress, X509Certificate)
  nameWithType: ClientChannelInitializerBase<T>.ClientChannelInitializerBase(Func<IList<IChannelHandler>>, IEventLoopGroupFactory, IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ClientChannelInitializerBase(System.Func<System.Collections.Generic.IList<DotNetty.Transport.Channels.IChannelHandler>>, Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory, System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  example: []
  syntax:
    content: public ClientChannelInitializerBase(Func<IList<IChannelHandler>> handlerGenerationFunction, IEventLoopGroupFactory eventLoopGroupFactory, IPAddress targetHost = null, X509Certificate certificate = null)
    parameters:
    - id: handlerGenerationFunction
      type: System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}}
    - id: eventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
    - id: targetHost
      type: System.Net.IPAddress
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
    content.vb: Public Sub New(handlerGenerationFunction As Func(Of IList(Of IChannelHandler)), eventLoopGroupFactory As IEventLoopGroupFactory, targetHost As IPAddress = Nothing, certificate As X509Certificate = Nothing)
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor*
  nameWithType.vb: ClientChannelInitializerBase(Of T).ClientChannelInitializerBase(Func(Of IList(Of IChannelHandler)), IEventLoopGroupFactory, IPAddress, X509Certificate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ClientChannelInitializerBase(System.Func(Of System.Collections.Generic.IList(Of DotNetty.Transport.Channels.IChannelHandler)), Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory, System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  name.vb: ClientChannelInitializerBase(Func(Of IList(Of IChannelHandler)), IEventLoopGroupFactory, IPAddress, X509Certificate)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  id: NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ClientChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NewTlsHandler
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public override TlsHandler NewTlsHandler(IPAddress targetHost, X509Certificate certificate)
    parameters:
    - id: targetHost
      type: System.Net.IPAddress
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
    return:
      type: DotNetty.Handlers.Tls.TlsHandler
    content.vb: Public Overrides Function NewTlsHandler(targetHost As IPAddress, certificate As X509Certificate) As TlsHandler
  overridden: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler*
  nameWithType.vb: ClientChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  id: ToString
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClientChannelInitializerBase<T>.ToString()
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ToString()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToString
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString*
  nameWithType.vb: ClientChannelInitializerBase(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ToString()
references:
- uid: Catalyst.Core.Lib.IO.Transport.Channels
  commentId: N:Catalyst.Core.Lib.IO.Transport.Channels
  name: Catalyst.Core.Lib.IO.Transport.Channels
  nameWithType: Catalyst.Core.Lib.IO.Transport.Channels
  fullName: Catalyst.Core.Lib.IO.Transport.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter
  commentId: T:DotNetty.Transport.Channels.ChannelHandlerAdapter
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelHandlerAdapter
  nameWithType: ChannelHandlerAdapter
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter
- uid: DotNetty.Transport.Channels.ChannelInitializer{{T}}
  commentId: T:DotNetty.Transport.Channels.ChannelInitializer{`0}
  parent: DotNetty.Transport.Channels
  definition: DotNetty.Transport.Channels.ChannelInitializer`1
  name: ChannelInitializer<T>
  nameWithType: ChannelInitializer<T>
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>
  nameWithType.vb: ChannelInitializer(Of T)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T)
  name.vb: ChannelInitializer(Of T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1
    name: ChannelInitializer
    nameWithType: ChannelInitializer
    fullName: DotNetty.Transport.Channels.ChannelInitializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1
    name: ChannelInitializer
    nameWithType: ChannelInitializer
    fullName: DotNetty.Transport.Channels.ChannelInitializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}
  parent: Catalyst.Core.Lib.IO.Transport.Channels
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  name: ChannelInitializerBase<T>
  nameWithType: ChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>
  nameWithType.vb: ChannelInitializerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T)
  name.vb: ChannelInitializerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IChannelHandler
  commentId: T:DotNetty.Transport.Channels.IChannelHandler
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandler
  nameWithType: IChannelHandler
  fullName: DotNetty.Transport.Channels.IChannelHandler
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.InitChannel({T})
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}.InitChannel(`0)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  name: InitChannel(T)
  nameWithType: ChannelInitializerBase<T>.InitChannel(T)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel(T)
  nameWithType.vb: ChannelInitializerBase(Of T).InitChannel(T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel(T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase<T>.InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase(Of T).InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer{{T}}.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer{`0}.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelInitializer{{T}}
  definition: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelInitializer<T>.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: ChannelInitializer(Of T).ChannelRegistered(IChannelHandlerContext)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelInitializer<T>.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelInitializer(Of T).ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer{{T}}.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer{`0}.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  parent: DotNetty.Transport.Channels.ChannelInitializer{{T}}
  definition: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelInitializer<T>.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  nameWithType.vb: ChannelInitializer(Of T).ExceptionCaught(IChannelHandlerContext, Exception)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelInitializer<T>.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelInitializer(Of T).ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer{{T}}.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer{`0}.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelInitializer{{T}}
  definition: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelInitializer<T>.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: ChannelInitializer(Of T).HandlerAdded(IChannelHandlerContext)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelInitializer<T>.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelInitializer(Of T).HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer{{T}}.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelInitializer{`0}.IsSharable
  parent: DotNetty.Transport.Channels.ChannelInitializer{{T}}
  definition: DotNetty.Transport.Channels.ChannelInitializer`1.IsSharable
  name: IsSharable
  nameWithType: ChannelInitializer<T>.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.IsSharable
  nameWithType.vb: ChannelInitializer(Of T).IsSharable
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).IsSharable
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelUnregistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelUnregistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelActive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelActive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelInactive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelInactive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.ChannelRead(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelReadComplete(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelReadComplete(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelWritabilityChanged(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerRemoved(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerRemoved(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: UserEventTriggered(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.UserEventTriggered(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Flush(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Flush(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: BindAsync(IChannelHandlerContext, EndPoint)
  nameWithType: ChannelHandlerAdapter.BindAsync(IChannelHandlerContext, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  nameWithType: ChannelHandlerAdapter.ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DisconnectAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DisconnectAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: CloseAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.CloseAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DeregisterAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DeregisterAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Read(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Read(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: EnsureNotSharable()
  nameWithType: ChannelHandlerAdapter.EnsureNotSharable()
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: DotNetty.Transport.Channels.ChannelInitializer`1
  commentId: T:DotNetty.Transport.Channels.ChannelInitializer`1
  isExternal: true
  name: ChannelInitializer<T>
  nameWithType: ChannelInitializer<T>
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>
  nameWithType.vb: ChannelInitializer(Of T)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T)
  name.vb: ChannelInitializer(Of T)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1
    name: ChannelInitializer
    nameWithType: ChannelInitializer
    fullName: DotNetty.Transport.Channels.ChannelInitializer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1
    name: ChannelInitializer
    nameWithType: ChannelInitializer
    fullName: DotNetty.Transport.Channels.ChannelInitializer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  name: ChannelInitializerBase<T>
  nameWithType: ChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>
  nameWithType.vb: ChannelInitializerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T)
  name.vb: ChannelInitializerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  name: InitChannel(T)
  nameWithType: ChannelInitializerBase<T>.InitChannel(T)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel(T)
  nameWithType.vb: ChannelInitializerBase(Of T).InitChannel(T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel(T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase<T>.InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase(Of T).InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  isExternal: true
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelInitializer<T>.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: ChannelInitializer(Of T).ChannelRegistered(IChannelHandlerContext)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelInitializer<T>.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelInitializer(Of T).ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  isExternal: true
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelInitializer<T>.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  nameWithType.vb: ChannelInitializer(Of T).ExceptionCaught(IChannelHandlerContext, Exception)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelInitializer<T>.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelInitializer(Of T).ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  isExternal: true
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelInitializer<T>.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  nameWithType.vb: ChannelInitializer(Of T).HandlerAdded(IChannelHandlerContext)
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelInitializer<T>.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelInitializer`1.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelInitializer(Of T).HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelInitializer(Of T).HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelInitializer`1.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelInitializer`1.IsSharable
  isExternal: true
  name: IsSharable
  nameWithType: ChannelInitializer<T>.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelInitializer<T>.IsSharable
  nameWithType.vb: ChannelInitializer(Of T).IsSharable
  fullName.vb: DotNetty.Transport.Channels.ChannelInitializer(Of T).IsSharable
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor
  name: ClientChannelInitializerBase
  nameWithType: ClientChannelInitializerBase<T>.ClientChannelInitializerBase
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ClientChannelInitializerBase
  nameWithType.vb: ClientChannelInitializerBase(Of T).ClientChannelInitializerBase
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ClientChannelInitializerBase
- uid: System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}}
  commentId: T:System.Func{System.Collections.Generic.IList{DotNetty.Transport.Channels.IChannelHandler}}
  parent: System
  definition: System.Func`1
  name: Func<IList<IChannelHandler>>
  nameWithType: Func<IList<IChannelHandler>>
  fullName: System.Func<System.Collections.Generic.IList<DotNetty.Transport.Channels.IChannelHandler>>
  nameWithType.vb: Func(Of IList(Of IChannelHandler))
  fullName.vb: System.Func(Of System.Collections.Generic.IList(Of DotNetty.Transport.Channels.IChannelHandler))
  name.vb: Func(Of IList(Of IChannelHandler))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetty.Transport.Channels.IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: DotNetty.Transport.Channels.IChannelHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetty.Transport.Channels.IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: DotNetty.Transport.Channels.IChannelHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactory
  nameWithType: IEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  nameWithType.vb: ChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase<T>.NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase(Of T).NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler
  name: NewTlsHandler
  nameWithType: ClientChannelInitializerBase<T>.NewTlsHandler
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.NewTlsHandler
  nameWithType.vb: ClientChannelInitializerBase(Of T).NewTlsHandler
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).NewTlsHandler
- uid: DotNetty.Handlers.Tls.TlsHandler
  commentId: T:DotNetty.Handlers.Tls.TlsHandler
  parent: DotNetty.Handlers.Tls
  isExternal: true
  name: TlsHandler
  nameWithType: TlsHandler
  fullName: DotNetty.Handlers.Tls.TlsHandler
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  isExternal: true
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  nameWithType.vb: ChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase<T>.NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase(Of T).NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Handlers.Tls
  commentId: N:DotNetty.Handlers.Tls
  isExternal: true
  name: DotNetty.Handlers.Tls
  nameWithType: DotNetty.Handlers.Tls
  fullName: DotNetty.Handlers.Tls
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  name: ToString
  nameWithType: ClientChannelInitializerBase<T>.ToString
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ToString
  nameWithType.vb: ClientChannelInitializerBase(Of T).ToString
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
