### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  id: ObservableChannel
  parent: Catalyst.Core.Lib.IO.Transport.Channels
  children:
  - Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}},DotNetty.Transport.Channels.IChannel)
  - Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
  - Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
  - Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync
  langs:
  - csharp
  - vb
  name: ObservableChannel
  nameWithType: ObservableChannel
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ObservableChannel
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: 'public sealed class ObservableChannel : IObservableChannel'
    content.vb: >-
      Public NotInheritable Class ObservableChannel

          Implements IObservableChannel
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}},DotNetty.Transport.Channels.IChannel)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}},DotNetty.Transport.Channels.IChannel)
  id: '#ctor(System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}},DotNetty.Transport.Channels.IChannel)'
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  langs:
  - csharp
  - vb
  name: ObservableChannel(IObservable<IObserverDto<ProtocolMessage>>, IChannel)
  nameWithType: ObservableChannel.ObservableChannel(IObservable<IObserverDto<ProtocolMessage>>, IChannel)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.ObservableChannel(System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>, DotNetty.Transport.Channels.IChannel)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public ObservableChannel(IObservable<IObserverDto<ProtocolMessage>> messageStream, IChannel channel)
    parameters:
    - id: messageStream
      type: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
    - id: channel
      type: DotNetty.Transport.Channels.IChannel
    content.vb: Public Sub New(messageStream As IObservable(Of IObserverDto(Of ProtocolMessage)), channel As IChannel)
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor*
  nameWithType.vb: ObservableChannel.ObservableChannel(IObservable(Of IObserverDto(Of ProtocolMessage)), IChannel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.ObservableChannel(System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage)), DotNetty.Transport.Channels.IChannel)
  name.vb: ObservableChannel(IObservable(Of IObserverDto(Of ProtocolMessage)), IChannel)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
  commentId: P:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
  id: Channel
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: ObservableChannel.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Channel
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public IChannel Channel { get; }
    parameters: []
    return:
      type: DotNetty.Transport.Channels.IChannel
    content.vb: Public ReadOnly Property Channel As IChannel
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel*
  implements:
  - Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.Channel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync
  id: StartAsync
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: ObservableChannel.StartAsync()
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StartAsync
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartAsync As Task
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
  commentId: P:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
  id: MessageStream
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel
  langs:
  - csharp
  - vb
  name: MessageStream
  nameWithType: ObservableChannel.MessageStream
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MessageStream
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ObservableChannel.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public IObservable<IObserverDto<ProtocolMessage>> MessageStream { get; }
    parameters: []
    return:
      type: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
    content.vb: Public ReadOnly Property MessageStream As IObservable(Of IObserverDto(Of ProtocolMessage))
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream*
  implements:
  - Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.MessageStream
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Catalyst.Core.Lib.IO.Transport.Channels
  commentId: N:Catalyst.Core.Lib.IO.Transport.Channels
  name: Catalyst.Core.Lib.IO.Transport.Channels
  nameWithType: Catalyst.Core.Lib.IO.Transport.Channels
  fullName: Catalyst.Core.Lib.IO.Transport.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  parent: Catalyst.Abstractions.IO.Transport.Channels
  name: IObservableChannel
  nameWithType: IObservableChannel
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.#ctor
  name: ObservableChannel
  nameWithType: ObservableChannel.ObservableChannel
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.ObservableChannel
- uid: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  commentId: T:System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  parent: System
  definition: System.IObservable`1
  name: IObservable<IObserverDto<ProtocolMessage>>
  nameWithType: IObservable<IObserverDto<ProtocolMessage>>
  fullName: System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>
  nameWithType.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  fullName.vb: System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IChannel
  commentId: T:DotNetty.Transport.Channels.IChannel
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: DotNetty.Transport.Channels.IChannel
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
  name: Channel
  nameWithType: ObservableChannel.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.Channel
- uid: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.Channel
  commentId: P:Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.Channel
  parent: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  name: Channel
  nameWithType: IObservableChannel.Channel
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.Channel
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync
  name: StartAsync
  nameWithType: ObservableChannel.StartAsync
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.StartAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
  name: MessageStream
  nameWithType: ObservableChannel.MessageStream
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ObservableChannel.MessageStream
- uid: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.MessageStream
  commentId: P:Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.MessageStream
  parent: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  name: MessageStream
  nameWithType: IObservableChannel.MessageStream
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel.MessageStream
