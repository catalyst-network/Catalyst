### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.FileSystem.FileSystem
  commentId: T:Catalyst.Core.Lib.FileSystem.FileSystem
  id: FileSystem
  parent: Catalyst.Core.Lib.FileSystem
  children:
  - Catalyst.Core.Lib.FileSystem.FileSystem.#ctor
  - Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists(System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir
  - Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile(System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath(System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync(System.String,System.String)
  - Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: FileSystem
  nameWithType: FileSystem
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileSystem
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: 'public class FileSystem : FileSystem, IFileSystem, IFileSystem'
    content.vb: >-
      Public Class FileSystem

          Inherits FileSystem

          Implements IFileSystem, IFileSystem
  inheritance:
  - System.Object
  - System.IO.Abstractions.FileSystem
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem
  - System.IO.Abstractions.IFileSystem
  inheritedMembers:
  - System.IO.Abstractions.FileSystem.Directory
  - System.IO.Abstractions.FileSystem.File
  - System.IO.Abstractions.FileSystem.FileInfo
  - System.IO.Abstractions.FileSystem.FileStream
  - System.IO.Abstractions.FileSystem.Path
  - System.IO.Abstractions.FileSystem.DirectoryInfo
  - System.IO.Abstractions.FileSystem.DriveInfo
  - System.IO.Abstractions.FileSystem.FileSystemWatcher
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.#ctor
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.#ctor
  id: '#ctor'
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.FileSystem()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 41
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public FileSystem()
    content.vb: Public Sub New
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir
  id: GetCatalystDataDir
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: GetCatalystDataDir()
  nameWithType: FileSystem.GetCatalystDataDir()
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetCatalystDataDir
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 52
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  summary: "\nMust stay virtual as we Substitute.PartOf this class in testing.\n"
  example: []
  syntax:
    content: public virtual DirectoryInfo GetCatalystDataDir()
    return:
      type: System.IO.DirectoryInfo
      description: ''
    content.vb: Public Overridable Function GetCatalystDataDir As DirectoryInfo
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath(System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath(System.String)
  id: SetCurrentPath(System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: SetCurrentPath(String)
  nameWithType: FileSystem.SetCurrentPath(String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SetCurrentPath
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public bool SetCurrentPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SetCurrentPath(path As String) As Boolean
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync(System.String,System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync(System.String,System.String)
  id: WriteTextFileToCddAsync(System.String,System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: WriteTextFileToCddAsync(String, String)
  nameWithType: FileSystem.WriteTextFileToCddAsync(String, String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTextFileToCddAsync
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 80
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public Task<IFileInfo> WriteTextFileToCddAsync(string fileName, string contents)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
    content.vb: Public Function WriteTextFileToCddAsync(fileName As String, contents As String) As Task(Of IFileInfo)
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  id: WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: WriteTextFileToCddSubDirectoryAsync(String, String, String)
  nameWithType: FileSystem.WriteTextFileToCddSubDirectoryAsync(String, String, String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTextFileToCddSubDirectoryAsync
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 87
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public Task<IFileInfo> WriteTextFileToCddSubDirectoryAsync(string fileName, string subDirectory, string contents)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    - id: contents
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
    content.vb: Public Function WriteTextFileToCddSubDirectoryAsync(fileName As String, subDirectory As String, contents As String) As Task(Of IFileInfo)
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists(System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists(System.String)
  id: DataFileExists(System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: DataFileExists(String)
  nameWithType: FileSystem.DataFileExists(String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DataFileExists
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 111
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public bool DataFileExists(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DataFileExists(fileName As String) As Boolean
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  id: DataFileExistsInSubDirectory(System.String,System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: DataFileExistsInSubDirectory(String, String)
  nameWithType: FileSystem.DataFileExistsInSubDirectory(String, String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DataFileExistsInSubDirectory
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 116
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public bool DataFileExistsInSubDirectory(string fileName, string subDirectory)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DataFileExistsInSubDirectory(fileName As String, subDirectory As String) As Boolean
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile(System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile(System.String)
  id: ReadTextFromCddFile(System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: ReadTextFromCddFile(String)
  nameWithType: FileSystem.ReadTextFromCddFile(String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadTextFromCddFile
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 126
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public string ReadTextFromCddFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ReadTextFromCddFile(fileName As String) As String
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  commentId: M:Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  id: ReadTextFromCddSubDirectoryFile(System.String,System.String)
  parent: Catalyst.Core.Lib.FileSystem.FileSystem
  langs:
  - csharp
  - vb
  name: ReadTextFromCddSubDirectoryFile(String, String)
  nameWithType: FileSystem.ReadTextFromCddSubDirectoryFile(String, String)
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadTextFromCddSubDirectoryFile
    path: ../src/Catalyst.Core.Lib/FileSystem/FileSystem.cs
    startLine: 132
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.FileSystem
  syntax:
    content: public string ReadTextFromCddSubDirectoryFile(string fileName, string subDirectory)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ReadTextFromCddSubDirectoryFile(fileName As String, subDirectory As String) As String
  overload: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile*
  implements:
  - Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.FileSystem
  commentId: N:Catalyst.Core.Lib.FileSystem
  name: Catalyst.Core.Lib.FileSystem
  nameWithType: Catalyst.Core.Lib.FileSystem
  fullName: Catalyst.Core.Lib.FileSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Abstractions.FileSystem
  commentId: T:System.IO.Abstractions.FileSystem
  parent: System.IO.Abstractions
  isExternal: true
  name: FileSystem
  nameWithType: FileSystem
  fullName: System.IO.Abstractions.FileSystem
- uid: Catalyst.Abstractions.FileSystem.IFileSystem
  commentId: T:Catalyst.Abstractions.FileSystem.IFileSystem
  parent: Catalyst.Abstractions.FileSystem
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem
- uid: System.IO.Abstractions.IFileSystem
  commentId: T:System.IO.Abstractions.IFileSystem
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: System.IO.Abstractions.IFileSystem
- uid: System.IO.Abstractions.FileSystem.Directory
  commentId: P:System.IO.Abstractions.FileSystem.Directory
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: Directory
  nameWithType: FileSystem.Directory
  fullName: System.IO.Abstractions.FileSystem.Directory
- uid: System.IO.Abstractions.FileSystem.File
  commentId: P:System.IO.Abstractions.FileSystem.File
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: File
  nameWithType: FileSystem.File
  fullName: System.IO.Abstractions.FileSystem.File
- uid: System.IO.Abstractions.FileSystem.FileInfo
  commentId: P:System.IO.Abstractions.FileSystem.FileInfo
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: FileInfo
  nameWithType: FileSystem.FileInfo
  fullName: System.IO.Abstractions.FileSystem.FileInfo
- uid: System.IO.Abstractions.FileSystem.FileStream
  commentId: P:System.IO.Abstractions.FileSystem.FileStream
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: FileStream
  nameWithType: FileSystem.FileStream
  fullName: System.IO.Abstractions.FileSystem.FileStream
- uid: System.IO.Abstractions.FileSystem.Path
  commentId: P:System.IO.Abstractions.FileSystem.Path
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: Path
  nameWithType: FileSystem.Path
  fullName: System.IO.Abstractions.FileSystem.Path
- uid: System.IO.Abstractions.FileSystem.DirectoryInfo
  commentId: P:System.IO.Abstractions.FileSystem.DirectoryInfo
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: DirectoryInfo
  nameWithType: FileSystem.DirectoryInfo
  fullName: System.IO.Abstractions.FileSystem.DirectoryInfo
- uid: System.IO.Abstractions.FileSystem.DriveInfo
  commentId: P:System.IO.Abstractions.FileSystem.DriveInfo
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: DriveInfo
  nameWithType: FileSystem.DriveInfo
  fullName: System.IO.Abstractions.FileSystem.DriveInfo
- uid: System.IO.Abstractions.FileSystem.FileSystemWatcher
  commentId: P:System.IO.Abstractions.FileSystem.FileSystemWatcher
  parent: System.IO.Abstractions.FileSystem
  isExternal: true
  name: FileSystemWatcher
  nameWithType: FileSystem.FileSystemWatcher
  fullName: System.IO.Abstractions.FileSystem.FileSystemWatcher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.Abstractions
  commentId: N:System.IO.Abstractions
  isExternal: true
  name: System.IO.Abstractions
  nameWithType: System.IO.Abstractions
  fullName: System.IO.Abstractions
- uid: Catalyst.Abstractions.FileSystem
  commentId: N:Catalyst.Abstractions.FileSystem
  name: Catalyst.Abstractions.FileSystem
  nameWithType: Catalyst.Abstractions.FileSystem
  fullName: Catalyst.Abstractions.FileSystem
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.#ctor*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.#ctor
  name: FileSystem
  nameWithType: FileSystem.FileSystem
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.FileSystem
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir
  name: GetCatalystDataDir
  nameWithType: FileSystem.GetCatalystDataDir
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.GetCatalystDataDir
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  name: GetCatalystDataDir()
  nameWithType: IFileSystem.GetCatalystDataDir()
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
    name: GetCatalystDataDir
    nameWithType: IFileSystem.GetCatalystDataDir
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
    name: GetCatalystDataDir
    nameWithType: IFileSystem.GetCatalystDataDir
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath
  name: SetCurrentPath
  nameWithType: FileSystem.SetCurrentPath
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.SetCurrentPath
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: SetCurrentPath(String)
  nameWithType: IFileSystem.SetCurrentPath(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
    name: SetCurrentPath
    nameWithType: IFileSystem.SetCurrentPath
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
    name: SetCurrentPath
    nameWithType: IFileSystem.SetCurrentPath
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync
  name: WriteTextFileToCddAsync
  nameWithType: FileSystem.WriteTextFileToCddAsync
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddAsync
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: WriteTextFileToCddAsync(String, String)
  nameWithType: IFileSystem.WriteTextFileToCddAsync(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String, System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
    name: WriteTextFileToCddAsync
    nameWithType: IFileSystem.WriteTextFileToCddAsync
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
    name: WriteTextFileToCddAsync
    nameWithType: IFileSystem.WriteTextFileToCddAsync
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IFileInfo>
  nameWithType: Task<IFileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.Abstractions.IFileInfo>
  nameWithType.vb: Task(Of IFileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Abstractions.IFileInfo)
  name.vb: Task(Of IFileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Abstractions.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: System.IO.Abstractions.IFileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Abstractions.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: System.IO.Abstractions.IFileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync
  name: WriteTextFileToCddSubDirectoryAsync
  nameWithType: FileSystem.WriteTextFileToCddSubDirectoryAsync
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.WriteTextFileToCddSubDirectoryAsync
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: WriteTextFileToCddSubDirectoryAsync(String, String, String)
  nameWithType: IFileSystem.WriteTextFileToCddSubDirectoryAsync(String, String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
    name: WriteTextFileToCddSubDirectoryAsync
    nameWithType: IFileSystem.WriteTextFileToCddSubDirectoryAsync
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
    name: WriteTextFileToCddSubDirectoryAsync
    nameWithType: IFileSystem.WriteTextFileToCddSubDirectoryAsync
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists
  name: DataFileExists
  nameWithType: FileSystem.DataFileExists
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExists
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: DataFileExists(String)
  nameWithType: IFileSystem.DataFileExists(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
    name: DataFileExists
    nameWithType: IFileSystem.DataFileExists
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
    name: DataFileExists
    nameWithType: IFileSystem.DataFileExists
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory
  name: DataFileExistsInSubDirectory
  nameWithType: FileSystem.DataFileExistsInSubDirectory
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.DataFileExistsInSubDirectory
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: DataFileExistsInSubDirectory(String, String)
  nameWithType: IFileSystem.DataFileExistsInSubDirectory(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String, System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
    name: DataFileExistsInSubDirectory
    nameWithType: IFileSystem.DataFileExistsInSubDirectory
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
    name: DataFileExistsInSubDirectory
    nameWithType: IFileSystem.DataFileExistsInSubDirectory
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile
  name: ReadTextFromCddFile
  nameWithType: FileSystem.ReadTextFromCddFile
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddFile
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: ReadTextFromCddFile(String)
  nameWithType: IFileSystem.ReadTextFromCddFile(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
    name: ReadTextFromCddFile
    nameWithType: IFileSystem.ReadTextFromCddFile
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
    name: ReadTextFromCddFile
    nameWithType: IFileSystem.ReadTextFromCddFile
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile*
  commentId: Overload:Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile
  name: ReadTextFromCddSubDirectoryFile
  nameWithType: FileSystem.ReadTextFromCddSubDirectoryFile
  fullName: Catalyst.Core.Lib.FileSystem.FileSystem.ReadTextFromCddSubDirectoryFile
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  isExternal: true
  name: ReadTextFromCddSubDirectoryFile(String, String)
  nameWithType: IFileSystem.ReadTextFromCddSubDirectoryFile(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String, System.String)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
    name: ReadTextFromCddSubDirectoryFile
    nameWithType: IFileSystem.ReadTextFromCddSubDirectoryFile
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
    name: ReadTextFromCddSubDirectoryFile
    nameWithType: IFileSystem.ReadTextFromCddSubDirectoryFile
    fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
