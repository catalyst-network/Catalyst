### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Extensions.StringExtensions
  commentId: T:Catalyst.Core.Lib.Extensions.StringExtensions
  id: StringExtensions
  parent: Catalyst.Core.Lib.Extensions
  children:
  - Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPAddress,System.Int32)
  - Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPEndPoint)
  - Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo``1(System.String)
  - Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream(System.String)
  - Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes(System.String)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StringExtensions
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream(System.String)
  commentId: M:Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream(System.String)
  id: ToMemoryStream(System.String)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToMemoryStream(String)
  nameWithType: StringExtensions.ToMemoryStream(String)
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToMemoryStream
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: public static Stream ToMemoryStream(this string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.IO.Stream
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMemoryStream(s As String) As Stream
  overload: Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes(System.String)
  commentId: M:Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes(System.String)
  id: ToUtf8Bytes(System.String)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToUtf8Bytes(String)
  nameWithType: StringExtensions.ToUtf8Bytes(String)
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToUtf8Bytes
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: public static byte[] ToUtf8Bytes(this string string)
    parameters:
    - id: string
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToUtf8Bytes(string As String) As Byte()
  overload: Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPEndPoint)
  commentId: M:Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPEndPoint)
  id: BuildPeerIdFromBase32Key(System.String,System.Net.IPEndPoint)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: BuildPeerIdFromBase32Key(String, IPEndPoint)
  nameWithType: StringExtensions.BuildPeerIdFromBase32Key(String, IPEndPoint)
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String, System.Net.IPEndPoint)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildPeerIdFromBase32Key
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: public static PeerId BuildPeerIdFromBase32Key(this string base32Key, IPEndPoint ipEndPoint)
    parameters:
    - id: base32Key
      type: System.String
    - id: ipEndPoint
      type: System.Net.IPEndPoint
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BuildPeerIdFromBase32Key(base32Key As String, ipEndPoint As IPEndPoint) As PeerId
  overload: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPAddress,System.Int32)
  commentId: M:Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String,System.Net.IPAddress,System.Int32)
  id: BuildPeerIdFromBase32Key(System.String,System.Net.IPAddress,System.Int32)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: BuildPeerIdFromBase32Key(String, IPAddress, Int32)
  nameWithType: StringExtensions.BuildPeerIdFromBase32Key(String, IPAddress, Int32)
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key(System.String, System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildPeerIdFromBase32Key
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 52
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: public static PeerId BuildPeerIdFromBase32Key(this string base32Key, IPAddress ipAddress, int port)
    parameters:
    - id: base32Key
      type: System.String
    - id: ipAddress
      type: System.Net.IPAddress
    - id: port
      type: System.Int32
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BuildPeerIdFromBase32Key(base32Key As String, ipAddress As IPAddress, port As Integer) As PeerId
  overload: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo``1(System.String)
  commentId: M:Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo``1(System.String)
  id: ParseHexStringTo``1(System.String)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ParseHexStringTo<T>(String)
  nameWithType: StringExtensions.ParseHexStringTo<T>(String)
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ParseHexStringTo
    path: ../src/Catalyst.Core.Lib/Extensions/StringExtensions.cs
    startLine: 59
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions
  syntax:
    content: >-
      public static T ParseHexStringTo<T>(this string hex16Pid)

          where T : IMessage<T>, new()
    parameters:
    - id: hex16Pid
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ParseHexStringTo(Of T As {IMessage(Of T), New})(hex16Pid As String) As T
  overload: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo*
  nameWithType.vb: StringExtensions.ParseHexStringTo(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo(Of T)(System.String)
  name.vb: ParseHexStringTo(Of T)(String)
references:
- uid: Catalyst.Core.Lib.Extensions
  commentId: N:Catalyst.Core.Lib.Extensions
  name: Catalyst.Core.Lib.Extensions
  nameWithType: Catalyst.Core.Lib.Extensions
  fullName: Catalyst.Core.Lib.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream*
  commentId: Overload:Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream
  name: ToMemoryStream
  nameWithType: StringExtensions.ToMemoryStream
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ToMemoryStream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes*
  commentId: Overload:Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes
  name: ToUtf8Bytes
  nameWithType: StringExtensions.ToUtf8Bytes
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ToUtf8Bytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key*
  commentId: Overload:Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key
  name: BuildPeerIdFromBase32Key
  nameWithType: StringExtensions.BuildPeerIdFromBase32Key
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.BuildPeerIdFromBase32Key
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo*
  commentId: Overload:Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo
  name: ParseHexStringTo
  nameWithType: StringExtensions.ParseHexStringTo
  fullName: Catalyst.Core.Lib.Extensions.StringExtensions.ParseHexStringTo
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
