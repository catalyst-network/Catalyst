### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Config.ConfigValueParser
  commentId: T:Catalyst.Core.Lib.Config.ConfigValueParser
  id: ConfigValueParser
  parent: Catalyst.Core.Lib.Config
  children:
  - Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  - Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  langs:
  - csharp
  - vb
  name: ConfigValueParser
  nameWithType: ConfigValueParser
  fullName: Catalyst.Core.Lib.Config.ConfigValueParser
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfigValueParser
    path: ../src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static class ConfigValueParser
    content.vb: Public Module ConfigValueParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  commentId: M:Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  id: GetIpEndpointArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  parent: Catalyst.Core.Lib.Config.ConfigValueParser
  langs:
  - csharp
  - vb
  name: GetIpEndpointArrValues(IConfigurationRoot, String)
  nameWithType: ConfigValueParser.GetIpEndpointArrValues(IConfigurationRoot, String)
  fullName: Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetIpEndpointArrValues
    path: ../src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: "\nuse to parse array of IPEndpoints from config\n"
  example: []
  syntax:
    content: public static IPEndPoint[] GetIpEndpointArrValues(IConfigurationRoot configurationRoot, string section)
    parameters:
    - id: configurationRoot
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: ''
    - id: section
      type: System.String
      description: ''
    return:
      type: System.Net.IPEndPoint[]
      description: ''
    content.vb: Public Shared Function GetIpEndpointArrValues(configurationRoot As IConfigurationRoot, section As String) As IPEndPoint()
  overload: Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  commentId: M:Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  id: GetStringArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)
  parent: Catalyst.Core.Lib.Config.ConfigValueParser
  langs:
  - csharp
  - vb
  name: GetStringArrValues(IConfigurationRoot, String)
  nameWithType: ConfigValueParser.GetStringArrValues(IConfigurationRoot, String)
  fullName: Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues(Microsoft.Extensions.Configuration.IConfigurationRoot, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetStringArrValues
    path: ../src/Catalyst.Core.Lib/Config/ConfigValueParser.cs
    startLine: 53
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: "\nUse to parse array of strings from config\n"
  example: []
  syntax:
    content: public static string[] GetStringArrValues(IConfigurationRoot configurationRoot, string section)
    parameters:
    - id: configurationRoot
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: ''
    - id: section
      type: System.String
      description: ''
    return:
      type: System.String[]
      description: ''
    content.vb: Public Shared Function GetStringArrValues(configurationRoot As IConfigurationRoot, section As String) As String()
  overload: Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Config
  commentId: N:Catalyst.Core.Lib.Config
  name: Catalyst.Core.Lib.Config
  nameWithType: Catalyst.Core.Lib.Config
  fullName: Catalyst.Core.Lib.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues*
  commentId: Overload:Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues
  name: GetIpEndpointArrValues
  nameWithType: ConfigValueParser.GetIpEndpointArrValues
  fullName: Catalyst.Core.Lib.Config.ConfigValueParser.GetIpEndpointArrValues
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IPEndPoint[]
  isExternal: true
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: System.Net.IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: System.Net.IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues*
  commentId: Overload:Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues
  name: GetStringArrValues
  nameWithType: ConfigValueParser.GetStringArrValues
  fullName: Catalyst.Core.Lib.Config.ConfigValueParser.GetStringArrValues
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
