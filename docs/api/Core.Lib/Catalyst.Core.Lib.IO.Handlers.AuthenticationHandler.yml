### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  commentId: T:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  id: AuthenticationHandler
  parent: Catalyst.Core.Lib.IO.Handlers
  children:
  - Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor(Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy)
  - Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  langs:
  - csharp
  - vb
  name: AuthenticationHandler
  nameWithType: AuthenticationHandler
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AuthenticationHandler
    path: ../src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: "\nDotNetty Handler in-charge of blocking RPC messages if the node operator is not trusted\n"
  example: []
  syntax:
    content: 'public sealed class AuthenticationHandler : InboundChannelHandlerBase<ProtocolMessage>, IChannelHandler'
    content.vb: >-
      Public NotInheritable Class AuthenticationHandler

          Inherits InboundChannelHandlerBase(Of ProtocolMessage)

          Implements IChannelHandler
  seealso:
  - linkId: DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
    commentId: T:DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.ChannelHandlerAdapter
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  implements:
  - DotNetty.Transport.Channels.IChannelHandler
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.Logger
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor(Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor(Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy)
  id: '#ctor(Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy)'
  parent: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: AuthenticationHandler(IAuthenticationStrategy)
  nameWithType: AuthenticationHandler.AuthenticationHandler(IAuthenticationStrategy)
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.AuthenticationHandler(Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: Initializes a new instance of the <xref href="Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AuthenticationHandler(IAuthenticationStrategy authenticationStrategy)
    parameters:
    - id: authenticationStrategy
      type: Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy
      description: The authentication strategy.
    content.vb: Public Sub New(authenticationStrategy As IAuthenticationStrategy)
  overload: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  id: ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  langs:
  - csharp
  - vb
  name: ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  nameWithType: AuthenticationHandler.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext, Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ChannelRead0
    path: ../src/Catalyst.Core.Lib/IO/Handlers/AuthenticationHandler.cs
    startLine: 50
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  example: []
  syntax:
    content: protected override void ChannelRead0(IChannelHandlerContext ctx, ProtocolMessage msg)
    parameters:
    - id: ctx
      type: DotNetty.Transport.Channels.IChannelHandlerContext
    - id: msg
      type: Catalyst.Protocol.Wire.ProtocolMessage
    content.vb: Protected Overrides Sub ChannelRead0(ctx As IChannelHandlerContext, msg As ProtocolMessage)
  overridden: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  overload: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
  commentId: T:DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
  isExternal: true
  name: SimpleChannelInboundHandler<I>
  nameWithType: SimpleChannelInboundHandler<I>
  fullName: DotNetty.Transport.Channels.SimpleChannelInboundHandler<I>
  nameWithType.vb: SimpleChannelInboundHandler(Of I)
  fullName.vb: DotNetty.Transport.Channels.SimpleChannelInboundHandler(Of I)
  name.vb: SimpleChannelInboundHandler(Of I)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
    name: SimpleChannelInboundHandler
    nameWithType: SimpleChannelInboundHandler
    fullName: DotNetty.Transport.Channels.SimpleChannelInboundHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: I
    nameWithType: I
    fullName: I
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DotNetty.Transport.Channels.SimpleChannelInboundHandler`1
    name: SimpleChannelInboundHandler
    nameWithType: SimpleChannelInboundHandler
    fullName: DotNetty.Transport.Channels.SimpleChannelInboundHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: I
    nameWithType: I
    fullName: I
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers
  commentId: N:Catalyst.Core.Lib.IO.Handlers
  name: Catalyst.Core.Lib.IO.Handlers
  nameWithType: Catalyst.Core.Lib.IO.Handlers
  fullName: Catalyst.Core.Lib.IO.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter
  commentId: T:DotNetty.Transport.Channels.ChannelHandlerAdapter
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelHandlerAdapter
  nameWithType: ChannelHandlerAdapter
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  commentId: T:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  parent: Catalyst.Core.Lib.IO.Handlers
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  name: InboundChannelHandlerBase<ProtocolMessage>
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage)
  name.vb: InboundChannelHandlerBase(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.IChannelHandler
  commentId: T:DotNetty.Transport.Channels.IChannelHandler
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandler
  nameWithType: IChannelHandler
  fullName: DotNetty.Transport.Channels.IChannelHandler
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.Logger
  commentId: F:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.Logger
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  name: Logger
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.Logger
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>.Logger
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).Logger
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage).Logger
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage).ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>.ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage).ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelUnregistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelUnregistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelActive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelActive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelInactive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelInactive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelReadComplete(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelReadComplete(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelWritabilityChanged(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerRemoved(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerRemoved(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: UserEventTriggered(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.UserEventTriggered(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Flush(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Flush(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: BindAsync(IChannelHandlerContext, EndPoint)
  nameWithType: ChannelHandlerAdapter.BindAsync(IChannelHandlerContext, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  nameWithType: ChannelHandlerAdapter.ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DisconnectAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DisconnectAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: CloseAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.CloseAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelHandlerAdapter.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DeregisterAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DeregisterAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Read(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Read(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: EnsureNotSharable()
  nameWithType: ChannelHandlerAdapter.EnsureNotSharable()
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: IsSharable
  nameWithType: ChannelHandlerAdapter.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  name: InboundChannelHandlerBase<T>
  nameWithType: InboundChannelHandlerBase<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>
  nameWithType.vb: InboundChannelHandlerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T)
  name.vb: InboundChannelHandlerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  commentId: F:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  name: Logger
  nameWithType: InboundChannelHandlerBase<T>.Logger
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.Logger
  nameWithType.vb: InboundChannelHandlerBase(Of T).Logger
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).Logger
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: InboundChannelHandlerBase<T>.ChannelRead(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  nameWithType.vb: InboundChannelHandlerBase(Of T).ChannelRead(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase<T>.ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase(Of T).ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  commentId: T:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
  name: AuthenticationHandler
  nameWithType: AuthenticationHandler
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.#ctor
  name: AuthenticationHandler
  nameWithType: AuthenticationHandler.AuthenticationHandler
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.AuthenticationHandler
- uid: Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy
  commentId: T:Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy
  parent: Catalyst.Abstractions.Rpc.Authentication
  name: IAuthenticationStrategy
  nameWithType: IAuthenticationStrategy
  fullName: Catalyst.Abstractions.Rpc.Authentication.IAuthenticationStrategy
- uid: Catalyst.Abstractions.Rpc.Authentication
  commentId: N:Catalyst.Abstractions.Rpc.Authentication
  name: Catalyst.Abstractions.Rpc.Authentication
  nameWithType: Catalyst.Abstractions.Rpc.Authentication
  fullName: Catalyst.Abstractions.Rpc.Authentication
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{Catalyst.Protocol.Wire.ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  name: ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext, Catalyst.Protocol.Wire.ProtocolMessage)
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage).ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext, Catalyst.Protocol.Wire.ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<Catalyst.Protocol.Wire.ProtocolMessage>.ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of Catalyst.Protocol.Wire.ProtocolMessage).ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0
  name: ChannelRead0
  nameWithType: AuthenticationHandler.ChannelRead0
  fullName: Catalyst.Core.Lib.IO.Handlers.AuthenticationHandler.ChannelRead0
- uid: DotNetty.Transport.Channels.IChannelHandlerContext
  commentId: T:DotNetty.Transport.Channels.IChannelHandlerContext
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: DotNetty.Transport.Channels.IChannelHandlerContext
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  isExternal: true
  name: ChannelRead0(IChannelHandlerContext, T)
  nameWithType: InboundChannelHandlerBase<T>.ChannelRead0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext, T)
  nameWithType.vb: InboundChannelHandlerBase(Of T).ChannelRead0(IChannelHandlerContext, T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext, T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase<T>.ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase(Of T).ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
