### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.P2P.PeerSettings
  commentId: T:Catalyst.Core.Lib.P2P.PeerSettings
  id: PeerSettings
  parent: Catalyst.Core.Lib.P2P
  children:
  - Catalyst.Core.Lib.P2P.PeerSettings.#ctor(Microsoft.Extensions.Configuration.IConfigurationRoot)
  - Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
  - Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
  - Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
  - Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
  - Catalyst.Core.Lib.P2P.PeerSettings.PeerId
  - Catalyst.Core.Lib.P2P.PeerSettings.Port
  - Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
  - Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
  - Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
  langs:
  - csharp
  - vb
  name: PeerSettings
  nameWithType: PeerSettings
  fullName: Catalyst.Core.Lib.P2P.PeerSettings
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerSettings
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 40
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  summary: "\nPeer settings class.\n"
  example: []
  syntax:
    content: 'public sealed class PeerSettings : IPeerSettings'
    content.vb: >-
      Public NotInheritable Class PeerSettings

          Implements IPeerSettings
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
  id: NetworkType
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: PeerSettings.NetworkType
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NetworkType
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public NetworkType NetworkType { get; }
    parameters: []
    return:
      type: Catalyst.Protocol.Network.NetworkType
    content.vb: Public ReadOnly Property NetworkType As NetworkType
  overload: Catalyst.Core.Lib.P2P.PeerSettings.NetworkType*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
  id: PublicKey
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: PeerSettings.PublicKey
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicKey
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public string PublicKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PublicKey As String
  overload: Catalyst.Core.Lib.P2P.PeerSettings.PublicKey*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.Port
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.Port
  id: Port
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: PeerSettings.Port
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.Port
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Port
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Catalyst.Core.Lib.P2P.PeerSettings.Port*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.Port
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
  id: PayoutAddress
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: PayoutAddress
  nameWithType: PeerSettings.PayoutAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PayoutAddress
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public string PayoutAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PayoutAddress As String
  overload: Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
  id: BindAddress
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: BindAddress
  nameWithType: PeerSettings.BindAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BindAddress
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IPAddress BindAddress { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: Public ReadOnly Property BindAddress As IPAddress
  overload: Catalyst.Core.Lib.P2P.PeerSettings.BindAddress*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
  id: SeedServers
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: SeedServers
  nameWithType: PeerSettings.SeedServers
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SeedServers
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IList<string> SeedServers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property SeedServers As IList(Of String)
  overload: Catalyst.Core.Lib.P2P.PeerSettings.SeedServers*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
  id: PublicIpAddress
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: PublicIpAddress
  nameWithType: PeerSettings.PublicIpAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicIpAddress
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IPAddress PublicIpAddress { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: Public ReadOnly Property PublicIpAddress As IPAddress
  overload: Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
  id: DnsServers
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: DnsServers
  nameWithType: PeerSettings.DnsServers
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DnsServers
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 50
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IPEndPoint[] DnsServers { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint[]
    content.vb: Public ReadOnly Property DnsServers As IPEndPoint()
  overload: Catalyst.Core.Lib.P2P.PeerSettings.DnsServers*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PeerId
  commentId: P:Catalyst.Core.Lib.P2P.PeerSettings.PeerId
  id: PeerId
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: PeerId
  nameWithType: PeerSettings.PeerId
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PeerId
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerId
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public PeerId PeerId { get; }
    parameters: []
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: Public ReadOnly Property PeerId As PeerId
  overload: Catalyst.Core.Lib.P2P.PeerSettings.PeerId*
  implements:
  - Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerSettings.#ctor(Microsoft.Extensions.Configuration.IConfigurationRoot)
  commentId: M:Catalyst.Core.Lib.P2P.PeerSettings.#ctor(Microsoft.Extensions.Configuration.IConfigurationRoot)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfigurationRoot)'
  parent: Catalyst.Core.Lib.P2P.PeerSettings
  langs:
  - csharp
  - vb
  name: PeerSettings(IConfigurationRoot)
  nameWithType: PeerSettings.PeerSettings(IConfigurationRoot)
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PeerSettings(Microsoft.Extensions.Configuration.IConfigurationRoot)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/P2P/PeerSettings.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  summary: "\nSet attributes\n"
  example: []
  syntax:
    content: public PeerSettings(IConfigurationRoot rootSection)
    parameters:
    - id: rootSection
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: ''
    content.vb: Public Sub New(rootSection As IConfigurationRoot)
  overload: Catalyst.Core.Lib.P2P.PeerSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.P2P
  commentId: N:Catalyst.Core.Lib.P2P
  name: Catalyst.Core.Lib.P2P
  nameWithType: Catalyst.Core.Lib.P2P
  fullName: Catalyst.Core.Lib.P2P
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Core.Lib.P2P.PeerSettings.NetworkType*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
  name: NetworkType
  nameWithType: PeerSettings.NetworkType
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.NetworkType
- uid: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: NetworkType
  nameWithType: IPeerSettings.NetworkType
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
- uid: Catalyst.Protocol.Network.NetworkType
  commentId: T:Catalyst.Protocol.Network.NetworkType
  parent: Catalyst.Protocol.Network
  name: NetworkType
  nameWithType: NetworkType
  fullName: Catalyst.Protocol.Network.NetworkType
- uid: Catalyst.Protocol.Network
  commentId: N:Catalyst.Protocol.Network
  name: Catalyst.Protocol.Network
  nameWithType: Catalyst.Protocol.Network
  fullName: Catalyst.Protocol.Network
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PublicKey*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
  name: PublicKey
  nameWithType: PeerSettings.PublicKey
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PublicKey
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: PublicKey
  nameWithType: IPeerSettings.PublicKey
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Lib.P2P.PeerSettings.Port*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.Port
  name: Port
  nameWithType: PeerSettings.Port
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.Port
- uid: Catalyst.Abstractions.P2P.IPeerSettings.Port
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.Port
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: Port
  nameWithType: IPeerSettings.Port
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
  name: PayoutAddress
  nameWithType: PeerSettings.PayoutAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PayoutAddress
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: PayoutAddress
  nameWithType: IPeerSettings.PayoutAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
- uid: Catalyst.Core.Lib.P2P.PeerSettings.BindAddress*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
  name: BindAddress
  nameWithType: PeerSettings.BindAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.BindAddress
- uid: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: BindAddress
  nameWithType: IPeerSettings.BindAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Catalyst.Core.Lib.P2P.PeerSettings.SeedServers*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
  name: SeedServers
  nameWithType: PeerSettings.SeedServers
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.SeedServers
- uid: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: SeedServers
  nameWithType: IPeerSettings.SeedServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
  name: PublicIpAddress
  nameWithType: PeerSettings.PublicIpAddress
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PublicIpAddress
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: PublicIpAddress
  nameWithType: IPeerSettings.PublicIpAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
- uid: Catalyst.Core.Lib.P2P.PeerSettings.DnsServers*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
  name: DnsServers
  nameWithType: PeerSettings.DnsServers
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.DnsServers
- uid: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: DnsServers
  nameWithType: IPeerSettings.DnsServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
- uid: System.Net.IPEndPoint[]
  isExternal: true
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: System.Net.IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: System.Net.IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Catalyst.Core.Lib.P2P.PeerSettings.PeerId*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.PeerId
  name: PeerId
  nameWithType: PeerSettings.PeerId
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PeerId
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  name: PeerId
  nameWithType: IPeerSettings.PeerId
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PeerId
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
- uid: Catalyst.Core.Lib.P2P.PeerSettings.#ctor*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerSettings.#ctor
  name: PeerSettings
  nameWithType: PeerSettings.PeerSettings
  fullName: Catalyst.Core.Lib.P2P.PeerSettings.PeerSettings
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
