### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  commentId: T:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  id: MessageCorrelationManagerBase
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation
  children:
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Serilog.ILogger,Catalyst.Abstractions.Util.IChangeTokenProvider)
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose(System.Boolean)
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback(System.Object,System.Object,Microsoft.Extensions.Caching.Memory.EvictionReason,System.Object)
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Logger
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.PendingRequests
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  - Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  langs:
  - csharp
  - vb
  name: MessageCorrelationManagerBase
  nameWithType: MessageCorrelationManagerBase
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MessageCorrelationManagerBase
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: 'public abstract class MessageCorrelationManagerBase : IMessageCorrelationManager, IDisposable'
    content.vb: >-
      Public MustInherit Class MessageCorrelationManagerBase

          Implements IMessageCorrelationManager, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Catalyst.Core.Lib.P2P.IO.Messaging.Correlation.PeerMessageCorrelationManager
  - Catalyst.Core.Lib.Rpc.IO.Messaging.Correlation.RpcMessageCorrelationManager
  implements:
  - Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.PendingRequests
  commentId: F:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.PendingRequests
  id: PendingRequests
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: PendingRequests
  nameWithType: MessageCorrelationManagerBase.PendingRequests
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.PendingRequests
  type: Field
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PendingRequests
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: protected readonly IMemoryCache PendingRequests
    return:
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    content.vb: Protected ReadOnly PendingRequests As IMemoryCache
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Logger
  commentId: F:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Logger
  id: Logger
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: MessageCorrelationManagerBase.Logger
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Logger
  type: Field
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Logger
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: protected readonly ILogger Logger
    return:
      type: Serilog.ILogger
    content.vb: Protected ReadOnly Logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Serilog.ILogger,Catalyst.Abstractions.Util.IChangeTokenProvider)
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Serilog.ILogger,Catalyst.Abstractions.Util.IChangeTokenProvider)
  id: '#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Serilog.ILogger,Catalyst.Abstractions.Util.IChangeTokenProvider)'
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: MessageCorrelationManagerBase(IMemoryCache, ILogger, IChangeTokenProvider)
  nameWithType: MessageCorrelationManagerBase.MessageCorrelationManagerBase(IMemoryCache, ILogger, IChangeTokenProvider)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.MessageCorrelationManagerBase(Microsoft.Extensions.Caching.Memory.IMemoryCache, Serilog.ILogger, Catalyst.Abstractions.Util.IChangeTokenProvider)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 41
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: protected MessageCorrelationManagerBase(IMemoryCache cache, ILogger logger, IChangeTokenProvider changeTokenProvider)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    - id: logger
      type: Serilog.ILogger
    - id: changeTokenProvider
      type: Catalyst.Abstractions.Util.IChangeTokenProvider
    content.vb: Protected Sub New(cache As IMemoryCache, logger As ILogger, changeTokenProvider As IChangeTokenProvider)
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback(System.Object,System.Object,Microsoft.Extensions.Caching.Memory.EvictionReason,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback(System.Object,System.Object,Microsoft.Extensions.Caching.Memory.EvictionReason,System.Object)
  id: EvictionCallback(System.Object,System.Object,Microsoft.Extensions.Caching.Memory.EvictionReason,System.Object)
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: EvictionCallback(Object, Object, EvictionReason, Object)
  nameWithType: MessageCorrelationManagerBase.EvictionCallback(Object, Object, EvictionReason, Object)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback(System.Object, System.Object, Microsoft.Extensions.Caching.Memory.EvictionReason, System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: EvictionCallback
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 61
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  summary: "\nA callback method that is called upon eviction of a message,\nfor basic protocols such the RPC, it doesn&apos;t do anything\n"
  example: []
  syntax:
    content: protected abstract void EvictionCallback(object key, object value, EvictionReason reason, object state)
    parameters:
    - id: key
      type: System.Object
      description: ''
    - id: value
      type: System.Object
      description: ''
    - id: reason
      type: Microsoft.Extensions.Caching.Memory.EvictionReason
      description: ''
    - id: state
      type: System.Object
      description: ''
    content.vb: Protected MustOverride Sub EvictionCallback(key As Object, value As Object, reason As EvictionReason, state As Object)
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  id: AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: AddPendingRequest(ICorrelatableMessage<ProtocolMessage>)
  nameWithType: MessageCorrelationManagerBase.AddPendingRequest(ICorrelatableMessage<ProtocolMessage>)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage<Catalyst.Protocol.Wire.ProtocolMessage>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AddPendingRequest
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 67
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  summary: "\nStores a CorrelatableMessage in the cache so we can correlate incoming messages.\n"
  example: []
  syntax:
    content: public virtual void AddPendingRequest(ICorrelatableMessage<ProtocolMessage> correlatableMessage)
    parameters:
    - id: correlatableMessage
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage}
      description: ''
    content.vb: Public Overridable Sub AddPendingRequest(correlatableMessage As ICorrelatableMessage(Of ProtocolMessage))
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest*
  implements:
  - Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  nameWithType.vb: MessageCorrelationManagerBase.AddPendingRequest(ICorrelatableMessage(Of ProtocolMessage))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: AddPendingRequest(ICorrelatableMessage(Of ProtocolMessage))
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  id: TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: TryMatchResponse(ProtocolMessage)
  nameWithType: MessageCorrelationManagerBase.TryMatchResponse(ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TryMatchResponse
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 78
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  summary: "\nTakes a generic request type of IMessage, and generic response type of IMessage and the message and look them up in the cache.\nReturn what&apos;s found or emit an-uncorrectable event \n"
  example: []
  syntax:
    content: public virtual bool TryMatchResponse(ProtocolMessage response)
    parameters:
    - id: response
      type: Catalyst.Protocol.Wire.ProtocolMessage
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function TryMatchResponse(response As ProtocolMessage) As Boolean
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse*
  implements:
  - Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  id: ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: ValidateResponseType(ProtocolMessage, ICorrelatableMessage<ProtocolMessage>)
  nameWithType: MessageCorrelationManagerBase.ValidateResponseType(ProtocolMessage, ICorrelatableMessage<ProtocolMessage>)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage, Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage<Catalyst.Protocol.Wire.ProtocolMessage>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ValidateResponseType
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 100
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  remarks: "\nDo we want to create reputation events if the response type doesn&apos;t match?\nhttps://github.com/catalyst-network/Catalyst.Node/issues/674\nThis might be OK if we can be sure that the person responding is actually\nthe one with the PeerId mentioned in the response. Is the correlationId\nenough to ensure that?\n"
  example: []
  syntax:
    content: protected static void ValidateResponseType(ProtocolMessage response, ICorrelatableMessage<ProtocolMessage> responseFromCache)
    parameters:
    - id: response
      type: Catalyst.Protocol.Wire.ProtocolMessage
    - id: responseFromCache
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage}
    content.vb: Protected Shared Sub ValidateResponseType(response As ProtocolMessage, responseFromCache As ICorrelatableMessage(Of ProtocolMessage))
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType*
  nameWithType.vb: MessageCorrelationManagerBase.ValidateResponseType(ProtocolMessage, ICorrelatableMessage(Of ProtocolMessage))
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType(Catalyst.Protocol.Wire.ProtocolMessage, Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: ValidateResponseType(ProtocolMessage, ICorrelatableMessage(Of ProtocolMessage))
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MessageCorrelationManagerBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 112
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose
  id: Dispose
  parent: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MessageCorrelationManagerBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Correlation/MessageCorrelationManagerBase.cs
    startLine: 122
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Correlation
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation
  commentId: N:Catalyst.Core.Lib.IO.Messaging.Correlation
  name: Catalyst.Core.Lib.IO.Messaging.Correlation
  nameWithType: Catalyst.Core.Lib.IO.Messaging.Correlation
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  name: IMessageCorrelationManager
  nameWithType: IMessageCorrelationManager
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Messaging.Correlation
  commentId: N:Catalyst.Abstractions.IO.Messaging.Correlation
  name: Catalyst.Abstractions.IO.Messaging.Correlation
  nameWithType: Catalyst.Abstractions.IO.Messaging.Correlation
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.#ctor
  name: MessageCorrelationManagerBase
  nameWithType: MessageCorrelationManagerBase.MessageCorrelationManagerBase
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.MessageCorrelationManagerBase
- uid: Catalyst.Abstractions.Util.IChangeTokenProvider
  commentId: T:Catalyst.Abstractions.Util.IChangeTokenProvider
  parent: Catalyst.Abstractions.Util
  name: IChangeTokenProvider
  nameWithType: IChangeTokenProvider
  fullName: Catalyst.Abstractions.Util.IChangeTokenProvider
- uid: Catalyst.Abstractions.Util
  commentId: N:Catalyst.Abstractions.Util
  name: Catalyst.Abstractions.Util
  nameWithType: Catalyst.Abstractions.Util
  fullName: Catalyst.Abstractions.Util
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback
  name: EvictionCallback
  nameWithType: MessageCorrelationManagerBase.EvictionCallback
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.EvictionCallback
- uid: Microsoft.Extensions.Caching.Memory.EvictionReason
  commentId: T:Microsoft.Extensions.Caching.Memory.EvictionReason
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: EvictionReason
  nameWithType: EvictionReason
  fullName: Microsoft.Extensions.Caching.Memory.EvictionReason
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest
  name: AddPendingRequest
  nameWithType: MessageCorrelationManagerBase.AddPendingRequest
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.AddPendingRequest
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  commentId: M:Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
  parent: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
  name: AddPendingRequest(ICorrelatableMessage<ProtocolMessage>)
  nameWithType: IMessageCorrelationManager.AddPendingRequest(ICorrelatableMessage<ProtocolMessage>)
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage<Catalyst.Protocol.Wire.ProtocolMessage>)
  nameWithType.vb: IMessageCorrelationManager.AddPendingRequest(ICorrelatableMessage(Of ProtocolMessage))
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: AddPendingRequest(ICorrelatableMessage(Of ProtocolMessage))
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
    name: AddPendingRequest
    nameWithType: IMessageCorrelationManager.AddPendingRequest
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage})
    name: AddPendingRequest
    nameWithType: IMessageCorrelationManager.AddPendingRequest
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.AddPendingRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage}
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage{Catalyst.Protocol.Wire.ProtocolMessage}
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  definition: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
  name: ICorrelatableMessage<ProtocolMessage>
  nameWithType: ICorrelatableMessage<ProtocolMessage>
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage<Catalyst.Protocol.Wire.ProtocolMessage>
  nameWithType.vb: ICorrelatableMessage(Of ProtocolMessage)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage(Of Catalyst.Protocol.Wire.ProtocolMessage)
  name.vb: ICorrelatableMessage(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
  name: ICorrelatableMessage<T>
  nameWithType: ICorrelatableMessage<T>
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage<T>
  nameWithType.vb: ICorrelatableMessage(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage(Of T)
  name.vb: ICorrelatableMessage(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage`1
    name: ICorrelatableMessage
    nameWithType: ICorrelatableMessage
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelatableMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse
  name: TryMatchResponse
  nameWithType: MessageCorrelationManagerBase.TryMatchResponse
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.TryMatchResponse
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager
  name: TryMatchResponse(ProtocolMessage)
  nameWithType: IMessageCorrelationManager.TryMatchResponse(ProtocolMessage)
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
    name: TryMatchResponse
    nameWithType: IMessageCorrelationManager.TryMatchResponse
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse(Catalyst.Protocol.Wire.ProtocolMessage)
    name: TryMatchResponse
    nameWithType: IMessageCorrelationManager.TryMatchResponse
    fullName: Catalyst.Abstractions.IO.Messaging.Correlation.IMessageCorrelationManager.TryMatchResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType
  name: ValidateResponseType
  nameWithType: MessageCorrelationManagerBase.ValidateResponseType
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.ValidateResponseType
- uid: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose
  name: Dispose
  nameWithType: MessageCorrelationManagerBase.Dispose
  fullName: Catalyst.Core.Lib.IO.Messaging.Correlation.MessageCorrelationManagerBase.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
