### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Config.Constants
  commentId: T:Catalyst.Core.Lib.Config.Constants
  id: Constants
  parent: Catalyst.Core.Lib.Config
  children:
  - Catalyst.Core.Lib.Config.Constants.CatalystDataDir
  - Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
  - Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
  - Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
  - Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
  - Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
  - Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
  - Catalyst.Core.Lib.Config.Constants.JsonFilePattern
  - Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
  - Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
  - Catalyst.Core.Lib.Config.Constants.NetworkConfigFile(Catalyst.Protocol.Network.NetworkType,System.String)
  - Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
  - Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
  langs:
  - csharp
  - vb
  name: Constants
  nameWithType: Constants
  fullName: Catalyst.Core.Lib.Config.Constants
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Constants
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 27
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static class Constants
    content.vb: Public Module Constants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
  commentId: P:Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
  id: ConfigSubFolder
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: ConfigSubFolder
  nameWithType: Constants.ConfigSubFolder
  fullName: Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfigSubFolder
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string ConfigSubFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ConfigSubFolder As String
  overload: Catalyst.Core.Lib.Config.Constants.ConfigSubFolder*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
  commentId: P:Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
  id: SerilogJsonConfigFile
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: SerilogJsonConfigFile
  nameWithType: Constants.SerilogJsonConfigFile
  fullName: Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SerilogJsonConfigFile
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string SerilogJsonConfigFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property SerilogJsonConfigFile As String
  overload: Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.JsonFilePattern
  commentId: P:Catalyst.Core.Lib.Config.Constants.JsonFilePattern
  id: JsonFilePattern
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: JsonFilePattern
  nameWithType: Constants.JsonFilePattern
  fullName: Catalyst.Core.Lib.Config.Constants.JsonFilePattern
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: JsonFilePattern
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string JsonFilePattern { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property JsonFilePattern As String
  overload: Catalyst.Core.Lib.Config.Constants.JsonFilePattern*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.CatalystDataDir
  commentId: P:Catalyst.Core.Lib.Config.Constants.CatalystDataDir
  id: CatalystDataDir
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: CatalystDataDir
  nameWithType: Constants.CatalystDataDir
  fullName: Catalyst.Core.Lib.Config.Constants.CatalystDataDir
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CatalystDataDir
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string CatalystDataDir { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property CatalystDataDir As String
  overload: Catalyst.Core.Lib.Config.Constants.CatalystDataDir*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
  commentId: P:Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
  id: DfsDataSubDir
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: DfsDataSubDir
  nameWithType: Constants.DfsDataSubDir
  fullName: Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DfsDataSubDir
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 42
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string DfsDataSubDir { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property DfsDataSubDir As String
  overload: Catalyst.Core.Lib.Config.Constants.DfsDataSubDir*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
  commentId: P:Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
  id: KeyStoreDataSubDir
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: KeyStoreDataSubDir
  nameWithType: Constants.KeyStoreDataSubDir
  fullName: Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: KeyStoreDataSubDir
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string KeyStoreDataSubDir { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property KeyStoreDataSubDir As String
  overload: Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
  commentId: P:Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
  id: FileTransferExpirySeconds
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: FileTransferExpirySeconds
  nameWithType: Constants.FileTransferExpirySeconds
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileTransferExpirySeconds
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: 'The expiry minutes of initialization '
  example: []
  syntax:
    content: public static int FileTransferExpirySeconds { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property FileTransferExpirySeconds As Integer
  overload: Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
  commentId: P:Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
  id: FileTransferChunkSize
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: FileTransferChunkSize
  nameWithType: Constants.FileTransferChunkSize
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileTransferChunkSize
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: 'The chunk size in bytes '
  example: []
  syntax:
    content: public static int FileTransferChunkSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property FileTransferChunkSize As Integer
  overload: Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
  commentId: P:Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
  id: FileTransferMaxChunkRetryCount
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: FileTransferMaxChunkRetryCount
  nameWithType: Constants.FileTransferMaxChunkRetryCount
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileTransferMaxChunkRetryCount
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 54
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: 'The maximum chunk retry count '
  example: []
  syntax:
    content: public static int FileTransferMaxChunkRetryCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property FileTransferMaxChunkRetryCount As Integer
  overload: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
  commentId: P:Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
  id: FileTransferMaxChunkReadTries
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: FileTransferMaxChunkReadTries
  nameWithType: Constants.FileTransferMaxChunkReadTries
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileTransferMaxChunkReadTries
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: 'The maximum chunk read tries '
  example: []
  syntax:
    content: public static int FileTransferMaxChunkReadTries { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property FileTransferMaxChunkReadTries As Integer
  overload: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
  commentId: P:Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
  id: KeyChainDefaultKeyType
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: KeyChainDefaultKeyType
  nameWithType: Constants.KeyChainDefaultKeyType
  fullName: Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: KeyChainDefaultKeyType
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 60
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: 'EdDSA Curve  type '
  example: []
  syntax:
    content: public static string KeyChainDefaultKeyType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property KeyChainDefaultKeyType As String
  overload: Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
  commentId: P:Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
  id: NumberOfRandomPeers
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: NumberOfRandomPeers
  nameWithType: Constants.NumberOfRandomPeers
  fullName: Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NumberOfRandomPeers
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 63
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  summary: Number of random peers to provide when processing a GetNeighbourRequest
  example: []
  syntax:
    content: public static int NumberOfRandomPeers { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property NumberOfRandomPeers As Integer
  overload: Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Core.Lib.Config.Constants.NetworkConfigFile(Catalyst.Protocol.Network.NetworkType,System.String)
  commentId: M:Catalyst.Core.Lib.Config.Constants.NetworkConfigFile(Catalyst.Protocol.Network.NetworkType,System.String)
  id: NetworkConfigFile(Catalyst.Protocol.Network.NetworkType,System.String)
  parent: Catalyst.Core.Lib.Config.Constants
  langs:
  - csharp
  - vb
  name: NetworkConfigFile(NetworkType, String)
  nameWithType: Constants.NetworkConfigFile(NetworkType, String)
  fullName: Catalyst.Core.Lib.Config.Constants.NetworkConfigFile(Catalyst.Protocol.Network.NetworkType, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Config/Constants.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NetworkConfigFile
    path: ../src/Catalyst.Core.Lib/Config/Constants.cs
    startLine: 65
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Config
  syntax:
    content: public static string NetworkConfigFile(NetworkType networkType, string overrideNetworkFile = null)
    parameters:
    - id: networkType
      type: Catalyst.Protocol.Network.NetworkType
    - id: overrideNetworkFile
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function NetworkConfigFile(networkType As NetworkType, overrideNetworkFile As String = Nothing) As String
  overload: Catalyst.Core.Lib.Config.Constants.NetworkConfigFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Config
  commentId: N:Catalyst.Core.Lib.Config
  name: Catalyst.Core.Lib.Config
  nameWithType: Catalyst.Core.Lib.Config
  fullName: Catalyst.Core.Lib.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Config.Constants.ConfigSubFolder*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
  name: ConfigSubFolder
  nameWithType: Constants.ConfigSubFolder
  fullName: Catalyst.Core.Lib.Config.Constants.ConfigSubFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
  name: SerilogJsonConfigFile
  nameWithType: Constants.SerilogJsonConfigFile
  fullName: Catalyst.Core.Lib.Config.Constants.SerilogJsonConfigFile
- uid: Catalyst.Core.Lib.Config.Constants.JsonFilePattern*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.JsonFilePattern
  name: JsonFilePattern
  nameWithType: Constants.JsonFilePattern
  fullName: Catalyst.Core.Lib.Config.Constants.JsonFilePattern
- uid: Catalyst.Core.Lib.Config.Constants.CatalystDataDir*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.CatalystDataDir
  name: CatalystDataDir
  nameWithType: Constants.CatalystDataDir
  fullName: Catalyst.Core.Lib.Config.Constants.CatalystDataDir
- uid: Catalyst.Core.Lib.Config.Constants.DfsDataSubDir*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
  name: DfsDataSubDir
  nameWithType: Constants.DfsDataSubDir
  fullName: Catalyst.Core.Lib.Config.Constants.DfsDataSubDir
- uid: Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
  name: KeyStoreDataSubDir
  nameWithType: Constants.KeyStoreDataSubDir
  fullName: Catalyst.Core.Lib.Config.Constants.KeyStoreDataSubDir
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
  name: FileTransferExpirySeconds
  nameWithType: Constants.FileTransferExpirySeconds
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferExpirySeconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
  name: FileTransferChunkSize
  nameWithType: Constants.FileTransferChunkSize
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferChunkSize
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
  name: FileTransferMaxChunkRetryCount
  nameWithType: Constants.FileTransferMaxChunkRetryCount
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkRetryCount
- uid: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
  name: FileTransferMaxChunkReadTries
  nameWithType: Constants.FileTransferMaxChunkReadTries
  fullName: Catalyst.Core.Lib.Config.Constants.FileTransferMaxChunkReadTries
- uid: Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
  name: KeyChainDefaultKeyType
  nameWithType: Constants.KeyChainDefaultKeyType
  fullName: Catalyst.Core.Lib.Config.Constants.KeyChainDefaultKeyType
- uid: Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
  name: NumberOfRandomPeers
  nameWithType: Constants.NumberOfRandomPeers
  fullName: Catalyst.Core.Lib.Config.Constants.NumberOfRandomPeers
- uid: Catalyst.Core.Lib.Config.Constants.NetworkConfigFile*
  commentId: Overload:Catalyst.Core.Lib.Config.Constants.NetworkConfigFile
  name: NetworkConfigFile
  nameWithType: Constants.NetworkConfigFile
  fullName: Catalyst.Core.Lib.Config.Constants.NetworkConfigFile
- uid: Catalyst.Protocol.Network.NetworkType
  commentId: T:Catalyst.Protocol.Network.NetworkType
  parent: Catalyst.Protocol.Network
  name: NetworkType
  nameWithType: NetworkType
  fullName: Catalyst.Protocol.Network.NetworkType
- uid: Catalyst.Protocol.Network
  commentId: N:Catalyst.Protocol.Network
  name: Catalyst.Protocol.Network
  nameWithType: Catalyst.Protocol.Network
  fullName: Catalyst.Protocol.Network
