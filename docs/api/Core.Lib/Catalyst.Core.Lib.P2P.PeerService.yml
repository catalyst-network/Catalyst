### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.P2P.PeerService
  commentId: T:Catalyst.Core.Lib.P2P.PeerService
  id: PeerService
  parent: Catalyst.Core.Lib.P2P
  children:
  - Catalyst.Core.Lib.P2P.PeerService.#ctor(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory,Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory,Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver},Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger,Catalyst.Abstractions.P2P.Discovery.IHealthChecker)
  - Catalyst.Core.Lib.P2P.PeerService.Discovery
  - Catalyst.Core.Lib.P2P.PeerService.MessageStream
  - Catalyst.Core.Lib.P2P.PeerService.StartAsync
  langs:
  - csharp
  - vb
  name: PeerService
  nameWithType: PeerService
  fullName: Catalyst.Core.Lib.P2P.PeerService
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerService.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerService
    path: ../src/Catalyst.Core.Lib/P2P/PeerService.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: 'public sealed class PeerService : UdpServer, IUdpServer, IPeerService, IObservableMessageStreamer<ProtocolMessage>, ISocket, IDisposable'
    content.vb: >-
      Public NotInheritable Class PeerService

          Inherits UdpServer

          Implements IUdpServer, IPeerService, IObservableMessageStreamer(Of ProtocolMessage), ISocket, IDisposable
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Transport.SocketBase
  - Catalyst.Core.Lib.IO.Transport.UdpServer
  implements:
  - Catalyst.Abstractions.IO.Transport.IUdpServer
  - Catalyst.Abstractions.P2P.IPeerService
  - Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}
  - Catalyst.Abstractions.IO.Transport.ISocket
  - System.IDisposable
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.P2P.PeerService.Discovery
  commentId: P:Catalyst.Core.Lib.P2P.PeerService.Discovery
  id: Discovery
  parent: Catalyst.Core.Lib.P2P.PeerService
  langs:
  - csharp
  - vb
  name: Discovery
  nameWithType: PeerService.Discovery
  fullName: Catalyst.Core.Lib.P2P.PeerService.Discovery
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerService.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Discovery
    path: ../src/Catalyst.Core.Lib/P2P/PeerService.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IPeerDiscovery Discovery { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery
    content.vb: Public ReadOnly Property Discovery As IPeerDiscovery
  overload: Catalyst.Core.Lib.P2P.PeerService.Discovery*
  implements:
  - Catalyst.Abstractions.P2P.IPeerService.Discovery
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerService.MessageStream
  commentId: P:Catalyst.Core.Lib.P2P.PeerService.MessageStream
  id: MessageStream
  parent: Catalyst.Core.Lib.P2P.PeerService
  langs:
  - csharp
  - vb
  name: MessageStream
  nameWithType: PeerService.MessageStream
  fullName: Catalyst.Core.Lib.P2P.PeerService.MessageStream
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerService.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MessageStream
    path: ../src/Catalyst.Core.Lib/P2P/PeerService.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public IObservable<IObserverDto<ProtocolMessage>> MessageStream { get; }
    parameters: []
    return:
      type: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
    content.vb: Public ReadOnly Property MessageStream As IObservable(Of IObserverDto(Of ProtocolMessage))
  overload: Catalyst.Core.Lib.P2P.PeerService.MessageStream*
  implements:
  - Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}.MessageStream
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Lib.P2P.PeerService.#ctor(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory,Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory,Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver},Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger,Catalyst.Abstractions.P2P.Discovery.IHealthChecker)
  commentId: M:Catalyst.Core.Lib.P2P.PeerService.#ctor(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory,Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory,Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver},Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger,Catalyst.Abstractions.P2P.Discovery.IHealthChecker)
  id: '#ctor(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory,Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory,Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver},Catalyst.Abstractions.P2P.IPeerSettings,Serilog.ILogger,Catalyst.Abstractions.P2P.Discovery.IHealthChecker)'
  parent: Catalyst.Core.Lib.P2P.PeerService
  langs:
  - csharp
  - vb
  name: PeerService(IUdpServerEventLoopGroupFactory, IUdpServerChannelFactory, IPeerDiscovery, IEnumerable<IP2PMessageObserver>, IPeerSettings, ILogger, IHealthChecker)
  nameWithType: PeerService.PeerService(IUdpServerEventLoopGroupFactory, IUdpServerChannelFactory, IPeerDiscovery, IEnumerable<IP2PMessageObserver>, IPeerSettings, ILogger, IHealthChecker)
  fullName: Catalyst.Core.Lib.P2P.PeerService.PeerService(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory, Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory, Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery, System.Collections.Generic.IEnumerable<Catalyst.Abstractions.IO.Observers.IP2PMessageObserver>, Catalyst.Abstractions.P2P.IPeerSettings, Serilog.ILogger, Catalyst.Abstractions.P2P.Discovery.IHealthChecker)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerService.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/P2P/PeerService.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public PeerService(IUdpServerEventLoopGroupFactory udpServerEventLoopGroupFactory, IUdpServerChannelFactory serverChannelFactory, IPeerDiscovery peerDiscovery, IEnumerable<IP2PMessageObserver> messageHandlers, IPeerSettings peerSettings, ILogger logger, IHealthChecker healthChecker)
    parameters:
    - id: udpServerEventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory
    - id: serverChannelFactory
      type: Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory
    - id: peerDiscovery
      type: Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery
    - id: messageHandlers
      type: System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver}
    - id: peerSettings
      type: Catalyst.Abstractions.P2P.IPeerSettings
    - id: logger
      type: Serilog.ILogger
    - id: healthChecker
      type: Catalyst.Abstractions.P2P.Discovery.IHealthChecker
    content.vb: Public Sub New(udpServerEventLoopGroupFactory As IUdpServerEventLoopGroupFactory, serverChannelFactory As IUdpServerChannelFactory, peerDiscovery As IPeerDiscovery, messageHandlers As IEnumerable(Of IP2PMessageObserver), peerSettings As IPeerSettings, logger As ILogger, healthChecker As IHealthChecker)
  overload: Catalyst.Core.Lib.P2P.PeerService.#ctor*
  nameWithType.vb: PeerService.PeerService(IUdpServerEventLoopGroupFactory, IUdpServerChannelFactory, IPeerDiscovery, IEnumerable(Of IP2PMessageObserver), IPeerSettings, ILogger, IHealthChecker)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.P2P.PeerService.PeerService(Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory, Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory, Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery, System.Collections.Generic.IEnumerable(Of Catalyst.Abstractions.IO.Observers.IP2PMessageObserver), Catalyst.Abstractions.P2P.IPeerSettings, Serilog.ILogger, Catalyst.Abstractions.P2P.Discovery.IHealthChecker)
  name.vb: PeerService(IUdpServerEventLoopGroupFactory, IUdpServerChannelFactory, IPeerDiscovery, IEnumerable(Of IP2PMessageObserver), IPeerSettings, ILogger, IHealthChecker)
- uid: Catalyst.Core.Lib.P2P.PeerService.StartAsync
  commentId: M:Catalyst.Core.Lib.P2P.PeerService.StartAsync
  id: StartAsync
  parent: Catalyst.Core.Lib.P2P.PeerService
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: PeerService.StartAsync()
  fullName: Catalyst.Core.Lib.P2P.PeerService.StartAsync()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/P2P/PeerService.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StartAsync
    path: ../src/Catalyst.Core.Lib/P2P/PeerService.cs
    startLine: 62
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.P2P
  syntax:
    content: public override Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function StartAsync As Task
  overridden: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  overload: Catalyst.Core.Lib.P2P.PeerService.StartAsync*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Lib.P2P
  commentId: N:Catalyst.Core.Lib.P2P
  name: Catalyst.Core.Lib.P2P
  nameWithType: Catalyst.Core.Lib.P2P
  fullName: Catalyst.Core.Lib.P2P
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.SocketBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: SocketBase
  nameWithType: SocketBase
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase
- uid: Catalyst.Core.Lib.IO.Transport.UdpServer
  commentId: T:Catalyst.Core.Lib.IO.Transport.UdpServer
  parent: Catalyst.Core.Lib.IO.Transport
  name: UdpServer
  nameWithType: UdpServer
  fullName: Catalyst.Core.Lib.IO.Transport.UdpServer
- uid: Catalyst.Abstractions.IO.Transport.IUdpServer
  commentId: T:Catalyst.Abstractions.IO.Transport.IUdpServer
  parent: Catalyst.Abstractions.IO.Transport
  name: IUdpServer
  nameWithType: IUdpServer
  fullName: Catalyst.Abstractions.IO.Transport.IUdpServer
- uid: Catalyst.Abstractions.P2P.IPeerService
  commentId: T:Catalyst.Abstractions.P2P.IPeerService
  parent: Catalyst.Abstractions.P2P
  name: IPeerService
  nameWithType: IPeerService
  fullName: Catalyst.Abstractions.P2P.IPeerService
- uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}
  commentId: T:Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}
  parent: Catalyst.Abstractions.IO.Observers
  definition: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
  name: IObservableMessageStreamer<ProtocolMessage>
  nameWithType: IObservableMessageStreamer<ProtocolMessage>
  fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer<Catalyst.Protocol.Wire.ProtocolMessage>
  nameWithType.vb: IObservableMessageStreamer(Of ProtocolMessage)
  fullName.vb: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer(Of Catalyst.Protocol.Wire.ProtocolMessage)
  name.vb: IObservableMessageStreamer(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
    name: IObservableMessageStreamer
    nameWithType: IObservableMessageStreamer
    fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
    name: IObservableMessageStreamer
    nameWithType: IObservableMessageStreamer
    fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport.ISocket
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocket
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocket
  nameWithType: ISocket
  fullName: Catalyst.Abstractions.IO.Transport.ISocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: ChannelFactory
  nameWithType: SocketBase.ChannelFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: EventLoopGroupFactory
  nameWithType: SocketBase.EventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Channel
  nameWithType: SocketBase.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Dispose()
  nameWithType: SocketBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SocketBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Transport
  commentId: N:Catalyst.Core.Lib.IO.Transport
  name: Catalyst.Core.Lib.IO.Transport
  nameWithType: Catalyst.Core.Lib.IO.Transport
  fullName: Catalyst.Core.Lib.IO.Transport
- uid: Catalyst.Abstractions.IO.Transport
  commentId: N:Catalyst.Abstractions.IO.Transport
  name: Catalyst.Abstractions.IO.Transport
  nameWithType: Catalyst.Abstractions.IO.Transport
  fullName: Catalyst.Abstractions.IO.Transport
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
  commentId: T:Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
  name: IObservableMessageStreamer<T>
  nameWithType: IObservableMessageStreamer<T>
  fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer<T>
  nameWithType.vb: IObservableMessageStreamer(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer(Of T)
  name.vb: IObservableMessageStreamer(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
    name: IObservableMessageStreamer
    nameWithType: IObservableMessageStreamer
    fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1
    name: IObservableMessageStreamer
    nameWithType: IObservableMessageStreamer
    fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Observers
  commentId: N:Catalyst.Abstractions.IO.Observers
  name: Catalyst.Abstractions.IO.Observers
  nameWithType: Catalyst.Abstractions.IO.Observers
  fullName: Catalyst.Abstractions.IO.Observers
- uid: Catalyst.Core.Lib.P2P.PeerService.Discovery*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerService.Discovery
  name: Discovery
  nameWithType: PeerService.Discovery
  fullName: Catalyst.Core.Lib.P2P.PeerService.Discovery
- uid: Catalyst.Abstractions.P2P.IPeerService.Discovery
  commentId: P:Catalyst.Abstractions.P2P.IPeerService.Discovery
  parent: Catalyst.Abstractions.P2P.IPeerService
  name: Discovery
  nameWithType: IPeerService.Discovery
  fullName: Catalyst.Abstractions.P2P.IPeerService.Discovery
- uid: Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery
  commentId: T:Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery
  parent: Catalyst.Abstractions.P2P.Discovery
  name: IPeerDiscovery
  nameWithType: IPeerDiscovery
  fullName: Catalyst.Abstractions.P2P.Discovery.IPeerDiscovery
- uid: Catalyst.Abstractions.P2P.Discovery
  commentId: N:Catalyst.Abstractions.P2P.Discovery
  name: Catalyst.Abstractions.P2P.Discovery
  nameWithType: Catalyst.Abstractions.P2P.Discovery
  fullName: Catalyst.Abstractions.P2P.Discovery
- uid: Catalyst.Core.Lib.P2P.PeerService.MessageStream*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerService.MessageStream
  name: MessageStream
  nameWithType: PeerService.MessageStream
  fullName: Catalyst.Core.Lib.P2P.PeerService.MessageStream
- uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}.MessageStream
  commentId: P:Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}.MessageStream
  parent: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer{Catalyst.Protocol.Wire.ProtocolMessage}
  definition: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1.MessageStream
  name: MessageStream
  nameWithType: IObservableMessageStreamer<ProtocolMessage>.MessageStream
  fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer<Catalyst.Protocol.Wire.ProtocolMessage>.MessageStream
  nameWithType.vb: IObservableMessageStreamer(Of ProtocolMessage).MessageStream
  fullName.vb: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer(Of Catalyst.Protocol.Wire.ProtocolMessage).MessageStream
- uid: System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  commentId: T:System.IObservable{Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto{Catalyst.Protocol.Wire.ProtocolMessage}}
  parent: System
  definition: System.IObservable`1
  name: IObservable<IObserverDto<ProtocolMessage>>
  nameWithType: IObservable<IObserverDto<ProtocolMessage>>
  fullName: System.IObservable<Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto<Catalyst.Protocol.Wire.ProtocolMessage>>
  nameWithType.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  fullName.vb: System.IObservable(Of Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto(Of Catalyst.Protocol.Wire.ProtocolMessage))
  name.vb: IObservable(Of IObserverDto(Of ProtocolMessage))
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto`1
    name: IObserverDto
    nameWithType: IObserverDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IObserverDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1.MessageStream
  commentId: P:Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer`1.MessageStream
  name: MessageStream
  nameWithType: IObservableMessageStreamer<T>.MessageStream
  fullName: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer<T>.MessageStream
  nameWithType.vb: IObservableMessageStreamer(Of T).MessageStream
  fullName.vb: Catalyst.Abstractions.IO.Observers.IObservableMessageStreamer(Of T).MessageStream
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.P2P.PeerService.#ctor*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerService.#ctor
  name: PeerService
  nameWithType: PeerService.PeerService
  fullName: Catalyst.Core.Lib.P2P.PeerService.PeerService
- uid: Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IUdpServerEventLoopGroupFactory
  nameWithType: IUdpServerEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IUdpServerEventLoopGroupFactory
- uid: Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory
  parent: Catalyst.Abstractions.IO.Transport.Channels
  name: IUdpServerChannelFactory
  nameWithType: IUdpServerChannelFactory
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IUdpServerChannelFactory
- uid: System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver}
  commentId: T:System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IP2PMessageObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IP2PMessageObserver>
  nameWithType: IEnumerable<IP2PMessageObserver>
  fullName: System.Collections.Generic.IEnumerable<Catalyst.Abstractions.IO.Observers.IP2PMessageObserver>
  nameWithType.vb: IEnumerable(Of IP2PMessageObserver)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Catalyst.Abstractions.IO.Observers.IP2PMessageObserver)
  name.vb: IEnumerable(Of IP2PMessageObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Observers.IP2PMessageObserver
    name: IP2PMessageObserver
    nameWithType: IP2PMessageObserver
    fullName: Catalyst.Abstractions.IO.Observers.IP2PMessageObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Observers.IP2PMessageObserver
    name: IP2PMessageObserver
    nameWithType: IP2PMessageObserver
    fullName: Catalyst.Abstractions.IO.Observers.IP2PMessageObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Abstractions.P2P.Discovery.IHealthChecker
  commentId: T:Catalyst.Abstractions.P2P.Discovery.IHealthChecker
  parent: Catalyst.Abstractions.P2P.Discovery
  name: IHealthChecker
  nameWithType: IHealthChecker
  fullName: Catalyst.Abstractions.P2P.Discovery.IHealthChecker
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: StartAsync()
  nameWithType: SocketBase.StartAsync()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.P2P.PeerService.StartAsync*
  commentId: Overload:Catalyst.Core.Lib.P2P.PeerService.StartAsync
  name: StartAsync
  nameWithType: PeerService.StartAsync
  fullName: Catalyst.Core.Lib.P2P.PeerService.StartAsync
- uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  parent: Catalyst.Abstractions.IO.Transport.ISocket
  name: StartAsync()
  nameWithType: ISocket.StartAsync()
  fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
