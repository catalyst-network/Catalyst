### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  id: OutboundChannelHandlerBase`1
  parent: Catalyst.Core.Lib.IO.Handlers
  children:
  - Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  langs:
  - csharp
  - vb
  name: OutboundChannelHandlerBase<T>
  nameWithType: OutboundChannelHandlerBase<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: OutboundChannelHandlerBase
    path: ../src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: "\nOutboundChannel Handler is similar to Dot Netty&apos;s simple inbound channel handler, except it removes some redundant double cast operations.\n"
  example: []
  syntax:
    content: 'public abstract class OutboundChannelHandlerBase<T> : ChannelHandlerAdapter, IChannelHandler'
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      Public MustInherit Class OutboundChannelHandlerBase(Of T)

          Inherits ChannelHandlerAdapter

          Implements IChannelHandler
  inheritance:
  - System.Object
  - DotNetty.Transport.Channels.ChannelHandlerAdapter
  derivedClasses:
  - Catalyst.Core.Lib.IO.Handlers.CorrelatableHandler`1
  - Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1
  - Catalyst.Core.Lib.IO.Handlers.ProtocolMessageSignHandler
  implements:
  - DotNetty.Transport.Channels.IChannelHandler
  inheritedMembers:
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  - DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: OutboundChannelHandlerBase(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T)
  name.vb: OutboundChannelHandlerBase(Of T)
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  id: WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  langs:
  - csharp
  - vb
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteAsync
    path: ../src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: "\nDoes check to see if it can process the msg, if object is T thn it fires the inheritor WriteAsync0\n"
  example: []
  syntax:
    content: public override Task WriteAsync(IChannelHandlerContext ctx, object msg)
    parameters:
    - id: ctx
      type: DotNetty.Transport.Channels.IChannelHandlerContext
      description: ''
    - id: msg
      type: System.Object
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Overrides Function WriteAsync(ctx As IChannelHandlerContext, msg As Object) As Task
  overridden: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  overload: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync*
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync(IChannelHandlerContext, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  id: WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext,`0)
  parent: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  langs:
  - csharp
  - vb
  name: WriteAsync0(IChannelHandlerContext, T)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext, T)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteAsync0
    path: ../src/Catalyst.Core.Lib/IO/Handlers/OutboundChannelHandlerBase.cs
    startLine: 70
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: "\nOnly fires if the msg if is the same as the classes generic T, should be implemented by inherited concrete classes.\n"
  example: []
  syntax:
    content: protected abstract Task WriteAsync0(IChannelHandlerContext ctx, T msg)
    parameters:
    - id: ctx
      type: DotNetty.Transport.Channels.IChannelHandlerContext
      description: ''
    - id: msg
      type: '{T}'
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Protected MustOverride Function WriteAsync0(ctx As IChannelHandlerContext, msg As T) As Task
  overload: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0*
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync0(IChannelHandlerContext, T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0(DotNetty.Transport.Channels.IChannelHandlerContext, T)
references:
- uid: Catalyst.Core.Lib.IO.Handlers
  commentId: N:Catalyst.Core.Lib.IO.Handlers
  name: Catalyst.Core.Lib.IO.Handlers
  nameWithType: Catalyst.Core.Lib.IO.Handlers
  fullName: Catalyst.Core.Lib.IO.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter
  commentId: T:DotNetty.Transport.Channels.ChannelHandlerAdapter
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: ChannelHandlerAdapter
  nameWithType: ChannelHandlerAdapter
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter
- uid: DotNetty.Transport.Channels.IChannelHandler
  commentId: T:DotNetty.Transport.Channels.IChannelHandler
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandler
  nameWithType: IChannelHandler
  fullName: DotNetty.Transport.Channels.IChannelHandler
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRegistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelRegistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelRegistered
    nameWithType: ChannelHandlerAdapter.ChannelRegistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRegistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelUnregistered(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelUnregistered(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelUnregistered
    nameWithType: ChannelHandlerAdapter.ChannelUnregistered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelUnregistered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelActive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelActive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelActive
    nameWithType: ChannelHandlerAdapter.ChannelActive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelActive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelInactive(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelInactive(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelInactive
    nameWithType: ChannelHandlerAdapter.ChannelInactive
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelInactive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.ChannelRead(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: ChannelHandlerAdapter.ChannelRead
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelReadComplete(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelReadComplete(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelReadComplete
    nameWithType: ChannelHandlerAdapter.ChannelReadComplete
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelReadComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ChannelWritabilityChanged(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: ChannelWritabilityChanged
    nameWithType: ChannelHandlerAdapter.ChannelWritabilityChanged
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ChannelWritabilityChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerAdded(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerAdded(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerAdded
    nameWithType: ChannelHandlerAdapter.HandlerAdded
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerAdded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: HandlerRemoved(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.HandlerRemoved(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: HandlerRemoved
    nameWithType: ChannelHandlerAdapter.HandlerRemoved
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.HandlerRemoved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: UserEventTriggered(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.UserEventTriggered(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: UserEventTriggered
    nameWithType: ChannelHandlerAdapter.UserEventTriggered
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.UserEventTriggered
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Flush(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Flush(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Flush
    nameWithType: ChannelHandlerAdapter.Flush
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: BindAsync(IChannelHandlerContext, EndPoint)
  nameWithType: ChannelHandlerAdapter.BindAsync(IChannelHandlerContext, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint)
    name: BindAsync
    nameWithType: ChannelHandlerAdapter.BindAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.BindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  nameWithType: ChannelHandlerAdapter.ConnectAsync(IChannelHandlerContext, EndPoint, EndPoint)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Net.EndPoint, System.Net.EndPoint)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Net.EndPoint,System.Net.EndPoint)
    name: ConnectAsync
    nameWithType: ChannelHandlerAdapter.ConnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ConnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.EndPoint
    name: EndPoint
    nameWithType: EndPoint
    fullName: System.Net.EndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DisconnectAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DisconnectAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DisconnectAsync
    nameWithType: ChannelHandlerAdapter.DisconnectAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DisconnectAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: CloseAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.CloseAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: CloseAsync
    nameWithType: ChannelHandlerAdapter.CloseAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: ExceptionCaught(IChannelHandlerContext, Exception)
  nameWithType: ChannelHandlerAdapter.ExceptionCaught(IChannelHandlerContext, Exception)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext, System.Exception)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught(DotNetty.Transport.Channels.IChannelHandlerContext,System.Exception)
    name: ExceptionCaught
    nameWithType: ChannelHandlerAdapter.ExceptionCaught
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.ExceptionCaught
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: DeregisterAsync(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.DeregisterAsync(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: DeregisterAsync
    nameWithType: ChannelHandlerAdapter.DeregisterAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.DeregisterAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: Read(IChannelHandlerContext)
  nameWithType: ChannelHandlerAdapter.Read(IChannelHandlerContext)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read(DotNetty.Transport.Channels.IChannelHandlerContext)
    name: Read
    nameWithType: ChannelHandlerAdapter.Read
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: EnsureNotSharable()
  nameWithType: ChannelHandlerAdapter.EnsureNotSharable()
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable()
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    name: EnsureNotSharable
    nameWithType: ChannelHandlerAdapter.EnsureNotSharable
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.EnsureNotSharable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  commentId: P:DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: IsSharable
  nameWithType: ChannelHandlerAdapter.IsSharable
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.IsSharable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  commentId: M:DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
  parent: DotNetty.Transport.Channels.ChannelHandlerAdapter
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: ChannelHandlerAdapter.WriteAsync(IChannelHandlerContext, Object)
  fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync(DotNetty.Transport.Channels.IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: ChannelHandlerAdapter.WriteAsync
    fullName: DotNetty.Transport.Channels.ChannelHandlerAdapter.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotNetty.Transport.Channels.IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: DotNetty.Transport.Channels.IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync
  name: WriteAsync
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync
- uid: DotNetty.Transport.Channels.IChannelHandlerContext
  commentId: T:DotNetty.Transport.Channels.IChannelHandlerContext
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: DotNetty.Transport.Channels.IChannelHandlerContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0
  name: WriteAsync0
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync0
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
