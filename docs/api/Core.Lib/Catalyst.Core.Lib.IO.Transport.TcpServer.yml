### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Transport.TcpServer
  commentId: T:Catalyst.Core.Lib.IO.Transport.TcpServer
  id: TcpServer
  parent: Catalyst.Core.Lib.IO.Transport
  children:
  - Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory,Serilog.ILogger,Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory)
  - Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose(System.Boolean)
  langs:
  - csharp
  - vb
  name: TcpServer
  nameWithType: TcpServer
  fullName: Catalyst.Core.Lib.IO.Transport.TcpServer
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TcpServer
    path: ../src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: 'public abstract class TcpServer : SocketBase, ITcpServer, ISocketServer, ISocket, IDisposable'
    content.vb: >-
      Public MustInherit Class TcpServer

          Inherits SocketBase

          Implements ITcpServer, ISocketServer, ISocket, IDisposable
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Transport.SocketBase
  implements:
  - Catalyst.Abstractions.IO.Transport.ITcpServer
  - Catalyst.Abstractions.IO.Transport.ISocketServer
  - Catalyst.Abstractions.IO.Transport.ISocket
  - System.IDisposable
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory,Serilog.ILogger,Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory)
  commentId: M:Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory,Serilog.ILogger,Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory)
  id: '#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory,Serilog.ILogger,Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory)'
  parent: Catalyst.Core.Lib.IO.Transport.TcpServer
  langs:
  - csharp
  - vb
  name: TcpServer(ITcpServerChannelFactory, ILogger, IEventLoopGroupFactory)
  nameWithType: TcpServer.TcpServer(ITcpServerChannelFactory, ILogger, IEventLoopGroupFactory)
  fullName: Catalyst.Core.Lib.IO.Transport.TcpServer.TcpServer(Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory, Serilog.ILogger, Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: protected TcpServer(ITcpServerChannelFactory tcpChannelFactory, ILogger logger, IEventLoopGroupFactory eventLoopGroupFactory)
    parameters:
    - id: tcpChannelFactory
      type: Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory
    - id: logger
      type: Serilog.ILogger
    - id: eventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
    content.vb: Protected Sub New(tcpChannelFactory As ITcpServerChannelFactory, logger As ILogger, eventLoopGroupFactory As IEventLoopGroupFactory)
  overload: Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Transport.TcpServer
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TcpServer.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Transport/TcpServer.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  overload: Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Catalyst.Core.Lib.IO.Transport
  commentId: N:Catalyst.Core.Lib.IO.Transport
  name: Catalyst.Core.Lib.IO.Transport
  nameWithType: Catalyst.Core.Lib.IO.Transport
  fullName: Catalyst.Core.Lib.IO.Transport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.SocketBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: SocketBase
  nameWithType: SocketBase
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase
- uid: Catalyst.Abstractions.IO.Transport.ITcpServer
  commentId: T:Catalyst.Abstractions.IO.Transport.ITcpServer
  parent: Catalyst.Abstractions.IO.Transport
  name: ITcpServer
  nameWithType: ITcpServer
  fullName: Catalyst.Abstractions.IO.Transport.ITcpServer
- uid: Catalyst.Abstractions.IO.Transport.ISocketServer
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocketServer
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocketServer
  nameWithType: ISocketServer
  fullName: Catalyst.Abstractions.IO.Transport.ISocketServer
- uid: Catalyst.Abstractions.IO.Transport.ISocket
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocket
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocket
  nameWithType: ISocket
  fullName: Catalyst.Abstractions.IO.Transport.ISocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: ChannelFactory
  nameWithType: SocketBase.ChannelFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: EventLoopGroupFactory
  nameWithType: SocketBase.EventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: StartAsync()
  nameWithType: SocketBase.StartAsync()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Channel
  nameWithType: SocketBase.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Dispose()
  nameWithType: SocketBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Transport
  commentId: N:Catalyst.Abstractions.IO.Transport
  name: Catalyst.Abstractions.IO.Transport
  nameWithType: Catalyst.Abstractions.IO.Transport
  fullName: Catalyst.Abstractions.IO.Transport
- uid: Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.TcpServer.#ctor
  name: TcpServer
  nameWithType: TcpServer.TcpServer
  fullName: Catalyst.Core.Lib.IO.Transport.TcpServer.TcpServer
- uid: Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory
  parent: Catalyst.Abstractions.IO.Transport.Channels
  name: ITcpServerChannelFactory
  nameWithType: ITcpServerChannelFactory
  fullName: Catalyst.Abstractions.IO.Transport.Channels.ITcpServerChannelFactory
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactory
  nameWithType: IEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SocketBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose
  name: Dispose
  nameWithType: TcpServer.Dispose
  fullName: Catalyst.Core.Lib.IO.Transport.TcpServer.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
