### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  commentId: T:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  id: SocketClientRegistry`1
  parent: Catalyst.Core.Lib.IO.Transport
  children:
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor(System.Reactive.Concurrency.IScheduler)
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry
  - Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  langs:
  - csharp
  - vb
  name: SocketClientRegistry<TSocketChannel>
  nameWithType: SocketClientRegistry<TSocketChannel>
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SocketClientRegistry
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: 'public sealed class SocketClientRegistry<TSocketChannel> : ISocketClientRegistry<TSocketChannel>, IDisposable where TSocketChannel : class, ISocketClient'
    typeParameters:
    - id: TSocketChannel
    content.vb: >-
      Public NotInheritable Class SocketClientRegistry(Of TSocketChannel As {Class, ISocketClient})

          Implements ISocketClientRegistry(Of TSocketChannel), IDisposable
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel)
  name.vb: SocketClientRegistry(Of TSocketChannel)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor(System.Reactive.Concurrency.IScheduler)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor(System.Reactive.Concurrency.IScheduler)
  id: '#ctor(System.Reactive.Concurrency.IScheduler)'
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: SocketClientRegistry(IScheduler)
  nameWithType: SocketClientRegistry<TSocketChannel>.SocketClientRegistry(IScheduler)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.SocketClientRegistry(System.Reactive.Concurrency.IScheduler)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: public SocketClientRegistry(IScheduler scheduler = null)
    parameters:
    - id: scheduler
      type: System.Reactive.Concurrency.IScheduler
    content.vb: Public Sub New(scheduler As IScheduler = Nothing)
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor*
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).SocketClientRegistry(IScheduler)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).SocketClientRegistry(System.Reactive.Concurrency.IScheduler)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose
  id: Dispose
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SocketClientRegistry<TSocketChannel>.Dispose()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.Dispose()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 54
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).Dispose()
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream
  id: EventStream
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: EventStream
  nameWithType: SocketClientRegistry<TSocketChannel>.EventStream
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.EventStream
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: EventStream
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 56
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: public IObservable<ISocketClientRegistryEvent> EventStream { get; }
    parameters: []
    return:
      type: System.IObservable{Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent}
    content.vb: Public ReadOnly Property EventStream As IObservable(Of ISocketClientRegistryEvent)
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.EventStream
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).EventStream
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).EventStream
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry
  id: Registry
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: Registry
  nameWithType: SocketClientRegistry<TSocketChannel>.Registry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.Registry
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Registry
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 58
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: public IDictionary<int, TSocketChannel> Registry { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,{TSocketChannel}}
    content.vb: Public ReadOnly Property Registry As IDictionary(Of Integer, TSocketChannel)
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.Registry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).Registry
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).Registry
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  id: GenerateClientHashCode(System.Net.IPEndPoint)
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: GenerateClientHashCode(IPEndPoint)
  nameWithType: SocketClientRegistry<TSocketChannel>.GenerateClientHashCode(IPEndPoint)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GenerateClientHashCode(System.Net.IPEndPoint)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GenerateClientHashCode
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 61
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  example: []
  syntax:
    content: public int GenerateClientHashCode(IPEndPoint socketEndpoint)
    parameters:
    - id: socketEndpoint
      type: System.Net.IPEndPoint
    return:
      type: System.Int32
    content.vb: Public Function GenerateClientHashCode(socketEndpoint As IPEndPoint) As Integer
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GenerateClientHashCode(System.Net.IPEndPoint)
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(IPEndPoint)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(System.Net.IPEndPoint)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  id: AddClientToRegistry(System.Int32,`0)
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: AddClientToRegistry(Int32, TSocketChannel)
  nameWithType: SocketClientRegistry<TSocketChannel>.AddClientToRegistry(Int32, TSocketChannel)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.AddClientToRegistry(System.Int32, TSocketChannel)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AddClientToRegistry
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 68
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  example: []
  syntax:
    content: public bool AddClientToRegistry(int socketHashCode, TSocketChannel socket)
    parameters:
    - id: socketHashCode
      type: System.Int32
    - id: socket
      type: '{TSocketChannel}'
    return:
      type: System.Boolean
    content.vb: Public Function AddClientToRegistry(socketHashCode As Integer, socket As TSocketChannel) As Boolean
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.AddClientToRegistry(System.Int32,{TSocketChannel})
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).AddClientToRegistry(Int32, TSocketChannel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).AddClientToRegistry(System.Int32, TSocketChannel)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  id: GetClientFromRegistry(System.Int32)
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: GetClientFromRegistry(Int32)
  nameWithType: SocketClientRegistry<TSocketChannel>.GetClientFromRegistry(Int32)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GetClientFromRegistry(System.Int32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetClientFromRegistry
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 85
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  example: []
  syntax:
    content: public TSocketChannel GetClientFromRegistry(int socketHashCode)
    parameters:
    - id: socketHashCode
      type: System.Int32
    return:
      type: '{TSocketChannel}'
    content.vb: Public Function GetClientFromRegistry(socketHashCode As Integer) As TSocketChannel
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GetClientFromRegistry(System.Int32)
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(System.Int32)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  id: RemoveClientFromRegistry(System.Int32)
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: RemoveClientFromRegistry(Int32)
  nameWithType: SocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(Int32)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(System.Int32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RemoveClientFromRegistry
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 95
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  example: []
  syntax:
    content: public bool RemoveClientFromRegistry(int socketHashCode)
    parameters:
    - id: socketHashCode
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function RemoveClientFromRegistry(socketHashCode As Integer) As Boolean
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.RemoveClientFromRegistry(System.Int32)
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(System.Int32)
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType
  id: GetRegistryType
  parent: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1
  langs:
  - csharp
  - vb
  name: GetRegistryType()
  nameWithType: SocketClientRegistry<TSocketChannel>.GetRegistryType()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GetRegistryType()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetRegistryType
    path: ../src/Catalyst.Core.Lib/IO/Transport/SocketClientRegistry.cs
    startLine: 107
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport
  syntax:
    content: public string GetRegistryType()
    return:
      type: System.String
    content.vb: Public Function GetRegistryType As String
  overload: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GetRegistryType
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GetRegistryType()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GetRegistryType()
references:
- uid: Catalyst.Core.Lib.IO.Transport
  commentId: N:Catalyst.Core.Lib.IO.Transport
  name: Catalyst.Core.Lib.IO.Transport
  nameWithType: Catalyst.Core.Lib.IO.Transport
  fullName: Catalyst.Core.Lib.IO.Transport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}
  parent: Catalyst.Abstractions.IO.Transport
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
  name: ISocketClientRegistry<TSocketChannel>
  nameWithType: ISocketClientRegistry<TSocketChannel>
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel)
  name.vb: ISocketClientRegistry(Of TSocketChannel)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
    name: ISocketClientRegistry
    nameWithType: ISocketClientRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry
  - name: <
    nameWithType: <
    fullName: <
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
    name: ISocketClientRegistry
    nameWithType: ISocketClientRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
  name: ISocketClientRegistry<TSocketChannel>
  nameWithType: ISocketClientRegistry<TSocketChannel>
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel)
  name.vb: ISocketClientRegistry(Of TSocketChannel)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
    name: ISocketClientRegistry
    nameWithType: ISocketClientRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry
  - name: <
    nameWithType: <
    fullName: <
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1
    name: ISocketClientRegistry
    nameWithType: ISocketClientRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport
  commentId: N:Catalyst.Abstractions.IO.Transport
  name: Catalyst.Abstractions.IO.Transport
  nameWithType: Catalyst.Abstractions.IO.Transport
  fullName: Catalyst.Abstractions.IO.Transport
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.#ctor
  name: SocketClientRegistry
  nameWithType: SocketClientRegistry<TSocketChannel>.SocketClientRegistry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.SocketClientRegistry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).SocketClientRegistry
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).SocketClientRegistry
- uid: System.Reactive.Concurrency.IScheduler
  commentId: T:System.Reactive.Concurrency.IScheduler
  parent: System.Reactive.Concurrency
  isExternal: true
  name: IScheduler
  nameWithType: IScheduler
  fullName: System.Reactive.Concurrency.IScheduler
- uid: System.Reactive.Concurrency
  commentId: N:System.Reactive.Concurrency
  isExternal: true
  name: System.Reactive.Concurrency
  nameWithType: System.Reactive.Concurrency
  fullName: System.Reactive.Concurrency
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Dispose
  name: Dispose
  nameWithType: SocketClientRegistry<TSocketChannel>.Dispose
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.Dispose
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).Dispose
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.EventStream
  name: EventStream
  nameWithType: SocketClientRegistry<TSocketChannel>.EventStream
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.EventStream
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).EventStream
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).EventStream
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.EventStream
  commentId: P:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.EventStream
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.EventStream
  name: EventStream
  nameWithType: ISocketClientRegistry<TSocketChannel>.EventStream
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.EventStream
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).EventStream
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).EventStream
- uid: System.IObservable{Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent}
  commentId: T:System.IObservable{Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent}
  parent: System
  definition: System.IObservable`1
  name: IObservable<ISocketClientRegistryEvent>
  nameWithType: IObservable<ISocketClientRegistryEvent>
  fullName: System.IObservable<Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent>
  nameWithType.vb: IObservable(Of ISocketClientRegistryEvent)
  fullName.vb: System.IObservable(Of Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent)
  name.vb: IObservable(Of ISocketClientRegistryEvent)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent
    name: ISocketClientRegistryEvent
    nameWithType: ISocketClientRegistryEvent
    fullName: Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent
    name: ISocketClientRegistryEvent
    nameWithType: ISocketClientRegistryEvent
    fullName: Catalyst.Abstractions.IO.Events.ISocketClientRegistryEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.EventStream
  commentId: P:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.EventStream
  name: EventStream
  nameWithType: ISocketClientRegistry<TSocketChannel>.EventStream
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.EventStream
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).EventStream
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).EventStream
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.Registry
  name: Registry
  nameWithType: SocketClientRegistry<TSocketChannel>.Registry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.Registry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).Registry
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).Registry
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.Registry
  commentId: P:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.Registry
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.Registry
  name: Registry
  nameWithType: ISocketClientRegistry<TSocketChannel>.Registry
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.Registry
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).Registry
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).Registry
- uid: System.Collections.Generic.IDictionary{System.Int32,{TSocketChannel}}
  commentId: T:System.Collections.Generic.IDictionary{System.Int32,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Int32, TSocketChannel>
  nameWithType: IDictionary<Int32, TSocketChannel>
  fullName: System.Collections.Generic.IDictionary<System.Int32, TSocketChannel>
  nameWithType.vb: IDictionary(Of Int32, TSocketChannel)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Int32, TSocketChannel)
  name.vb: IDictionary(Of Int32, TSocketChannel)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.Registry
  commentId: P:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.Registry
  name: Registry
  nameWithType: ISocketClientRegistry<TSocketChannel>.Registry
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.Registry
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).Registry
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).Registry
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GenerateClientHashCode
  name: GenerateClientHashCode
  nameWithType: SocketClientRegistry<TSocketChannel>.GenerateClientHashCode
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GenerateClientHashCode
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GenerateClientHashCode(System.Net.IPEndPoint)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.GenerateClientHashCode(System.Net.IPEndPoint)
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  name: GenerateClientHashCode(IPEndPoint)
  nameWithType: ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode(IPEndPoint)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode(System.Net.IPEndPoint)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(IPEndPoint)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(System.Net.IPEndPoint)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
    name: GenerateClientHashCode
    nameWithType: ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
    name: GenerateClientHashCode
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
  isExternal: true
  name: GenerateClientHashCode(IPEndPoint)
  nameWithType: ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode(IPEndPoint)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode(System.Net.IPEndPoint)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(IPEndPoint)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode(System.Net.IPEndPoint)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
    name: GenerateClientHashCode
    nameWithType: ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GenerateClientHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GenerateClientHashCode(System.Net.IPEndPoint)
    name: GenerateClientHashCode
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GenerateClientHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.AddClientToRegistry
  name: AddClientToRegistry
  nameWithType: SocketClientRegistry<TSocketChannel>.AddClientToRegistry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.AddClientToRegistry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).AddClientToRegistry
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).AddClientToRegistry
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.AddClientToRegistry(System.Int32,{TSocketChannel})
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.AddClientToRegistry(System.Int32,`0)
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  name: AddClientToRegistry(Int32, TSocketChannel)
  nameWithType: ISocketClientRegistry<TSocketChannel>.AddClientToRegistry(Int32, TSocketChannel)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.AddClientToRegistry(System.Int32, TSocketChannel)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry(Int32, TSocketChannel)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry(System.Int32, TSocketChannel)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
    name: AddClientToRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.AddClientToRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.AddClientToRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
    name: AddClientToRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TSocketChannel}'
  commentId: '!:TSocketChannel'
  definition: TSocketChannel
  name: TSocketChannel
  nameWithType: TSocketChannel
  fullName: TSocketChannel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
  isExternal: true
  name: AddClientToRegistry(Int32, TSocketChannel)
  nameWithType: ISocketClientRegistry<TSocketChannel>.AddClientToRegistry(Int32, TSocketChannel)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.AddClientToRegistry(System.Int32, TSocketChannel)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry(Int32, TSocketChannel)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry(System.Int32, TSocketChannel)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
    name: AddClientToRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.AddClientToRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.AddClientToRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.AddClientToRegistry(System.Int32,`0)
    name: AddClientToRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).AddClientToRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSocketChannel
    nameWithType: TSocketChannel
    fullName: TSocketChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: TSocketChannel
  name: TSocketChannel
  nameWithType: TSocketChannel
  fullName: TSocketChannel
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetClientFromRegistry
  name: GetClientFromRegistry
  nameWithType: SocketClientRegistry<TSocketChannel>.GetClientFromRegistry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GetClientFromRegistry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GetClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.GetClientFromRegistry(System.Int32)
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  name: GetClientFromRegistry(Int32)
  nameWithType: ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry(Int32)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry(System.Int32)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(Int32)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(System.Int32)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
    name: GetClientFromRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
    name: GetClientFromRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
  isExternal: true
  name: GetClientFromRegistry(Int32)
  nameWithType: ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry(Int32)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry(System.Int32)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(Int32)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry(System.Int32)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
    name: GetClientFromRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetClientFromRegistry(System.Int32)
    name: GetClientFromRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.RemoveClientFromRegistry
  name: RemoveClientFromRegistry
  nameWithType: SocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.RemoveClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.RemoveClientFromRegistry(System.Int32)
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  name: RemoveClientFromRegistry(Int32)
  nameWithType: ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(Int32)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(System.Int32)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(Int32)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(System.Int32)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
    name: RemoveClientFromRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
    name: RemoveClientFromRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
  isExternal: true
  name: RemoveClientFromRegistry(Int32)
  nameWithType: ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(Int32)
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry(System.Int32)
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(Int32)
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry(System.Int32)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
    name: RemoveClientFromRegistry
    nameWithType: ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.RemoveClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.RemoveClientFromRegistry(System.Int32)
    name: RemoveClientFromRegistry
    nameWithType: ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).RemoveClientFromRegistry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.SocketClientRegistry`1.GetRegistryType
  name: GetRegistryType
  nameWithType: SocketClientRegistry<TSocketChannel>.GetRegistryType
  fullName: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry<TSocketChannel>.GetRegistryType
  nameWithType.vb: SocketClientRegistry(Of TSocketChannel).GetRegistryType
  fullName.vb: Catalyst.Core.Lib.IO.Transport.SocketClientRegistry(Of TSocketChannel).GetRegistryType
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}.GetRegistryType
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{`0}.GetRegistryType
  parent: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry{{TSocketChannel}}
  definition: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
  name: GetRegistryType()
  nameWithType: ISocketClientRegistry<TSocketChannel>.GetRegistryType()
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetRegistryType()
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GetRegistryType()
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetRegistryType()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
    name: GetRegistryType
    nameWithType: ISocketClientRegistry<TSocketChannel>.GetRegistryType
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetRegistryType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
    name: GetRegistryType
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GetRegistryType
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetRegistryType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
  name: GetRegistryType()
  nameWithType: ISocketClientRegistry<TSocketChannel>.GetRegistryType()
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetRegistryType()
  nameWithType.vb: ISocketClientRegistry(Of TSocketChannel).GetRegistryType()
  fullName.vb: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetRegistryType()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
    name: GetRegistryType
    nameWithType: ISocketClientRegistry<TSocketChannel>.GetRegistryType
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry<TSocketChannel>.GetRegistryType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry`1.GetRegistryType
    name: GetRegistryType
    nameWithType: ISocketClientRegistry(Of TSocketChannel).GetRegistryType
    fullName: Catalyst.Abstractions.IO.Transport.ISocketClientRegistry(Of TSocketChannel).GetRegistryType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
