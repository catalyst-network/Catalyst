### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory
  commentId: T:Catalyst.Core.Lib.Cryptography.IsaacRandomFactory
  id: IsaacRandomFactory
  parent: Catalyst.Core.Lib.Cryptography
  children:
  - Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  langs:
  - csharp
  - vb
  name: IsaacRandomFactory
  nameWithType: IsaacRandomFactory
  fullName: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/IsaacRandom.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IsaacRandomFactory
    path: ../src/Catalyst.Core.Lib/Cryptography/IsaacRandom.cs
    startLine: 231
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: 'public sealed class IsaacRandomFactory : IDeterministicRandomFactory'
    content.vb: >-
      Public NotInheritable Class IsaacRandomFactory

          Implements IDeterministicRandomFactory
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  commentId: M:Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  id: GetDeterministicRandomFromSeed(System.Byte[])
  parent: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory
  langs:
  - csharp
  - vb
  name: GetDeterministicRandomFromSeed(Byte[])
  nameWithType: IsaacRandomFactory.GetDeterministicRandomFromSeed(Byte[])
  fullName: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Cryptography/IsaacRandom.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetDeterministicRandomFromSeed
    path: ../src/Catalyst.Core.Lib/Cryptography/IsaacRandom.cs
    startLine: 233
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Cryptography
  syntax:
    content: public IDeterministicRandom GetDeterministicRandomFromSeed(byte[] seed)
    parameters:
    - id: seed
      type: System.Byte[]
    return:
      type: Catalyst.Abstractions.Cryptography.IDeterministicRandom
    content.vb: Public Function GetDeterministicRandomFromSeed(seed As Byte()) As IDeterministicRandom
  overload: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed*
  implements:
  - Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  nameWithType.vb: IsaacRandomFactory.GetDeterministicRandomFromSeed(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed(System.Byte())
  name.vb: GetDeterministicRandomFromSeed(Byte())
references:
- uid: Catalyst.Core.Lib.Cryptography
  commentId: N:Catalyst.Core.Lib.Cryptography
  name: Catalyst.Core.Lib.Cryptography
  nameWithType: Catalyst.Core.Lib.Cryptography
  fullName: Catalyst.Core.Lib.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  commentId: T:Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  parent: Catalyst.Abstractions.Cryptography
  name: IDeterministicRandomFactory
  nameWithType: IDeterministicRandomFactory
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed*
  commentId: Overload:Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed
  name: GetDeterministicRandomFromSeed
  nameWithType: IsaacRandomFactory.GetDeterministicRandomFromSeed
  fullName: Catalyst.Core.Lib.Cryptography.IsaacRandomFactory.GetDeterministicRandomFromSeed
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  commentId: M:Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  parent: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  isExternal: true
  name: GetDeterministicRandomFromSeed(Byte[])
  nameWithType: IDeterministicRandomFactory.GetDeterministicRandomFromSeed(Byte[])
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  nameWithType.vb: IDeterministicRandomFactory.GetDeterministicRandomFromSeed(Byte())
  fullName.vb: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte())
  name.vb: GetDeterministicRandomFromSeed(Byte())
  spec.csharp:
  - uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
    name: GetDeterministicRandomFromSeed
    nameWithType: IDeterministicRandomFactory.GetDeterministicRandomFromSeed
    fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
    name: GetDeterministicRandomFromSeed
    nameWithType: IDeterministicRandomFactory.GetDeterministicRandomFromSeed
    fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandom
  commentId: T:Catalyst.Abstractions.Cryptography.IDeterministicRandom
  parent: Catalyst.Abstractions.Cryptography
  name: IDeterministicRandom
  nameWithType: IDeterministicRandom
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandom
