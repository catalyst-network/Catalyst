### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  commentId: T:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  id: BaseLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.EventLoop
  children:
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  - Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  langs:
  - csharp
  - vb
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BaseLoopGroupFactory
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  summary: "\nThe <xref href=\"Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory\" data-throw-if-not-resolved=\"false\"></xref> class keeps references of event loop groups that are created\nand holds them from disposing\n"
  example: []
  syntax:
    content: 'public class BaseLoopGroupFactory : IDisposable'
    content.vb: >-
      Public Class BaseLoopGroupFactory

          Implements IDisposable
  seealso:
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Catalyst.Core.Lib.IO.EventLoop.TcpClientEventLoopGroupFactory
  - Catalyst.Core.Lib.IO.EventLoop.TcpServerEventLoopGroupFactory
  - Catalyst.Core.Lib.IO.EventLoop.UdpClientEventLoopGroupFactory
  - Catalyst.Core.Lib.IO.EventLoop.UdpServerEventLoopGroupFactory
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor
  id: '#ctor'
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: BaseLoopGroupFactory()
  nameWithType: BaseLoopGroupFactory.BaseLoopGroupFactory()
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.BaseLoopGroupFactory()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 55
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  summary: Initializes a new instance of the <xref href="Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BaseLoopGroupFactory()
    content.vb: Public Sub New
  overload: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  id: GetOrCreateSocketIoEventLoopGroup
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: GetOrCreateSocketIoEventLoopGroup()
  nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup()
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetOrCreateSocketIoEventLoopGroup
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 80
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: public IEventLoopGroup GetOrCreateSocketIoEventLoopGroup()
    return:
      type: DotNetty.Transport.Channels.IEventLoopGroup
    content.vb: Public Function GetOrCreateSocketIoEventLoopGroup As IEventLoopGroup
  overload: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BaseLoopGroupFactory.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 85
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  commentId: M:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  id: Dispose
  parent: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseLoopGroupFactory.Dispose()
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Lib/IO/EventLoop/BaseLoopGroupFactory.cs
    startLine: 102
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.EventLoop
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  commentId: T:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.EventLoop
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.EventLoop
  commentId: N:Catalyst.Core.Lib.IO.EventLoop
  name: Catalyst.Core.Lib.IO.EventLoop
  nameWithType: Catalyst.Core.Lib.IO.EventLoop
  fullName: Catalyst.Core.Lib.IO.EventLoop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.#ctor
  name: BaseLoopGroupFactory
  nameWithType: BaseLoopGroupFactory.BaseLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.BaseLoopGroupFactory
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  name: GetOrCreateSocketIoEventLoopGroup
  nameWithType: BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.GetOrCreateSocketIoEventLoopGroup
- uid: DotNetty.Transport.Channels.IEventLoopGroup
  commentId: T:DotNetty.Transport.Channels.IEventLoopGroup
  parent: DotNetty.Transport.Channels
  isExternal: true
  name: IEventLoopGroup
  nameWithType: IEventLoopGroup
  fullName: DotNetty.Transport.Channels.IEventLoopGroup
- uid: DotNetty.Transport.Channels
  commentId: N:DotNetty.Transport.Channels
  isExternal: true
  name: DotNetty.Transport.Channels
  nameWithType: DotNetty.Transport.Channels
  fullName: DotNetty.Transport.Channels
- uid: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose*
  commentId: Overload:Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
  name: Dispose
  nameWithType: BaseLoopGroupFactory.Dispose
  fullName: Catalyst.Core.Lib.IO.EventLoop.BaseLoopGroupFactory.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
