### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Network.EndpointBuilder
  commentId: T:Catalyst.Core.Lib.Network.EndpointBuilder
  id: EndpointBuilder
  parent: Catalyst.Core.Lib.Network
  children:
  - Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.Net.IPAddress,System.Int32)
  - Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String)
  - Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: EndpointBuilder
  nameWithType: EndpointBuilder
  fullName: Catalyst.Core.Lib.Network.EndpointBuilder
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: EndpointBuilder
    path: ../src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Network
  summary: "\n"
  example: []
  syntax:
    content: public static class EndpointBuilder
    content.vb: Public Module EndpointBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String)
  commentId: M:Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String)
  id: BuildNewEndPoint(System.String)
  parent: Catalyst.Core.Lib.Network.EndpointBuilder
  langs:
  - csharp
  - vb
  name: BuildNewEndPoint(String)
  nameWithType: EndpointBuilder.BuildNewEndPoint(String)
  fullName: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildNewEndPoint
    path: ../src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
    startLine: 40
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Network
  summary: "\nHandles IPv4 and IPv6 notation. of an ip:port string\n"
  example: []
  syntax:
    content: public static IPEndPoint BuildNewEndPoint(string endPoint)
    parameters:
    - id: endPoint
      type: System.String
      description: ''
    return:
      type: System.Net.IPEndPoint
      description: ''
    content.vb: Public Shared Function BuildNewEndPoint(endPoint As String) As IPEndPoint
  overload: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String,System.Int32)
  commentId: M:Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String,System.Int32)
  id: BuildNewEndPoint(System.String,System.Int32)
  parent: Catalyst.Core.Lib.Network.EndpointBuilder
  langs:
  - csharp
  - vb
  name: BuildNewEndPoint(String, Int32)
  nameWithType: EndpointBuilder.BuildNewEndPoint(String, Int32)
  fullName: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildNewEndPoint
    path: ../src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
    startLine: 77
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Network
  summary: "\n"
  example: []
  syntax:
    content: public static IPEndPoint BuildNewEndPoint(string ip, int port)
    parameters:
    - id: ip
      type: System.String
      description: ''
    - id: port
      type: System.Int32
      description: ''
    return:
      type: System.Net.IPEndPoint
      description: ''
    content.vb: Public Shared Function BuildNewEndPoint(ip As String, port As Integer) As IPEndPoint
  overload: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.Net.IPAddress,System.Int32)
  commentId: M:Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.Net.IPAddress,System.Int32)
  id: BuildNewEndPoint(System.Net.IPAddress,System.Int32)
  parent: Catalyst.Core.Lib.Network.EndpointBuilder
  langs:
  - csharp
  - vb
  name: BuildNewEndPoint(IPAddress, Int32)
  nameWithType: EndpointBuilder.BuildNewEndPoint(IPAddress, Int32)
  fullName: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildNewEndPoint
    path: ../src/Catalyst.Core.Lib/Network/EndpointBuilder.cs
    startLine: 92
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Network
  summary: "\n"
  example: []
  syntax:
    content: public static IPEndPoint BuildNewEndPoint(IPAddress ip, int port)
    parameters:
    - id: ip
      type: System.Net.IPAddress
      description: ''
    - id: port
      type: System.Int32
      description: ''
    return:
      type: System.Net.IPEndPoint
      description: ''
    content.vb: Public Shared Function BuildNewEndPoint(ip As IPAddress, port As Integer) As IPEndPoint
  overload: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Network
  commentId: N:Catalyst.Core.Lib.Network
  name: Catalyst.Core.Lib.Network
  nameWithType: Catalyst.Core.Lib.Network
  fullName: Catalyst.Core.Lib.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint*
  commentId: Overload:Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint
  name: BuildNewEndPoint
  nameWithType: EndpointBuilder.BuildNewEndPoint
  fullName: Catalyst.Core.Lib.Network.EndpointBuilder.BuildNewEndPoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
