### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer
  commentId: T:Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer
  id: ByteUtil.ByteListMinSizeComparer
  parent: Catalyst.Core.Lib.Util
  children:
  - Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
  langs:
  - csharp
  - vb
  name: ByteUtil.ByteListMinSizeComparer
  nameWithType: ByteUtil.ByteListMinSizeComparer
  fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Util/ByteUtil.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ByteListMinSizeComparer
    path: ../src/Catalyst.Core.Lib/Util/ByteUtil.cs
    startLine: 139
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Util
  remarks: "\nWarning: this comparer assumes that the tail of the longest list is not relevant for comparison\n"
  example: []
  syntax:
    content: 'public sealed class ByteListMinSizeComparer : ByteUtil.ByteListComparerBase, IComparer<IList<byte>>'
    content.vb: >-
      Public NotInheritable Class ByteListMinSizeComparer

          Inherits ByteUtil.ByteListComparerBase

          Implements IComparer(Of IList(Of Byte))
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase
  implements:
  - System.Collections.Generic.IComparer{System.Collections.Generic.IList{System.Byte}}
  inheritedMembers:
  - Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
  commentId: P:Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
  id: Default
  parent: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ByteUtil.ByteListMinSizeComparer.Default
  fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Util/ByteUtil.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Default
    path: ../src/Catalyst.Core.Lib/Util/ByteUtil.cs
    startLine: 141
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Util
  syntax:
    content: public static IComparer<IList<byte>> Default { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IComparer{System.Collections.Generic.IList{System.Byte}}
    content.vb: Public Shared ReadOnly Property Default As IComparer(Of IList(Of Byte))
  overload: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Catalyst.Core.Lib.Util
  commentId: N:Catalyst.Core.Lib.Util
  name: Catalyst.Core.Lib.Util
  nameWithType: Catalyst.Core.Lib.Util
  fullName: Catalyst.Core.Lib.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase
  commentId: T:Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase
  parent: Catalyst.Core.Lib.Util
  name: ByteUtil.ByteListComparerBase
  nameWithType: ByteUtil.ByteListComparerBase
  fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase
- uid: System.Collections.Generic.IComparer{System.Collections.Generic.IList{System.Byte}}
  commentId: T:System.Collections.Generic.IComparer{System.Collections.Generic.IList{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<IList<Byte>>
  nameWithType: IComparer<IList<Byte>>
  fullName: System.Collections.Generic.IComparer<System.Collections.Generic.IList<System.Byte>>
  nameWithType.vb: IComparer(Of IList(Of Byte))
  fullName.vb: System.Collections.Generic.IComparer(Of System.Collections.Generic.IList(Of System.Byte))
  name.vb: IComparer(Of IList(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})
  commentId: M:Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})
  parent: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase
  isExternal: true
  name: Compare(IList<Byte>, IList<Byte>)
  nameWithType: ByteUtil.ByteListComparerBase.Compare(IList<Byte>, IList<Byte>)
  fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList<System.Byte>, System.Collections.Generic.IList<System.Byte>)
  nameWithType.vb: ByteUtil.ByteListComparerBase.Compare(IList(Of Byte), IList(Of Byte))
  fullName.vb: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList(Of System.Byte), System.Collections.Generic.IList(Of System.Byte))
  name.vb: Compare(IList(Of Byte), IList(Of Byte))
  spec.csharp:
  - uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})
    name: Compare
    nameWithType: ByteUtil.ByteListComparerBase.Compare
    fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})
    name: Compare
    nameWithType: ByteUtil.ByteListComparerBase.Compare
    fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListComparerBase.Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default*
  commentId: Overload:Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
  name: Default
  nameWithType: ByteUtil.ByteListMinSizeComparer.Default
  fullName: Catalyst.Core.Lib.Util.ByteUtil.ByteListMinSizeComparer.Default
