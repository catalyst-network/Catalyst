### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  commentId: T:Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  id: TransactionBroadcastDao
  parent: Catalyst.Core.Lib.DAO
  children:
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
  - Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
  langs:
  - csharp
  - vb
  name: TransactionBroadcastDao
  nameWithType: TransactionBroadcastDao
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TransactionBroadcastDao
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: 'public class TransactionBroadcastDao : DaoBase<TransactionBroadcast, TransactionBroadcastDao>, IMapperInitializer, IValueConverter<TransactionBroadcast, TransactionBroadcastDao>'
    content.vb: >-
      Public Class TransactionBroadcastDao

          Inherits DaoBase(Of TransactionBroadcast, TransactionBroadcastDao)

          Implements IMapperInitializer, IValueConverter(Of TransactionBroadcast, TransactionBroadcastDao)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  implements:
  - Catalyst.Abstractions.DAO.IMapperInitializer
  - AutoMapper.IValueConverter{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  inheritedMembers:
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Id
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToProtoBuff
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToDao(Catalyst.Protocol.Wire.TransactionBroadcast)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Protocol.Wire.TransactionBroadcast,AutoMapper.ResolutionContext)
  - Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Core.Lib.DAO.TransactionBroadcastDao,AutoMapper.ResolutionContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
  commentId: P:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
  id: Signature
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: TransactionBroadcastDao.Signature
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Signature
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public SignatureDao Signature { get; set; }
    parameters: []
    return:
      type: Catalyst.Core.Lib.DAO.SignatureDao
    content.vb: Public Property Signature As SignatureDao
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
  commentId: P:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
  id: TimeStamp
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: TransactionBroadcastDao.TimeStamp
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TimeStamp
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public DateTime TimeStamp { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property TimeStamp As Date
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
  commentId: P:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
  id: PublicEntries
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: PublicEntries
  nameWithType: TransactionBroadcastDao.PublicEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicEntries
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public IEnumerable<PublicEntryDao> PublicEntries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.PublicEntryDao}
    content.vb: Public Property PublicEntries As IEnumerable(Of PublicEntryDao)
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
  commentId: P:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
  id: ConfidentialEntries
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: ConfidentialEntries
  nameWithType: TransactionBroadcastDao.ConfidentialEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfidentialEntries
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public IEnumerable<ConfidentialEntryDao> ConfidentialEntries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}
    content.vb: Public Property ConfidentialEntries As IEnumerable(Of ConfidentialEntryDao)
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
  commentId: P:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
  id: ContractEntries
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: ContractEntries
  nameWithType: TransactionBroadcastDao.ContractEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ContractEntries
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public IEnumerable<ContractEntryDao> ContractEntries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ContractEntryDao}
    content.vb: Public Property ContractEntries As IEnumerable(Of ContractEntryDao)
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  id: InitMappers(AutoMapper.IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  langs:
  - csharp
  - vb
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: TransactionBroadcastDao.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers(AutoMapper.IMapperConfigurationExpression)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: InitMappers
    path: ../src/Catalyst.Core.Lib/DAO/TransactionBroadcastDao.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public override void InitMappers(IMapperConfigurationExpression cfg)
    parameters:
    - id: cfg
      type: AutoMapper.IMapperConfigurationExpression
    content.vb: Public Overrides Sub InitMappers(cfg As IMapperConfigurationExpression)
  overridden: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  overload: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Lib.DAO
  commentId: N:Catalyst.Core.Lib.DAO
  name: Catalyst.Core.Lib.DAO
  nameWithType: Catalyst.Core.Lib.DAO
  fullName: Catalyst.Core.Lib.DAO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  parent: Catalyst.Core.Lib.DAO
  definition: Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<TransactionBroadcast, TransactionBroadcastDao>
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao)
  name.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO.IMapperInitializer
  commentId: T:Catalyst.Abstractions.DAO.IMapperInitializer
  parent: Catalyst.Abstractions.DAO
  name: IMapperInitializer
  nameWithType: IMapperInitializer
  fullName: Catalyst.Abstractions.DAO.IMapperInitializer
- uid: AutoMapper.IValueConverter{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  commentId: T:AutoMapper.IValueConverter{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  parent: AutoMapper
  definition: AutoMapper.IValueConverter`2
  name: IValueConverter<TransactionBroadcast, TransactionBroadcastDao>
  nameWithType: IValueConverter<TransactionBroadcast, TransactionBroadcastDao>
  fullName: AutoMapper.IValueConverter<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>
  nameWithType.vb: IValueConverter(Of TransactionBroadcast, TransactionBroadcastDao)
  fullName.vb: AutoMapper.IValueConverter(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao)
  name.vb: IValueConverter(Of TransactionBroadcast, TransactionBroadcastDao)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Id
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.Id
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToProtoBuff
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToDao(Catalyst.Protocol.Wire.TransactionBroadcast)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.ToDao(Catalyst.Protocol.Wire.TransactionBroadcast)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(TransactionBroadcast)
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.ToDao(TransactionBroadcast)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.ToDao(Catalyst.Protocol.Wire.TransactionBroadcast)
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).ToDao(TransactionBroadcast)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).ToDao(Catalyst.Protocol.Wire.TransactionBroadcast)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.InitMappers(AutoMapper.IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.InitMappers(AutoMapper.IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).InitMappers(AutoMapper.IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Protocol.Wire.TransactionBroadcast,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Protocol.Wire.TransactionBroadcast,AutoMapper.ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  name: Convert(TransactionBroadcast, ResolutionContext)
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.Convert(TransactionBroadcast, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.Convert(Catalyst.Protocol.Wire.TransactionBroadcast, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).Convert(TransactionBroadcast, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).Convert(Catalyst.Protocol.Wire.TransactionBroadcast, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Core.Lib.DAO.TransactionBroadcastDao,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}.Convert(Catalyst.Core.Lib.DAO.TransactionBroadcastDao,AutoMapper.ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  name: Convert(TransactionBroadcastDao, ResolutionContext)
  nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.Convert(TransactionBroadcastDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.Convert(Catalyst.Core.Lib.DAO.TransactionBroadcastDao, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).Convert(TransactionBroadcastDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).Convert(Catalyst.Core.Lib.DAO.TransactionBroadcastDao, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TransactionBroadcast, TransactionBroadcastDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TransactionBroadcast, TransactionBroadcastDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Core.Lib.DAO.TransactionBroadcastDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.DAO.DaoBase`2
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<TProto, TDao>
  nameWithType: DaoBase<TProto, TDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>
  nameWithType.vb: DaoBase(Of TProto, TDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao)
  name.vb: DaoBase(Of TProto, TDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO
  commentId: N:Catalyst.Abstractions.DAO
  name: Catalyst.Abstractions.DAO
  nameWithType: Catalyst.Abstractions.DAO
  fullName: Catalyst.Abstractions.DAO
- uid: AutoMapper.IValueConverter`2
  commentId: T:AutoMapper.IValueConverter`2
  isExternal: true
  name: IValueConverter<TSourceMember, TDestinationMember>
  nameWithType: IValueConverter<TSourceMember, TDestinationMember>
  fullName: AutoMapper.IValueConverter<TSourceMember, TDestinationMember>
  nameWithType.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  fullName.vb: AutoMapper.IValueConverter(Of TSourceMember, TDestinationMember)
  name.vb: IValueConverter(Of TSourceMember, TDestinationMember)
  spec.csharp:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoMapper.IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: AutoMapper.IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSourceMember
    nameWithType: TSourceMember
    fullName: TSourceMember
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDestinationMember
    nameWithType: TDestinationMember
    fullName: TDestinationMember
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<TProto, TDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Id
  nameWithType.vb: DaoBase(Of TProto, TDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<TProto, TDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of TProto, TDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<TProto, TDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of TProto, TDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(TProto)
  nameWithType: DaoBase<TProto, TDao>.ToDao(TProto)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao(TProto)
  nameWithType.vb: DaoBase(Of TProto, TDao).ToDao(TProto)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao(TProto)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<TProto, TDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of TProto, TDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
  isExternal: true
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<TProto, TDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers(AutoMapper.IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of TProto, TDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers(AutoMapper.IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<TProto, TDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(AutoMapper.IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of TProto, TDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoMapper.IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: AutoMapper.IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
  isExternal: true
  name: Convert(TProto, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TProto, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TProto, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TProto, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TProto, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
  isExternal: true
  name: Convert(TDao, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TDao, AutoMapper.ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TDao, AutoMapper.ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,AutoMapper.ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoMapper.ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: AutoMapper.ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
  name: Signature
  nameWithType: TransactionBroadcastDao.Signature
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.Signature
- uid: Catalyst.Core.Lib.DAO.SignatureDao
  commentId: T:Catalyst.Core.Lib.DAO.SignatureDao
  parent: Catalyst.Core.Lib.DAO
  name: SignatureDao
  nameWithType: SignatureDao
  fullName: Catalyst.Core.Lib.DAO.SignatureDao
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
  name: TimeStamp
  nameWithType: TransactionBroadcastDao.TimeStamp
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.TimeStamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
  name: PublicEntries
  nameWithType: TransactionBroadcastDao.PublicEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.PublicEntries
- uid: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.PublicEntryDao}
  commentId: T:System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.PublicEntryDao}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PublicEntryDao>
  nameWithType: IEnumerable<PublicEntryDao>
  fullName: System.Collections.Generic.IEnumerable<Catalyst.Core.Lib.DAO.PublicEntryDao>
  nameWithType.vb: IEnumerable(Of PublicEntryDao)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Catalyst.Core.Lib.DAO.PublicEntryDao)
  name.vb: IEnumerable(Of PublicEntryDao)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.PublicEntryDao
    name: PublicEntryDao
    nameWithType: PublicEntryDao
    fullName: Catalyst.Core.Lib.DAO.PublicEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.PublicEntryDao
    name: PublicEntryDao
    nameWithType: PublicEntryDao
    fullName: Catalyst.Core.Lib.DAO.PublicEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
  name: ConfidentialEntries
  nameWithType: TransactionBroadcastDao.ConfidentialEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ConfidentialEntries
- uid: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}
  commentId: T:System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ConfidentialEntryDao>
  nameWithType: IEnumerable<ConfidentialEntryDao>
  fullName: System.Collections.Generic.IEnumerable<Catalyst.Core.Lib.DAO.ConfidentialEntryDao>
  nameWithType.vb: IEnumerable(Of ConfidentialEntryDao)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Catalyst.Core.Lib.DAO.ConfidentialEntryDao)
  name.vb: IEnumerable(Of ConfidentialEntryDao)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
    name: ConfidentialEntryDao
    nameWithType: ConfidentialEntryDao
    fullName: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
    name: ConfidentialEntryDao
    nameWithType: ConfidentialEntryDao
    fullName: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
  name: ContractEntries
  nameWithType: TransactionBroadcastDao.ContractEntries
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.ContractEntries
- uid: System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ContractEntryDao}
  commentId: T:System.Collections.Generic.IEnumerable{Catalyst.Core.Lib.DAO.ContractEntryDao}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ContractEntryDao>
  nameWithType: IEnumerable<ContractEntryDao>
  fullName: System.Collections.Generic.IEnumerable<Catalyst.Core.Lib.DAO.ContractEntryDao>
  nameWithType.vb: IEnumerable(Of ContractEntryDao)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Catalyst.Core.Lib.DAO.ContractEntryDao)
  name.vb: IEnumerable(Of ContractEntryDao)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.ContractEntryDao
    name: ContractEntryDao
    nameWithType: ContractEntryDao
    fullName: Catalyst.Core.Lib.DAO.ContractEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.ContractEntryDao
    name: ContractEntryDao
    nameWithType: ContractEntryDao
    fullName: Catalyst.Core.Lib.DAO.ContractEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers*
  commentId: Overload:Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers
  name: InitMappers
  nameWithType: TransactionBroadcastDao.InitMappers
  fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao.InitMappers
- uid: AutoMapper.IMapperConfigurationExpression
  commentId: T:AutoMapper.IMapperConfigurationExpression
  parent: AutoMapper
  isExternal: true
  name: IMapperConfigurationExpression
  nameWithType: IMapperConfigurationExpression
  fullName: AutoMapper.IMapperConfigurationExpression
