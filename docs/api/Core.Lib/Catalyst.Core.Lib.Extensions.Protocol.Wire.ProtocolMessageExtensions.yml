### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions
  commentId: T:Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions
  id: ProtocolMessageExtensions
  parent: Catalyst.Core.Lib.Extensions.Protocol.Wire
  children:
  - Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.KeySigner.IKeySigner,Catalyst.Protocol.Cryptography.SigningContext)
  langs:
  - csharp
  - vb
  name: ProtocolMessageExtensions
  nameWithType: ProtocolMessageExtensions
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/Protocol/Wire/ProtocolMessageExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ProtocolMessageExtensions
    path: ../src/Catalyst.Core.Lib/Extensions/Protocol/Wire/ProtocolMessageExtensions.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions.Protocol.Wire
  syntax:
    content: public static class ProtocolMessageExtensions
    content.vb: Public Module ProtocolMessageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.KeySigner.IKeySigner,Catalyst.Protocol.Cryptography.SigningContext)
  commentId: M:Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.KeySigner.IKeySigner,Catalyst.Protocol.Cryptography.SigningContext)
  id: Sign(Catalyst.Protocol.Wire.ProtocolMessage,Catalyst.Abstractions.KeySigner.IKeySigner,Catalyst.Protocol.Cryptography.SigningContext)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions
  langs:
  - csharp
  - vb
  name: Sign(ProtocolMessage, IKeySigner, SigningContext)
  nameWithType: ProtocolMessageExtensions.Sign(ProtocolMessage, IKeySigner, SigningContext)
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign(Catalyst.Protocol.Wire.ProtocolMessage, Catalyst.Abstractions.KeySigner.IKeySigner, Catalyst.Protocol.Cryptography.SigningContext)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/Protocol/Wire/ProtocolMessageExtensions.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Sign
    path: ../src/Catalyst.Core.Lib/Extensions/Protocol/Wire/ProtocolMessageExtensions.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions.Protocol.Wire
  summary: "\nUse this to sign a <xref href=\"Catalyst.Protocol.Wire.ProtocolMessage\" data-throw-if-not-resolved=\"false\"></xref> before sending it.\nIf a signature was found on the message, this will error.\n"
  example: []
  syntax:
    content: public static ProtocolMessage Sign(this ProtocolMessage protocolMessage, IKeySigner keySigner, SigningContext signingContext)
    parameters:
    - id: protocolMessage
      type: Catalyst.Protocol.Wire.ProtocolMessage
      description: The message that needs to be signed.
    - id: keySigner
      type: Catalyst.Abstractions.KeySigner.IKeySigner
      description: An instance of <xref href="Catalyst.Abstractions.KeySigner.IKeySigner" data-throw-if-not-resolved="false"></xref> used to build the signature.
    - id: signingContext
      type: Catalyst.Protocol.Cryptography.SigningContext
      description: The context used to sign the message.
    return:
      type: Catalyst.Protocol.Wire.ProtocolMessage
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Sign(protocolMessage As ProtocolMessage, keySigner As IKeySigner, signingContext As SigningContext) As ProtocolMessage
  overload: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire
  commentId: N:Catalyst.Core.Lib.Extensions.Protocol.Wire
  name: Catalyst.Core.Lib.Extensions.Protocol.Wire
  nameWithType: Catalyst.Core.Lib.Extensions.Protocol.Wire
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: Catalyst.Abstractions.KeySigner.IKeySigner
  commentId: T:Catalyst.Abstractions.KeySigner.IKeySigner
  parent: Catalyst.Abstractions.KeySigner
  name: IKeySigner
  nameWithType: IKeySigner
  fullName: Catalyst.Abstractions.KeySigner.IKeySigner
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign*
  commentId: Overload:Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign
  name: Sign
  nameWithType: ProtocolMessageExtensions.Sign
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.ProtocolMessageExtensions.Sign
- uid: Catalyst.Protocol.Cryptography.SigningContext
  commentId: T:Catalyst.Protocol.Cryptography.SigningContext
  parent: Catalyst.Protocol.Cryptography
  name: SigningContext
  nameWithType: SigningContext
  fullName: Catalyst.Protocol.Cryptography.SigningContext
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: Catalyst.Abstractions.KeySigner
  commentId: N:Catalyst.Abstractions.KeySigner
  name: Catalyst.Abstractions.KeySigner
  nameWithType: Catalyst.Abstractions.KeySigner
  fullName: Catalyst.Abstractions.KeySigner
- uid: Catalyst.Protocol.Cryptography
  commentId: N:Catalyst.Protocol.Cryptography
  name: Catalyst.Protocol.Cryptography
  nameWithType: Catalyst.Protocol.Cryptography
  fullName: Catalyst.Protocol.Cryptography
