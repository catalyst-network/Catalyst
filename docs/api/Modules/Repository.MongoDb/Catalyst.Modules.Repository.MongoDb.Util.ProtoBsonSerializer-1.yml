### YamlMime:ManagedReference
items:
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1
  commentId: T:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1
  id: ProtoBsonSerializer`1
  parent: Catalyst.Modules.Repository.MongoDb.Util
  children:
  - Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  - Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  - Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType
  langs:
  - csharp
  - vb
  name: ProtoBsonSerializer<T>
  nameWithType: ProtoBsonSerializer<T>
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ProtoBsonSerializer
    path: ../src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
    startLine: 32
  assemblies:
  - Catalyst.Modules.Repository.MongoDb
  namespace: Catalyst.Modules.Repository.MongoDb.Util
  syntax:
    content: 'public class ProtoBsonSerializer<T> : IBsonSerializer where T : IMessage, new()'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ProtoBsonSerializer(Of T As {IMessage, New})

          Implements IBsonSerializer
  inheritance:
  - System.Object
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ProtoBsonSerializer(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T)
  name.vb: ProtoBsonSerializer(Of T)
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType
  commentId: P:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType
  id: ValueType
  parent: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: ProtoBsonSerializer<T>.ValueType
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.ValueType
  type: Property
  source:
    remote:
      path: src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ValueType
    path: ../src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
    startLine: 34
  assemblies:
  - Catalyst.Modules.Repository.MongoDb
  namespace: Catalyst.Modules.Repository.MongoDb.Util
  syntax:
    content: public Type ValueType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ValueType As Type
  overload: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  nameWithType.vb: ProtoBsonSerializer(Of T).ValueType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).ValueType
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  id: Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1
  langs:
  - csharp
  - vb
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: ProtoBsonSerializer<T>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  type: Method
  source:
    remote:
      path: src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Deserialize
    path: ../src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
    startLine: 36
  assemblies:
  - Catalyst.Modules.Repository.MongoDb
  namespace: Catalyst.Modules.Repository.MongoDb.Util
  syntax:
    content: public object Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonDeserializationContext
    - id: args
      type: MongoDB.Bson.Serialization.BsonDeserializationArgs
    return:
      type: System.Object
    content.vb: Public Function Deserialize(context As BsonDeserializationContext, args As BsonDeserializationArgs) As Object
  overload: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  nameWithType.vb: ProtoBsonSerializer(Of T).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  id: Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  parent: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1
  langs:
  - csharp
  - vb
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: ProtoBsonSerializer<T>.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Serialize
    path: ../src/Catalyst.Modules.Repository.MongoDb/Util/BsonProtoObjectConverter.cs
    startLine: 45
  assemblies:
  - Catalyst.Modules.Repository.MongoDb
  namespace: Catalyst.Modules.Repository.MongoDb.Util
  syntax:
    content: public void Serialize(BsonSerializationContext context, BsonSerializationArgs args, object value)
    parameters:
    - id: context
      type: MongoDB.Bson.Serialization.BsonSerializationContext
    - id: args
      type: MongoDB.Bson.Serialization.BsonSerializationArgs
    - id: value
      type: System.Object
    content.vb: Public Sub Serialize(context As BsonSerializationContext, args As BsonSerializationArgs, value As Object)
  overload: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize*
  implements:
  - MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  nameWithType.vb: ProtoBsonSerializer(Of T).Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
references:
- uid: Catalyst.Modules.Repository.MongoDb.Util
  commentId: N:Catalyst.Modules.Repository.MongoDb.Util
  name: Catalyst.Modules.Repository.MongoDb.Util
  nameWithType: Catalyst.Modules.Repository.MongoDb.Util
  fullName: Catalyst.Modules.Repository.MongoDb.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MongoDB.Bson.Serialization.IBsonSerializer
  commentId: T:MongoDB.Bson.Serialization.IBsonSerializer
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: IBsonSerializer
  nameWithType: IBsonSerializer
  fullName: MongoDB.Bson.Serialization.IBsonSerializer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Bson.Serialization
  commentId: N:MongoDB.Bson.Serialization
  isExternal: true
  name: MongoDB.Bson.Serialization
  nameWithType: MongoDB.Bson.Serialization
  fullName: MongoDB.Bson.Serialization
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType*
  commentId: Overload:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.ValueType
  name: ValueType
  nameWithType: ProtoBsonSerializer<T>.ValueType
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.ValueType
  nameWithType.vb: ProtoBsonSerializer(Of T).ValueType
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).ValueType
- uid: MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  commentId: P:MongoDB.Bson.Serialization.IBsonSerializer.ValueType
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: ValueType
  nameWithType: IBsonSerializer.ValueType
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.ValueType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize*
  commentId: Overload:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Deserialize
  name: Deserialize
  nameWithType: ProtoBsonSerializer<T>.Deserialize
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.Deserialize
  nameWithType.vb: ProtoBsonSerializer(Of T).Deserialize
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).Deserialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: IBsonSerializer.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext, MongoDB.Bson.Serialization.BsonDeserializationArgs)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)
    name: Deserialize
    nameWithType: IBsonSerializer.Deserialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonDeserializationContext
    name: BsonDeserializationContext
    nameWithType: BsonDeserializationContext
    fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
    name: BsonDeserializationArgs
    nameWithType: BsonDeserializationArgs
    fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.BsonDeserializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationContext
  nameWithType: BsonDeserializationContext
  fullName: MongoDB.Bson.Serialization.BsonDeserializationContext
- uid: MongoDB.Bson.Serialization.BsonDeserializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonDeserializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonDeserializationArgs
  nameWithType: BsonDeserializationArgs
  fullName: MongoDB.Bson.Serialization.BsonDeserializationArgs
- uid: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize*
  commentId: Overload:Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer`1.Serialize
  name: Serialize
  nameWithType: ProtoBsonSerializer<T>.Serialize
  fullName: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer<T>.Serialize
  nameWithType.vb: ProtoBsonSerializer(Of T).Serialize
  fullName.vb: Catalyst.Modules.Repository.MongoDb.Util.ProtoBsonSerializer(Of T).Serialize
- uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  commentId: M:MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
  parent: MongoDB.Bson.Serialization.IBsonSerializer
  isExternal: true
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType: IBsonSerializer.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext, MongoDB.Bson.Serialization.BsonSerializationArgs, System.Object)
  spec.csharp:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)
    name: Serialize
    nameWithType: IBsonSerializer.Serialize
    fullName: MongoDB.Bson.Serialization.IBsonSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Bson.Serialization.BsonSerializationContext
    name: BsonSerializationContext
    nameWithType: BsonSerializationContext
    fullName: MongoDB.Bson.Serialization.BsonSerializationContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Bson.Serialization.BsonSerializationArgs
    name: BsonSerializationArgs
    nameWithType: BsonSerializationArgs
    fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Bson.Serialization.BsonSerializationContext
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationContext
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationContext
  nameWithType: BsonSerializationContext
  fullName: MongoDB.Bson.Serialization.BsonSerializationContext
- uid: MongoDB.Bson.Serialization.BsonSerializationArgs
  commentId: T:MongoDB.Bson.Serialization.BsonSerializationArgs
  parent: MongoDB.Bson.Serialization
  isExternal: true
  name: BsonSerializationArgs
  nameWithType: BsonSerializationArgs
  fullName: MongoDB.Bson.Serialization.BsonSerializationArgs
