### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  commentId: T:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  id: ICycleEventsProvider
  parent: Catalyst.Abstractions.Consensus.Cycle
  children:
  - Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close
  - Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
  - Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
  - Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  langs:
  - csharp
  - vb
  name: ICycleEventsProvider
  nameWithType: ICycleEventsProvider
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ICycleEventsProvider
    path: ../src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Cycle
  summary: "\nUse this service to get notification about the different events happening during the\ndelta production cycles.\n"
  example: []
  syntax:
    content: public interface ICycleEventsProvider
    content.vb: Public Interface ICycleEventsProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
  commentId: P:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
  id: Configuration
  parent: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ICycleEventsProvider.Configuration
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Configuration
    path: ../src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
    startLine: 36
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Cycle
  summary: "\nConfiguration object holding the duration of the different phases in the cycle.\n"
  example: []
  syntax:
    content: ICycleConfiguration Configuration { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Consensus.Cycle.ICycleConfiguration
    content.vb: ReadOnly Property Configuration As ICycleConfiguration
  overload: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  commentId: P:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  id: PhaseChanges
  parent: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  langs:
  - csharp
  - vb
  name: PhaseChanges
  nameWithType: ICycleEventsProvider.PhaseChanges
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PhaseChanges
    path: ../src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
    startLine: 41
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Cycle
  summary: "\nSubscribe to this stream to get notified about cycle and phaseDetails changes\n"
  example: []
  syntax:
    content: IObservable<IPhase> PhaseChanges { get; }
    parameters: []
    return:
      type: System.IObservable{Catalyst.Abstractions.Consensus.Cycle.IPhase}
    content.vb: ReadOnly Property PhaseChanges As IObservable(Of IPhase)
  overload: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
  commentId: M:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
  id: GetTimeSpanUntilNextCycleStart
  parent: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  langs:
  - csharp
  - vb
  name: GetTimeSpanUntilNextCycleStart()
  nameWithType: ICycleEventsProvider.GetTimeSpanUntilNextCycleStart()
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart()
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetTimeSpanUntilNextCycleStart
    path: ../src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
    startLine: 47
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Cycle
  summary: "\nUse this method to find out in how much time the next production cycle will start.\n"
  example: []
  syntax:
    content: TimeSpan GetTimeSpanUntilNextCycleStart()
    return:
      type: System.TimeSpan
      description: A TimeSpan representing the time to wait until next delta production cycle starts.
    content.vb: Function GetTimeSpanUntilNextCycleStart As TimeSpan
  overload: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart*
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close
  commentId: M:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close
  id: Close
  parent: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ICycleEventsProvider.Close()
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close()
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Close
    path: ../src/Catalyst.Abstractions/Consensus/Cycle/ICycleEventsProvider.cs
    startLine: 52
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Cycle
  summary: "\nTerminate the emission of state changes events on the <xref href=\"Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges\" data-throw-if-not-resolved=\"false\"></xref> stream\n"
  example: []
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close*
references:
- uid: Catalyst.Abstractions.Consensus.Cycle
  commentId: N:Catalyst.Abstractions.Consensus.Cycle
  name: Catalyst.Abstractions.Consensus.Cycle
  nameWithType: Catalyst.Abstractions.Consensus.Cycle
  fullName: Catalyst.Abstractions.Consensus.Cycle
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration*
  commentId: Overload:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
  name: Configuration
  nameWithType: ICycleEventsProvider.Configuration
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Configuration
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleConfiguration
  commentId: T:Catalyst.Abstractions.Consensus.Cycle.ICycleConfiguration
  parent: Catalyst.Abstractions.Consensus.Cycle
  name: ICycleConfiguration
  nameWithType: ICycleConfiguration
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleConfiguration
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges*
  commentId: Overload:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  name: PhaseChanges
  nameWithType: ICycleEventsProvider.PhaseChanges
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
- uid: System.IObservable{Catalyst.Abstractions.Consensus.Cycle.IPhase}
  commentId: T:System.IObservable{Catalyst.Abstractions.Consensus.Cycle.IPhase}
  parent: System
  definition: System.IObservable`1
  name: IObservable<IPhase>
  nameWithType: IObservable<IPhase>
  fullName: System.IObservable<Catalyst.Abstractions.Consensus.Cycle.IPhase>
  nameWithType.vb: IObservable(Of IPhase)
  fullName.vb: System.IObservable(Of Catalyst.Abstractions.Consensus.Cycle.IPhase)
  name.vb: IObservable(Of IPhase)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.Consensus.Cycle.IPhase
    name: IPhase
    nameWithType: IPhase
    fullName: Catalyst.Abstractions.Consensus.Cycle.IPhase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.Consensus.Cycle.IPhase
    name: IPhase
    nameWithType: IPhase
    fullName: Catalyst.Abstractions.Consensus.Cycle.IPhase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart*
  commentId: Overload:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
  name: GetTimeSpanUntilNextCycleStart
  nameWithType: ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.GetTimeSpanUntilNextCycleStart
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  commentId: P:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.PhaseChanges
  isExternal: true
- uid: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close*
  commentId: Overload:Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close
  name: Close
  nameWithType: ICycleEventsProvider.Close
  fullName: Catalyst.Abstractions.Consensus.Cycle.ICycleEventsProvider.Close
