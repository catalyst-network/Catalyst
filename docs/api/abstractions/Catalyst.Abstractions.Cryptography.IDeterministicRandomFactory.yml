### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  commentId: T:Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  id: IDeterministicRandomFactory
  parent: Catalyst.Abstractions.Cryptography
  children:
  - Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  langs:
  - csharp
  - vb
  name: IDeterministicRandomFactory
  nameWithType: IDeterministicRandomFactory
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IDeterministicRandom.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IDeterministicRandomFactory
    path: ../src/Catalyst.Abstractions/Cryptography/IDeterministicRandom.cs
    startLine: 36
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  syntax:
    content: public interface IDeterministicRandomFactory
    content.vb: Public Interface IDeterministicRandomFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  commentId: M:Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  id: GetDeterministicRandomFromSeed(System.Byte[])
  parent: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory
  langs:
  - csharp
  - vb
  name: GetDeterministicRandomFromSeed(Byte[])
  nameWithType: IDeterministicRandomFactory.GetDeterministicRandomFromSeed(Byte[])
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IDeterministicRandom.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetDeterministicRandomFromSeed
    path: ../src/Catalyst.Abstractions/Cryptography/IDeterministicRandom.cs
    startLine: 38
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  syntax:
    content: IDeterministicRandom GetDeterministicRandomFromSeed(byte[] seed)
    parameters:
    - id: seed
      type: System.Byte[]
    return:
      type: Catalyst.Abstractions.Cryptography.IDeterministicRandom
    content.vb: Function GetDeterministicRandomFromSeed(seed As Byte()) As IDeterministicRandom
  overload: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed*
  nameWithType.vb: IDeterministicRandomFactory.GetDeterministicRandomFromSeed(Byte())
  fullName.vb: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed(System.Byte())
  name.vb: GetDeterministicRandomFromSeed(Byte())
references:
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed*
  commentId: Overload:Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed
  name: GetDeterministicRandomFromSeed
  nameWithType: IDeterministicRandomFactory.GetDeterministicRandomFromSeed
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandomFactory.GetDeterministicRandomFromSeed
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Catalyst.Abstractions.Cryptography.IDeterministicRandom
  commentId: T:Catalyst.Abstractions.Cryptography.IDeterministicRandom
  parent: Catalyst.Abstractions.Cryptography
  name: IDeterministicRandom
  nameWithType: IDeterministicRandom
  fullName: Catalyst.Abstractions.Cryptography.IDeterministicRandom
