### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.FileSystem.IFileSystem
  commentId: T:Catalyst.Abstractions.FileSystem.IFileSystem
  id: IFileSystem
  parent: Catalyst.Abstractions.FileSystem
  children:
  - Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  - Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  - Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IFileSystem
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 29
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: 'public interface IFileSystem : IFileSystem'
    content.vb: >-
      Public Interface IFileSystem

          Inherits IFileSystem
  inheritedMembers:
  - System.IO.Abstractions.IFileSystem.File
  - System.IO.Abstractions.IFileSystem.Directory
  - System.IO.Abstractions.IFileSystem.FileInfo
  - System.IO.Abstractions.IFileSystem.FileStream
  - System.IO.Abstractions.IFileSystem.Path
  - System.IO.Abstractions.IFileSystem.DirectoryInfo
  - System.IO.Abstractions.IFileSystem.DriveInfo
  - System.IO.Abstractions.IFileSystem.FileSystemWatcher
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  id: GetCatalystDataDir
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: GetCatalystDataDir()
  nameWithType: IFileSystem.GetCatalystDataDir()
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir()
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetCatalystDataDir
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: DirectoryInfo GetCatalystDataDir()
    return:
      type: System.IO.DirectoryInfo
    content.vb: Function GetCatalystDataDir As DirectoryInfo
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String,System.String)
  id: WriteTextFileToCddAsync(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: WriteTextFileToCddAsync(String, String)
  nameWithType: IFileSystem.WriteTextFileToCddAsync(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTextFileToCddAsync
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: Task<IFileInfo> WriteTextFileToCddAsync(string fileName, string contents)
    parameters:
    - id: fileName
      type: System.String
    - id: contents
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
    content.vb: Function WriteTextFileToCddAsync(fileName As String, contents As String) As Task(Of IFileInfo)
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  id: WriteTextFileToCddSubDirectoryAsync(System.String,System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: WriteTextFileToCddSubDirectoryAsync(String, String, String)
  nameWithType: IFileSystem.WriteTextFileToCddSubDirectoryAsync(String, String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTextFileToCddSubDirectoryAsync
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 33
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: Task<IFileInfo> WriteTextFileToCddSubDirectoryAsync(string fileName, string subDirectory, string contents)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    - id: contents
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
    content.vb: Function WriteTextFileToCddSubDirectoryAsync(fileName As String, subDirectory As String, contents As String) As Task(Of IFileInfo)
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  id: DataFileExists(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: DataFileExists(String)
  nameWithType: IFileSystem.DataFileExists(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DataFileExists
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: bool DataFileExists(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function DataFileExists(fileName As String) As Boolean
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String,System.String)
  id: DataFileExistsInSubDirectory(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: DataFileExistsInSubDirectory(String, String)
  nameWithType: IFileSystem.DataFileExistsInSubDirectory(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DataFileExistsInSubDirectory
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 36
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: bool DataFileExistsInSubDirectory(string fileName, string subDirectory)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function DataFileExistsInSubDirectory(fileName As String, subDirectory As String) As Boolean
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  id: ReadTextFromCddFile(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: ReadTextFromCddFile(String)
  nameWithType: IFileSystem.ReadTextFromCddFile(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadTextFromCddFile
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 38
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: string ReadTextFromCddFile(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
    content.vb: Function ReadTextFromCddFile(fileName As String) As String
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String,System.String)
  id: ReadTextFromCddSubDirectoryFile(System.String,System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: ReadTextFromCddSubDirectoryFile(String, String)
  nameWithType: IFileSystem.ReadTextFromCddSubDirectoryFile(String, String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReadTextFromCddSubDirectoryFile
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 40
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: string ReadTextFromCddSubDirectoryFile(string fileName, string subDirectory)
    parameters:
    - id: fileName
      type: System.String
    - id: subDirectory
      type: System.String
    return:
      type: System.String
    content.vb: Function ReadTextFromCddSubDirectoryFile(fileName As String, subDirectory As String) As String
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile*
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  commentId: M:Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  id: SetCurrentPath(System.String)
  parent: Catalyst.Abstractions.FileSystem.IFileSystem
  langs:
  - csharp
  - vb
  name: SetCurrentPath(String)
  nameWithType: IFileSystem.SetCurrentPath(String)
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SetCurrentPath
    path: ../src/Catalyst.Abstractions/FileSystem/IFileSystem.cs
    startLine: 42
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileSystem
  syntax:
    content: bool SetCurrentPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function SetCurrentPath(path As String) As Boolean
  overload: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath*
references:
- uid: Catalyst.Abstractions.FileSystem
  commentId: N:Catalyst.Abstractions.FileSystem
  name: Catalyst.Abstractions.FileSystem
  nameWithType: Catalyst.Abstractions.FileSystem
  fullName: Catalyst.Abstractions.FileSystem
- uid: System.IO.Abstractions.IFileSystem.File
  commentId: P:System.IO.Abstractions.IFileSystem.File
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: File
  nameWithType: IFileSystem.File
  fullName: System.IO.Abstractions.IFileSystem.File
- uid: System.IO.Abstractions.IFileSystem.Directory
  commentId: P:System.IO.Abstractions.IFileSystem.Directory
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: Directory
  nameWithType: IFileSystem.Directory
  fullName: System.IO.Abstractions.IFileSystem.Directory
- uid: System.IO.Abstractions.IFileSystem.FileInfo
  commentId: P:System.IO.Abstractions.IFileSystem.FileInfo
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: FileInfo
  nameWithType: IFileSystem.FileInfo
  fullName: System.IO.Abstractions.IFileSystem.FileInfo
- uid: System.IO.Abstractions.IFileSystem.FileStream
  commentId: P:System.IO.Abstractions.IFileSystem.FileStream
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: FileStream
  nameWithType: IFileSystem.FileStream
  fullName: System.IO.Abstractions.IFileSystem.FileStream
- uid: System.IO.Abstractions.IFileSystem.Path
  commentId: P:System.IO.Abstractions.IFileSystem.Path
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: Path
  nameWithType: IFileSystem.Path
  fullName: System.IO.Abstractions.IFileSystem.Path
- uid: System.IO.Abstractions.IFileSystem.DirectoryInfo
  commentId: P:System.IO.Abstractions.IFileSystem.DirectoryInfo
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: DirectoryInfo
  nameWithType: IFileSystem.DirectoryInfo
  fullName: System.IO.Abstractions.IFileSystem.DirectoryInfo
- uid: System.IO.Abstractions.IFileSystem.DriveInfo
  commentId: P:System.IO.Abstractions.IFileSystem.DriveInfo
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: DriveInfo
  nameWithType: IFileSystem.DriveInfo
  fullName: System.IO.Abstractions.IFileSystem.DriveInfo
- uid: System.IO.Abstractions.IFileSystem.FileSystemWatcher
  commentId: P:System.IO.Abstractions.IFileSystem.FileSystemWatcher
  parent: System.IO.Abstractions.IFileSystem
  isExternal: true
  name: FileSystemWatcher
  nameWithType: IFileSystem.FileSystemWatcher
  fullName: System.IO.Abstractions.IFileSystem.FileSystemWatcher
- uid: System.IO.Abstractions.IFileSystem
  commentId: T:System.IO.Abstractions.IFileSystem
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: System.IO.Abstractions.IFileSystem
- uid: System.IO.Abstractions
  commentId: N:System.IO.Abstractions
  isExternal: true
  name: System.IO.Abstractions
  nameWithType: System.IO.Abstractions
  fullName: System.IO.Abstractions
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
  name: GetCatalystDataDir
  nameWithType: IFileSystem.GetCatalystDataDir
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.GetCatalystDataDir
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync
  name: WriteTextFileToCddAsync
  nameWithType: IFileSystem.WriteTextFileToCddAsync
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
  commentId: T:System.Threading.Tasks.Task{System.IO.Abstractions.IFileInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IFileInfo>
  nameWithType: Task<IFileInfo>
  fullName: System.Threading.Tasks.Task<System.IO.Abstractions.IFileInfo>
  nameWithType.vb: Task(Of IFileInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Abstractions.IFileInfo)
  name.vb: Task(Of IFileInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Abstractions.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: System.IO.Abstractions.IFileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Abstractions.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: System.IO.Abstractions.IFileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync
  name: WriteTextFileToCddSubDirectoryAsync
  nameWithType: IFileSystem.WriteTextFileToCddSubDirectoryAsync
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.WriteTextFileToCddSubDirectoryAsync
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists
  name: DataFileExists
  nameWithType: IFileSystem.DataFileExists
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory
  name: DataFileExistsInSubDirectory
  nameWithType: IFileSystem.DataFileExistsInSubDirectory
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.DataFileExistsInSubDirectory
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile
  name: ReadTextFromCddFile
  nameWithType: IFileSystem.ReadTextFromCddFile
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddFile
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile
  name: ReadTextFromCddSubDirectoryFile
  nameWithType: IFileSystem.ReadTextFromCddSubDirectoryFile
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.ReadTextFromCddSubDirectoryFile
- uid: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath*
  commentId: Overload:Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath
  name: SetCurrentPath
  nameWithType: IFileSystem.SetCurrentPath
  fullName: Catalyst.Abstractions.FileSystem.IFileSystem.SetCurrentPath
