### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder
  id: IDeltaBuilder
  parent: Catalyst.Abstractions.Consensus.Deltas
  children:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  langs:
  - csharp
  - vb
  name: IDeltaBuilder
  nameWithType: IDeltaBuilder
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Deltas/IDeltaBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IDeltaBuilder
    path: ../src/Catalyst.Abstractions/Consensus/Deltas/IDeltaBuilder.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Deltas
  summary: "\nThe service in charge of building the delta state update used to update the ledger update \nfor a given cycle.\n"
  example: []
  syntax:
    content: public interface IDeltaBuilder
    content.vb: Public Interface IDeltaBuilder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  id: BuildCandidateDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder
  langs:
  - csharp
  - vb
  name: BuildCandidateDelta(MultiHash)
  nameWithType: IDeltaBuilder.BuildCandidateDelta(MultiHash)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Consensus/Deltas/IDeltaBuilder.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildCandidateDelta
    path: ../src/Catalyst.Abstractions/Consensus/Deltas/IDeltaBuilder.cs
    startLine: 42
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Consensus.Deltas
  summary: "\nBuilds a new candidate delta based on the content of its predecessor, and cache the full content\nof the delta locally. If the delta is elected at the end of the cycle, the cache will be used to retrieve\nand publish the whole delta onto the DFS.\n"
  example: []
  syntax:
    content: CandidateDeltaBroadcast BuildCandidateDelta(MultiHash previousDeltaHash)
    parameters:
    - id: previousDeltaHash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
      description: The content based address of the previous delta on the Dfs.
    return:
      type: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
      description: >-
        Returns a candidate delta object that contains the hash for the update,

        the hash for the previous delta and the producer&apos;s PeerId
    content.vb: Function BuildCandidateDelta(previousDeltaHash As MultiHash) As CandidateDeltaBroadcast
  overload: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta*
references:
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta*
  commentId: Overload:Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta
  name: BuildCandidateDelta
  nameWithType: IDeltaBuilder.BuildCandidateDelta
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaBuilder.BuildCandidateDelta
- uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: MultiHash
  nameWithType: MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
- uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  commentId: T:Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  parent: Catalyst.Protocol.Wire
  name: CandidateDeltaBroadcast
  nameWithType: CandidateDeltaBroadcast
  fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
- uid: TheDotNetLeague.MultiFormats.MultiHash
  commentId: N:TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: TheDotNetLeague.MultiFormats.MultiHash
  nameWithType: TheDotNetLeague.MultiFormats.MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
