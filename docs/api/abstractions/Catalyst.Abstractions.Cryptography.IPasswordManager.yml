### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager
  commentId: T:Catalyst.Abstractions.Cryptography.IPasswordManager
  id: IPasswordManager
  parent: Catalyst.Abstractions.Cryptography
  children:
  - Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.Security.SecureString)
  - Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  - Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  langs:
  - csharp
  - vb
  name: IPasswordManager
  nameWithType: IPasswordManager
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IPasswordManager
    path: ../src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  summary: "\nA service use to retrieve or add password to the node&apos;s registry.\n"
  example: []
  syntax:
    content: public interface IPasswordManager
    content.vb: Public Interface IPasswordManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  commentId: M:Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  id: RetrieveOrPromptPassword(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  parent: Catalyst.Abstractions.Cryptography.IPasswordManager
  langs:
  - csharp
  - vb
  name: RetrieveOrPromptPassword(PasswordRegistryTypes, String)
  nameWithType: IPasswordManager.RetrieveOrPromptPassword(PasswordRegistryTypes, String)
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword(Catalyst.Abstractions.Types.PasswordRegistryTypes, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RetrieveOrPromptPassword
    path: ../src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
    startLine: 46
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  summary: "\nTry to retrieve a password from the registry, if not found, prompt the\nuser for it.\n"
  remarks: >
    Once the password has been use, it is recommended to dispose of it.

    <seealso>

    <cref>https://docs.microsoft.com/en-us/dotnet/api/system.security.securestring?view=netcore-2.2</cref>

    </seealso>
  example: []
  syntax:
    content: SecureString RetrieveOrPromptPassword(PasswordRegistryTypes passwordType, string promptMessage = null)
    parameters:
    - id: passwordType
      type: Catalyst.Abstractions.Types.PasswordRegistryTypes
      description: The type of password to be retrieved.
    - id: promptMessage
      type: System.String
      description: >-
        A message providing some context to the user,

        for instance which password is being requested.
    return:
      type: System.Security.SecureString
      description: The password read and stored as a <code>SecureString</code>
    content.vb: Function RetrieveOrPromptPassword(passwordType As PasswordRegistryTypes, promptMessage As String = Nothing) As SecureString
  overload: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword*
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.Security.SecureString)
  commentId: M:Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.Security.SecureString)
  id: AddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.Security.SecureString)
  parent: Catalyst.Abstractions.Cryptography.IPasswordManager
  langs:
  - csharp
  - vb
  name: AddPasswordToRegistry(PasswordRegistryTypes, SecureString)
  nameWithType: IPasswordManager.AddPasswordToRegistry(PasswordRegistryTypes, SecureString)
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes, System.Security.SecureString)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AddPasswordToRegistry
    path: ../src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
    startLine: 56
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  summary: "\nAdds a password to the registry in order to make it reusable later without\nrequiring a new input from the user.\n"
  example: []
  syntax:
    content: bool AddPasswordToRegistry(PasswordRegistryTypes passwordType, SecureString securePassword)
    parameters:
    - id: passwordType
      type: Catalyst.Abstractions.Types.PasswordRegistryTypes
      description: The type of password to be retrieved.
    - id: securePassword
      type: System.Security.SecureString
      description: ''
    return:
      type: System.Boolean
      description: bools
    content.vb: Function AddPasswordToRegistry(passwordType As PasswordRegistryTypes, securePassword As SecureString) As Boolean
  overload: Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry*
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  commentId: M:Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  id: RetrieveOrPromptAndAddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes,System.String)
  parent: Catalyst.Abstractions.Cryptography.IPasswordManager
  langs:
  - csharp
  - vb
  name: RetrieveOrPromptAndAddPasswordToRegistry(PasswordRegistryTypes, String)
  nameWithType: IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry(PasswordRegistryTypes, String)
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry(Catalyst.Abstractions.Types.PasswordRegistryTypes, System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RetrieveOrPromptAndAddPasswordToRegistry
    path: ../src/Catalyst.Abstractions/Cryptography/IPasswordManager.cs
    startLine: 71
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cryptography
  summary: "\nAdds a password to the registry in order to make it reusable later without\nrequiring a new input from the user.\n"
  remarks: >
    Once the password has been use, it is recommended to dispose of it.

    <seealso>

    <cref>https://docs.microsoft.com/en-us/dotnet/api/system.security.securestring?view=netcore-2.2</cref>

    </seealso>
  example: []
  syntax:
    content: SecureString RetrieveOrPromptAndAddPasswordToRegistry(PasswordRegistryTypes passwordType, string promptMessage = null)
    parameters:
    - id: passwordType
      type: Catalyst.Abstractions.Types.PasswordRegistryTypes
      description: ''
    - id: promptMessage
      type: System.String
      description: >-
        A message providing some context to the user,

        for instance which password is being requested.
    return:
      type: System.Security.SecureString
      description: The password read and stored as a <code>SecureString</code>
    content.vb: Function RetrieveOrPromptAndAddPasswordToRegistry(passwordType As PasswordRegistryTypes, promptMessage As String = Nothing) As SecureString
  overload: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry*
references:
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword*
  commentId: Overload:Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword
  name: RetrieveOrPromptPassword
  nameWithType: IPasswordManager.RetrieveOrPromptPassword
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptPassword
- uid: Catalyst.Abstractions.Types.PasswordRegistryTypes
  commentId: T:Catalyst.Abstractions.Types.PasswordRegistryTypes
  parent: Catalyst.Abstractions.Types
  name: PasswordRegistryTypes
  nameWithType: PasswordRegistryTypes
  fullName: Catalyst.Abstractions.Types.PasswordRegistryTypes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: Catalyst.Abstractions.Types
  commentId: N:Catalyst.Abstractions.Types
  name: Catalyst.Abstractions.Types
  nameWithType: Catalyst.Abstractions.Types
  fullName: Catalyst.Abstractions.Types
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry*
  commentId: Overload:Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry
  name: AddPasswordToRegistry
  nameWithType: IPasswordManager.AddPasswordToRegistry
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.AddPasswordToRegistry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry*
  commentId: Overload:Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry
  name: RetrieveOrPromptAndAddPasswordToRegistry
  nameWithType: IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry
  fullName: Catalyst.Abstractions.Cryptography.IPasswordManager.RetrieveOrPromptAndAddPasswordToRegistry
