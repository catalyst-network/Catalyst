### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory
  id: IChannelFactory
  parent: Catalyst.Abstractions.IO.Transport.Channels
  children:
  - Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  langs:
  - csharp
  - vb
  name: IChannelFactory
  nameWithType: IChannelFactory
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/IO/Transport/Channels/IChannelFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IChannelFactory
    path: ../src/Catalyst.Abstractions/IO/Transport/Channels/IChannelFactory.cs
    startLine: 30
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.IO.Transport.Channels
  syntax:
    content: public interface IChannelFactory
    content.vb: Public Interface IChannelFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: BuildChannel(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory
  langs:
  - csharp
  - vb
  name: BuildChannel(IEventLoopGroupFactory, IPAddress, Int32, X509Certificate2)
  nameWithType: IChannelFactory.BuildChannel(IEventLoopGroupFactory, IPAddress, Int32, X509Certificate2)
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel(Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory, System.Net.IPAddress, System.Int32, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/IO/Transport/Channels/IChannelFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BuildChannel
    path: ../src/Catalyst.Abstractions/IO/Transport/Channels/IChannelFactory.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.IO.Transport.Channels
  syntax:
    content: Task<IObservableChannel> BuildChannel(IEventLoopGroupFactory eventLoopGroupFactory, IPAddress targetAddress, int targetPort, X509Certificate2 certificate = null)
    parameters:
    - id: eventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
    - id: targetAddress
      type: System.Net.IPAddress
    - id: targetPort
      type: System.Int32
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    return:
      type: System.Threading.Tasks.Task{Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel}
    content.vb: Function BuildChannel(eventLoopGroupFactory As IEventLoopGroupFactory, targetAddress As IPAddress, targetPort As Integer, certificate As X509Certificate2 = Nothing) As Task(Of IObservableChannel)
  overload: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel*
references:
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel*
  commentId: Overload:Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel
  name: BuildChannel
  nameWithType: IChannelFactory.BuildChannel
  fullName: Catalyst.Abstractions.IO.Transport.Channels.IChannelFactory.BuildChannel
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactory
  nameWithType: IEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Threading.Tasks.Task{Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel}
  commentId: T:System.Threading.Tasks.Task{Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IObservableChannel>
  nameWithType: Task<IObservableChannel>
  fullName: System.Threading.Tasks.Task<Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel>
  nameWithType.vb: Task(Of IObservableChannel)
  fullName.vb: System.Threading.Tasks.Task(Of Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel)
  name.vb: Task(Of IObservableChannel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
    name: IObservableChannel
    nameWithType: IObservableChannel
    fullName: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
    name: IObservableChannel
    nameWithType: IObservableChannel
    fullName: Catalyst.Abstractions.IO.Transport.Channels.IObservableChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
