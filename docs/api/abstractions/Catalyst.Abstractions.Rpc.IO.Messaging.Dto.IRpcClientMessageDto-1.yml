### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1
  commentId: T:Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1
  id: IRpcClientMessageDto`1
  parent: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  children:
  - Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message
  - Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender
  langs:
  - csharp
  - vb
  name: IRpcClientMessageDto<T>
  nameWithType: IRpcClientMessageDto<T>
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto<T>
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IRpcClientMessageDto
    path: ../src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  summary: "\nDto to be used to push RPC protocol messages to an observable stream.\n"
  example: []
  syntax:
    content: >-
      public interface IRpcClientMessageDto<T>

          where T : IMessage
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Interface IRpcClientMessageDto(Of T As IMessage)
  nameWithType.vb: IRpcClientMessageDto(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto(Of T)
  name.vb: IRpcClientMessageDto(Of T)
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender
  commentId: P:Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender
  id: Sender
  parent: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: IRpcClientMessageDto<T>.Sender
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto<T>.Sender
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Sender
    path: ../src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  syntax:
    content: PeerId Sender { get; set; }
    parameters: []
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: Property Sender As PeerId
  overload: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender*
  nameWithType.vb: IRpcClientMessageDto(Of T).Sender
  modifiers.csharp:
  - get
  - set
  fullName.vb: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto(Of T).Sender
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message
  commentId: P:Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message
  id: Message
  parent: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: IRpcClientMessageDto<T>.Message
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto<T>.Message
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Message
    path: ../src/Catalyst.Abstractions/Rpc/IO/Messaging/Dto/IRPCClientMessageDto.cs
    startLine: 35
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  syntax:
    content: T Message { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Property Message As T
  overload: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message*
  nameWithType.vb: IRpcClientMessageDto(Of T).Message
  modifiers.csharp:
  - get
  - set
  fullName.vb: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto(Of T).Message
references:
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  commentId: N:Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  name: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  nameWithType: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender*
  commentId: Overload:Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Sender
  name: Sender
  nameWithType: IRpcClientMessageDto<T>.Sender
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto<T>.Sender
  nameWithType.vb: IRpcClientMessageDto(Of T).Sender
  fullName.vb: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto(Of T).Sender
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
- uid: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message*
  commentId: Overload:Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto`1.Message
  name: Message
  nameWithType: IRpcClientMessageDto<T>.Message
  fullName: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto<T>.Message
  nameWithType.vb: IRpcClientMessageDto(Of T).Message
  fullName.vb: Catalyst.Abstractions.Rpc.IO.Messaging.Dto.IRpcClientMessageDto(Of T).Message
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
