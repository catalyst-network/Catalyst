### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  commentId: T:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  id: IFileTransferFactory`1
  parent: Catalyst.Abstractions.FileTransfer
  children:
  - Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId,System.Threading.CancellationToken)
  - Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  - Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys
  - Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer(`0)
  - Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove(`0,System.Boolean)
  langs:
  - csharp
  - vb
  name: IFileTransferFactory<T>
  nameWithType: IFileTransferFactory<T>
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IFileTransferFactory
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: "\nThe File Transfer interface\n"
  example: []
  syntax:
    content: >-
      public interface IFileTransferFactory<T>

          where T : IFileTransferInformation
    typeParameters:
    - id: T
    content.vb: Public Interface IFileTransferFactory(Of T As IFileTransferInformation)
  nameWithType.vb: IFileTransferFactory(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T)
  name.vb: IFileTransferFactory(Of T)
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer(`0)
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer(`0)
  id: RegisterTransfer(`0)
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  langs:
  - csharp
  - vb
  name: RegisterTransfer(T)
  nameWithType: IFileTransferFactory<T>.RegisterTransfer(T)
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.RegisterTransfer(T)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RegisterTransfer
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 39
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Registers the transfer.
  example: []
  syntax:
    content: FileTransferResponseCodeTypes RegisterTransfer(T fileTransferInformation)
    parameters:
    - id: fileTransferInformation
      type: '{T}'
      description: The file transfer information.
    return:
      type: Catalyst.Abstractions.Types.FileTransferResponseCodeTypes
      description: Initialization response code
    content.vb: Function RegisterTransfer(fileTransferInformation As T) As FileTransferResponseCodeTypes
  overload: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer*
  nameWithType.vb: IFileTransferFactory(Of T).RegisterTransfer(T)
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).RegisterTransfer(T)
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId,System.Threading.CancellationToken)
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId,System.Threading.CancellationToken)
  id: FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId,System.Threading.CancellationToken)
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  langs:
  - csharp
  - vb
  name: FileTransferAsync(ICorrelationId, CancellationToken)
  nameWithType: IFileTransferFactory<T>.FileTransferAsync(ICorrelationId, CancellationToken)
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: FileTransferAsync
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 45
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Files the transfer asynchronous.
  example: []
  syntax:
    content: Task FileTransferAsync(ICorrelationId correlationId, CancellationToken cancellationToken)
    parameters:
    - id: correlationId
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
      description: The correlation unique identifier.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function FileTransferAsync(correlationId As ICorrelationId, cancellationToken As CancellationToken) As Task
  overload: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync*
  nameWithType.vb: IFileTransferFactory(Of T).FileTransferAsync(ICorrelationId, CancellationToken)
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).FileTransferAsync(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId, System.Threading.CancellationToken)
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  id: GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  langs:
  - csharp
  - vb
  name: GetFileTransferInformation(ICorrelationId)
  nameWithType: IFileTransferFactory<T>.GetFileTransferInformation(ICorrelationId)
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetFileTransferInformation
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 50
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Gets the file transfer information.
  example: []
  syntax:
    content: T GetFileTransferInformation(ICorrelationId correlationId)
    parameters:
    - id: correlationId
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
      description: The correlation unique identifier.
    return:
      type: '{T}'
      description: ''
    content.vb: Function GetFileTransferInformation(correlationId As ICorrelationId) As T
  overload: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation*
  nameWithType.vb: IFileTransferFactory(Of T).GetFileTransferInformation(ICorrelationId)
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).GetFileTransferInformation(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove(`0,System.Boolean)
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove(`0,System.Boolean)
  id: Remove(`0,System.Boolean)
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  langs:
  - csharp
  - vb
  name: Remove(T, Boolean)
  nameWithType: IFileTransferFactory<T>.Remove(T, Boolean)
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.Remove(T, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Remove
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 55
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Removes the specified file transfer information.
  example: []
  syntax:
    content: void Remove(T fileTransferInformation, bool expiredOrCancelled)
    parameters:
    - id: fileTransferInformation
      type: '{T}'
      description: The file transfer information.
    - id: expiredOrCancelled
      type: System.Boolean
      description: if set to <code>true</code> [expired or cancelled].
    content.vb: Sub Remove(fileTransferInformation As T, expiredOrCancelled As Boolean)
  overload: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove*
  nameWithType.vb: IFileTransferFactory(Of T).Remove(T, Boolean)
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).Remove(T, System.Boolean)
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys
  id: Keys
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: IFileTransferFactory<T>.Keys
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.Keys
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Keys
    path: ../src/Catalyst.Abstractions/FileTransfer/IFileTransferFactory.cs
    startLine: 59
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Gets the keys.
  example: []
  syntax:
    content: Guid[] Keys { get; }
    parameters: []
    return:
      type: System.Guid[]
      description: The keys.
    content.vb: ReadOnly Property Keys As Guid()
  overload: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys*
  nameWithType.vb: IFileTransferFactory(Of T).Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).Keys
references:
- uid: Catalyst.Abstractions.FileTransfer
  commentId: N:Catalyst.Abstractions.FileTransfer
  name: Catalyst.Abstractions.FileTransfer
  nameWithType: Catalyst.Abstractions.FileTransfer
  fullName: Catalyst.Abstractions.FileTransfer
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.RegisterTransfer
  name: RegisterTransfer
  nameWithType: IFileTransferFactory<T>.RegisterTransfer
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.RegisterTransfer
  nameWithType.vb: IFileTransferFactory(Of T).RegisterTransfer
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).RegisterTransfer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Catalyst.Abstractions.Types.FileTransferResponseCodeTypes
  commentId: T:Catalyst.Abstractions.Types.FileTransferResponseCodeTypes
  parent: Catalyst.Abstractions.Types
  name: FileTransferResponseCodeTypes
  nameWithType: FileTransferResponseCodeTypes
  fullName: Catalyst.Abstractions.Types.FileTransferResponseCodeTypes
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Catalyst.Abstractions.Types
  commentId: N:Catalyst.Abstractions.Types
  name: Catalyst.Abstractions.Types
  nameWithType: Catalyst.Abstractions.Types
  fullName: Catalyst.Abstractions.Types
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.FileTransferAsync
  name: FileTransferAsync
  nameWithType: IFileTransferFactory<T>.FileTransferAsync
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.FileTransferAsync
  nameWithType.vb: IFileTransferFactory(Of T).FileTransferAsync
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).FileTransferAsync
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  name: ICorrelationId
  nameWithType: ICorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Catalyst.Abstractions.IO.Messaging.Correlation
  commentId: N:Catalyst.Abstractions.IO.Messaging.Correlation
  name: Catalyst.Abstractions.IO.Messaging.Correlation
  nameWithType: Catalyst.Abstractions.IO.Messaging.Correlation
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.GetFileTransferInformation
  name: GetFileTransferInformation
  nameWithType: IFileTransferFactory<T>.GetFileTransferInformation
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.GetFileTransferInformation
  nameWithType.vb: IFileTransferFactory(Of T).GetFileTransferInformation
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).GetFileTransferInformation
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Remove
  name: Remove
  nameWithType: IFileTransferFactory<T>.Remove
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.Remove
  nameWithType.vb: IFileTransferFactory(Of T).Remove
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).Remove
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IFileTransferFactory`1.Keys
  name: Keys
  nameWithType: IFileTransferFactory<T>.Keys
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferFactory<T>.Keys
  nameWithType.vb: IFileTransferFactory(Of T).Keys
  fullName.vb: Catalyst.Abstractions.FileTransfer.IFileTransferFactory(Of T).Keys
- uid: System.Guid[]
  isExternal: true
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
