### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Rpc.IRpcNodesSettings
  commentId: T:Catalyst.Abstractions.Rpc.IRpcNodesSettings
  id: IRpcNodesSettings
  parent: Catalyst.Abstractions.Rpc
  children:
  - Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
  langs:
  - csharp
  - vb
  name: IRpcNodesSettings
  nameWithType: IRpcNodesSettings
  fullName: Catalyst.Abstractions.Rpc.IRpcNodesSettings
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Rpc/IRpcNodesSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IRpcNodesSettings
    path: ../src/Catalyst.Abstractions/Rpc/IRpcNodesSettings.cs
    startLine: 27
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Rpc
  syntax:
    content: public interface IRpcNodesSettings
    content.vb: Public Interface IRpcNodesSettings
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
  commentId: P:Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
  id: NodesList
  parent: Catalyst.Abstractions.Rpc.IRpcNodesSettings
  langs:
  - csharp
  - vb
  name: NodesList
  nameWithType: IRpcNodesSettings.NodesList
  fullName: Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Rpc/IRpcNodesSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NodesList
    path: ../src/Catalyst.Abstractions/Rpc/IRpcNodesSettings.cs
    startLine: 29
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Rpc
  syntax:
    content: List<IRpcClientConfig> NodesList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Catalyst.Abstractions.Rpc.IRpcClientConfig}
    content.vb: ReadOnly Property NodesList As List(Of IRpcClientConfig)
  overload: Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Catalyst.Abstractions.Rpc
  commentId: N:Catalyst.Abstractions.Rpc
  name: Catalyst.Abstractions.Rpc
  nameWithType: Catalyst.Abstractions.Rpc
  fullName: Catalyst.Abstractions.Rpc
- uid: Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList*
  commentId: Overload:Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
  name: NodesList
  nameWithType: IRpcNodesSettings.NodesList
  fullName: Catalyst.Abstractions.Rpc.IRpcNodesSettings.NodesList
- uid: System.Collections.Generic.List{Catalyst.Abstractions.Rpc.IRpcClientConfig}
  commentId: T:System.Collections.Generic.List{Catalyst.Abstractions.Rpc.IRpcClientConfig}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRpcClientConfig>
  nameWithType: List<IRpcClientConfig>
  fullName: System.Collections.Generic.List<Catalyst.Abstractions.Rpc.IRpcClientConfig>
  nameWithType.vb: List(Of IRpcClientConfig)
  fullName.vb: System.Collections.Generic.List(Of Catalyst.Abstractions.Rpc.IRpcClientConfig)
  name.vb: List(Of IRpcClientConfig)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.Rpc.IRpcClientConfig
    name: IRpcClientConfig
    nameWithType: IRpcClientConfig
    fullName: Catalyst.Abstractions.Rpc.IRpcClientConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.Rpc.IRpcClientConfig
    name: IRpcClientConfig
    nameWithType: IRpcClientConfig
    fullName: Catalyst.Abstractions.Rpc.IRpcClientConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
