### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  commentId: T:Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  id: IUploadFileInformation
  parent: Catalyst.Abstractions.FileTransfer
  children:
  - Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry
  - Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto(System.UInt32)
  - Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
  langs:
  - csharp
  - vb
  name: IUploadFileInformation
  nameWithType: IUploadFileInformation
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IUploadFileInformation
    path: ../src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IUploadFileInformation : IFileTransferInformation, IDisposable'
    content.vb: >-
      Public Interface IUploadFileInformation

          Inherits IFileTransferInformation
  inheritedMembers:
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsCompleted
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.DfsHash
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.MaxChunk
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CorrelationId
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.TempPath
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.FileOutputPath
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientChannel
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientId
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.PeerId
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CancellationToken
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Initialised
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32,System.Boolean)
  - Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
  commentId: P:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
  id: RetryCount
  parent: Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: IUploadFileInformation.RetryCount
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RetryCount
    path: ../src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
    startLine: 35
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Gets or sets the retry count.
  example: []
  syntax:
    content: int RetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The retry count.
    content.vb: Property RetryCount As Integer
  overload: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount*
  modifiers.csharp:
  - get
  - set
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry
  commentId: M:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry
  id: CanRetry
  parent: Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  langs:
  - csharp
  - vb
  name: CanRetry()
  nameWithType: IUploadFileInformation.CanRetry()
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry()
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CanRetry
    path: ../src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
    startLine: 39
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Retries the upload.
  example: []
  syntax:
    content: bool CanRetry()
    return:
      type: System.Boolean
      description: ''
    content.vb: Function CanRetry As Boolean
  overload: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry*
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto(System.UInt32)
  commentId: M:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto(System.UInt32)
  id: GetUploadMessageDto(System.UInt32)
  parent: Catalyst.Abstractions.FileTransfer.IUploadFileInformation
  langs:
  - csharp
  - vb
  name: GetUploadMessageDto(UInt32)
  nameWithType: IUploadFileInformation.GetUploadMessageDto(UInt32)
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto(System.UInt32)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetUploadMessageDto
    path: ../src/Catalyst.Abstractions/FileTransfer/IUploadFileInformation.cs
    startLine: 44
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.FileTransfer
  summary: Gets the upload message.
  example: []
  syntax:
    content: IMessageDto<ProtocolMessage> GetUploadMessageDto(uint chunkId)
    parameters:
    - id: chunkId
      type: System.UInt32
      description: The chunk identifier.
    return:
      type: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{Catalyst.Protocol.Wire.ProtocolMessage}
      description: ''
    content.vb: Function GetUploadMessageDto(chunkId As UInteger) As IMessageDto(Of ProtocolMessage)
  overload: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto*
references:
- uid: Catalyst.Abstractions.FileTransfer
  commentId: N:Catalyst.Abstractions.FileTransfer
  name: Catalyst.Abstractions.FileTransfer
  nameWithType: Catalyst.Abstractions.FileTransfer
  fullName: Catalyst.Abstractions.FileTransfer
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: GetPercentage()
  nameWithType: IFileTransferInformation.GetPercentage()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
    name: GetPercentage
    nameWithType: IFileTransferInformation.GetPercentage
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
    name: GetPercentage
    nameWithType: IFileTransferInformation.GetPercentage
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.GetPercentage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: IsExpired()
  nameWithType: IFileTransferInformation.IsExpired()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
    name: IsExpired
    nameWithType: IFileTransferInformation.IsExpired
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
    name: IsExpired
    nameWithType: IFileTransferInformation.IsExpired
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsExpired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: ChunkIndicatorsTrue()
  nameWithType: IFileTransferInformation.ChunkIndicatorsTrue()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
    name: ChunkIndicatorsTrue
    nameWithType: IFileTransferInformation.ChunkIndicatorsTrue
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
    name: ChunkIndicatorsTrue
    nameWithType: IFileTransferInformation.ChunkIndicatorsTrue
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.ChunkIndicatorsTrue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: CleanUp()
  nameWithType: IFileTransferInformation.CleanUp()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
    name: CleanUp
    nameWithType: IFileTransferInformation.CleanUp
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
    name: CleanUp
    nameWithType: IFileTransferInformation.CleanUp
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CleanUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: Delete()
  nameWithType: IFileTransferInformation.Delete()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
    name: Delete
    nameWithType: IFileTransferInformation.Delete
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
    name: Delete
    nameWithType: IFileTransferInformation.Delete
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsCompleted
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsCompleted
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: IsCompleted
  nameWithType: IFileTransferInformation.IsCompleted
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.IsCompleted
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.DfsHash
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.DfsHash
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: DfsHash
  nameWithType: IFileTransferInformation.DfsHash
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.DfsHash
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.MaxChunk
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.MaxChunk
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: MaxChunk
  nameWithType: IFileTransferInformation.MaxChunk
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.MaxChunk
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CorrelationId
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CorrelationId
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: CorrelationId
  nameWithType: IFileTransferInformation.CorrelationId
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CorrelationId
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.TempPath
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.TempPath
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: TempPath
  nameWithType: IFileTransferInformation.TempPath
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.TempPath
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.FileOutputPath
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.FileOutputPath
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: FileOutputPath
  nameWithType: IFileTransferInformation.FileOutputPath
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.FileOutputPath
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientChannel
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientChannel
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: RecipientChannel
  nameWithType: IFileTransferInformation.RecipientChannel
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientChannel
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientId
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientId
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: RecipientId
  nameWithType: IFileTransferInformation.RecipientId
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.RecipientId
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.PeerId
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.PeerId
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: PeerId
  nameWithType: IFileTransferInformation.PeerId
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.PeerId
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CancellationToken
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CancellationToken
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: CancellationToken
  nameWithType: IFileTransferInformation.CancellationToken
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.CancellationToken
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Initialised
  commentId: P:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Initialised
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: Initialised
  nameWithType: IFileTransferInformation.Initialised
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Initialised
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32,System.Boolean)
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32,System.Boolean)
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  isExternal: true
  name: UpdateChunkIndicator(UInt32, Boolean)
  nameWithType: IFileTransferInformation.UpdateChunkIndicator(UInt32, Boolean)
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32, System.Boolean)
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32,System.Boolean)
    name: UpdateChunkIndicator
    nameWithType: IFileTransferInformation.UpdateChunkIndicator
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator(System.UInt32,System.Boolean)
    name: UpdateChunkIndicator
    nameWithType: IFileTransferInformation.UpdateChunkIndicator
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.UpdateChunkIndicator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
  commentId: M:Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
  parent: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  name: Expire()
  nameWithType: IFileTransferInformation.Expire()
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire()
  spec.csharp:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
    name: Expire
    nameWithType: IFileTransferInformation.Expire
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
    name: Expire
    nameWithType: IFileTransferInformation.Expire
    fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation.Expire
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  commentId: T:Catalyst.Abstractions.FileTransfer.IFileTransferInformation
  parent: Catalyst.Abstractions.FileTransfer
  name: IFileTransferInformation
  nameWithType: IFileTransferInformation
  fullName: Catalyst.Abstractions.FileTransfer.IFileTransferInformation
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
  name: RetryCount
  nameWithType: IUploadFileInformation.RetryCount
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.RetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry
  name: CanRetry
  nameWithType: IUploadFileInformation.CanRetry
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.CanRetry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto*
  commentId: Overload:Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto
  name: GetUploadMessageDto
  nameWithType: IUploadFileInformation.GetUploadMessageDto
  fullName: Catalyst.Abstractions.FileTransfer.IUploadFileInformation.GetUploadMessageDto
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{Catalyst.Protocol.Wire.ProtocolMessage}
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{Catalyst.Protocol.Wire.ProtocolMessage}
  parent: Catalyst.Abstractions.IO.Messaging.Dto
  definition: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  name: IMessageDto<ProtocolMessage>
  nameWithType: IMessageDto<ProtocolMessage>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<Catalyst.Protocol.Wire.ProtocolMessage>
  nameWithType.vb: IMessageDto(Of ProtocolMessage)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of Catalyst.Protocol.Wire.ProtocolMessage)
  name.vb: IMessageDto(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: Catalyst.Protocol.Wire.ProtocolMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  name: IMessageDto<T>
  nameWithType: IMessageDto<T>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>
  nameWithType.vb: IMessageDto(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T)
  name.vb: IMessageDto(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto
  commentId: N:Catalyst.Abstractions.IO.Messaging.Dto
  name: Catalyst.Abstractions.IO.Messaging.Dto
  nameWithType: Catalyst.Abstractions.IO.Messaging.Dto
  fullName: Catalyst.Abstractions.IO.Messaging.Dto
