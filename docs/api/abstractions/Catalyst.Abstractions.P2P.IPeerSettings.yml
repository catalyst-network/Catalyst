### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  id: IPeerSettings
  parent: Catalyst.Abstractions.P2P
  children:
  - Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  - Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  - Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  - Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  - Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  - Catalyst.Abstractions.P2P.IPeerSettings.Port
  - Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  - Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  - Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  langs:
  - csharp
  - vb
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IPeerSettings
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 30
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: public interface IPeerSettings
    content.vb: Public Interface IPeerSettings
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  id: PublicIpAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: PublicIpAddress
  nameWithType: IPeerSettings.PublicIpAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicIpAddress
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: IPAddress PublicIpAddress { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: ReadOnly Property PublicIpAddress As IPAddress
  overload: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.Port
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.Port
  id: Port
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: IPeerSettings.Port
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.Port
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Port
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 33
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Port As Integer
  overload: Catalyst.Abstractions.P2P.IPeerSettings.Port*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  id: PublicKey
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: IPeerSettings.PublicKey
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicKey
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: string PublicKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property PublicKey As String
  overload: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  id: PayoutAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: PayoutAddress
  nameWithType: IPeerSettings.PayoutAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PayoutAddress
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 35
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: string PayoutAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property PayoutAddress As String
  overload: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  id: BindAddress
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: BindAddress
  nameWithType: IPeerSettings.BindAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BindAddress
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 36
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: IPAddress BindAddress { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: ReadOnly Property BindAddress As IPAddress
  overload: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  id: SeedServers
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: SeedServers
  nameWithType: IPeerSettings.SeedServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SeedServers
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 37
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: IList<string> SeedServers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: ReadOnly Property SeedServers As IList(Of String)
  overload: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  id: NetworkType
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: IPeerSettings.NetworkType
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: NetworkType
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 38
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: NetworkType NetworkType { get; }
    parameters: []
    return:
      type: Catalyst.Protocol.Network.NetworkType
    content.vb: ReadOnly Property NetworkType As NetworkType
  overload: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  id: DnsServers
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: DnsServers
  nameWithType: IPeerSettings.DnsServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DnsServers
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 39
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: IPEndPoint[] DnsServers { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint[]
    content.vb: ReadOnly Property DnsServers As IPEndPoint()
  overload: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  commentId: P:Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  id: PeerId
  parent: Catalyst.Abstractions.P2P.IPeerSettings
  langs:
  - csharp
  - vb
  name: PeerId
  nameWithType: IPeerSettings.PeerId
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IPeerSettings.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerId
    path: ../src/Catalyst.Abstractions/P2P/IPeerSettings.cs
    startLine: 40
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P
  syntax:
    content: PeerId PeerId { get; }
    parameters: []
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: ReadOnly Property PeerId As PeerId
  overload: Catalyst.Abstractions.P2P.IPeerSettings.PeerId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
  name: PublicIpAddress
  nameWithType: IPeerSettings.PublicIpAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicIpAddress
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Catalyst.Abstractions.P2P.IPeerSettings.Port*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.Port
  name: Port
  nameWithType: IPeerSettings.Port
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
  name: PublicKey
  nameWithType: IPeerSettings.PublicKey
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PublicKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
  name: PayoutAddress
  nameWithType: IPeerSettings.PayoutAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PayoutAddress
- uid: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
  name: BindAddress
  nameWithType: IPeerSettings.BindAddress
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.BindAddress
- uid: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
  name: SeedServers
  nameWithType: IPeerSettings.SeedServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.SeedServers
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
  name: NetworkType
  nameWithType: IPeerSettings.NetworkType
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.NetworkType
- uid: Catalyst.Protocol.Network.NetworkType
  commentId: T:Catalyst.Protocol.Network.NetworkType
  parent: Catalyst.Protocol.Network
  name: NetworkType
  nameWithType: NetworkType
  fullName: Catalyst.Protocol.Network.NetworkType
- uid: Catalyst.Protocol.Network
  commentId: N:Catalyst.Protocol.Network
  name: Catalyst.Protocol.Network
  nameWithType: Catalyst.Protocol.Network
  fullName: Catalyst.Protocol.Network
- uid: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
  name: DnsServers
  nameWithType: IPeerSettings.DnsServers
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.DnsServers
- uid: System.Net.IPEndPoint[]
  isExternal: true
  name: IPEndPoint[]
  nameWithType: IPEndPoint[]
  fullName: System.Net.IPEndPoint[]
  nameWithType.vb: IPEndPoint()
  fullName.vb: System.Net.IPEndPoint()
  name.vb: IPEndPoint()
  spec.csharp:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    nameWithType: IPEndPoint
    fullName: System.Net.IPEndPoint
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Catalyst.Abstractions.P2P.IPeerSettings.PeerId*
  commentId: Overload:Catalyst.Abstractions.P2P.IPeerSettings.PeerId
  name: PeerId
  nameWithType: IPeerSettings.PeerId
  fullName: Catalyst.Abstractions.P2P.IPeerSettings.PeerId
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
