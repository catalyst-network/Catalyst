### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  commentId: T:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  id: IBroadcastManager
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  children:
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  - Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  langs:
  - csharp
  - vb
  name: IBroadcastManager
  nameWithType: IBroadcastManager
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IBroadcastManager
    path: ../src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
    startLine: 30
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  syntax:
    content: public interface IBroadcastManager
    content.vb: Public Interface IBroadcastManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  id: BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  langs:
  - csharp
  - vb
  name: BroadcastAsync(ProtocolMessage)
  nameWithType: IBroadcastManager.BroadcastAsync(ProtocolMessage)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BroadcastAsync
    path: ../src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  summary: Broadcasts a message.
  example: []
  syntax:
    content: Task BroadcastAsync(ProtocolMessage protocolMessage)
    parameters:
    - id: protocolMessage
      type: Catalyst.Protocol.Wire.ProtocolMessage
      description: Any signed message.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function BroadcastAsync(protocolMessage As ProtocolMessage) As Task
  overload: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync*
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  id: ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  langs:
  - csharp
  - vb
  name: ReceiveAsync(ProtocolMessage)
  nameWithType: IBroadcastManager.ReceiveAsync(ProtocolMessage)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync(Catalyst.Protocol.Wire.ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ReceiveAsync
    path: ../src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
    startLine: 38
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  summary: Handles Incoming gossip.
  example: []
  syntax:
    content: Task ReceiveAsync(ProtocolMessage anySigned)
    parameters:
    - id: anySigned
      type: Catalyst.Protocol.Wire.ProtocolMessage
      description: Any signed message.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ReceiveAsync(anySigned As ProtocolMessage) As Task
  overload: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync*
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  commentId: M:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  id: RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  langs:
  - csharp
  - vb
  name: RemoveSignedBroadcastMessageData(ICorrelationId)
  nameWithType: IBroadcastManager.RemoveSignedBroadcastMessageData(ICorrelationId)
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData(Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RemoveSignedBroadcastMessageData
    path: ../src/Catalyst.Abstractions/P2P/IO/Messaging/Broadcast/IBroadcastManager.cs
    startLine: 45
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  summary: "\nRemoves the temporary original signed broadcast message data once <xref href=\"Catalyst.Abstractions.IO.Observers.IBroadcastObserver\" data-throw-if-not-resolved=\"false\"></xref>\nHandleBroadcast has been called.\n"
  example: []
  syntax:
    content: void RemoveSignedBroadcastMessageData(ICorrelationId correlationId)
    parameters:
    - id: correlationId
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
      description: The correlation identifier.
    content.vb: Sub RemoveSignedBroadcastMessageData(correlationId As ICorrelationId)
  overload: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData*
references:
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  commentId: N:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  nameWithType: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync*
  commentId: Overload:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync
  name: BroadcastAsync
  nameWithType: IBroadcastManager.BroadcastAsync
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.BroadcastAsync
- uid: Catalyst.Protocol.Wire.ProtocolMessage
  commentId: T:Catalyst.Protocol.Wire.ProtocolMessage
  parent: Catalyst.Protocol.Wire
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: Catalyst.Protocol.Wire.ProtocolMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync*
  commentId: Overload:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync
  name: ReceiveAsync
  nameWithType: IBroadcastManager.ReceiveAsync
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.ReceiveAsync
- uid: Catalyst.Abstractions.IO.Observers.IBroadcastObserver
  commentId: T:Catalyst.Abstractions.IO.Observers.IBroadcastObserver
  name: IBroadcastObserver
  nameWithType: IBroadcastObserver
  fullName: Catalyst.Abstractions.IO.Observers.IBroadcastObserver
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData*
  commentId: Overload:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData
  name: RemoveSignedBroadcastMessageData
  nameWithType: IBroadcastManager.RemoveSignedBroadcastMessageData
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager.RemoveSignedBroadcastMessageData
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  name: ICorrelationId
  nameWithType: ICorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Correlation
  commentId: N:Catalyst.Abstractions.IO.Messaging.Correlation
  name: Catalyst.Abstractions.IO.Messaging.Correlation
  nameWithType: Catalyst.Abstractions.IO.Messaging.Correlation
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation
