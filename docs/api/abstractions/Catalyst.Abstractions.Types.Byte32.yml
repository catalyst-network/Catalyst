### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Types.Byte32
  commentId: T:Catalyst.Abstractions.Types.Byte32
  id: Byte32
  parent: Catalyst.Abstractions.Types
  children:
  - Catalyst.Abstractions.Types.Byte32.#ctor
  - Catalyst.Abstractions.Types.Byte32.#ctor(System.Byte[])
  - Catalyst.Abstractions.Types.Byte32.Size
  langs:
  - csharp
  - vb
  name: Byte32
  nameWithType: Byte32
  fullName: Catalyst.Abstractions.Types.Byte32
  type: Class
  source:
    remote:
      path: src/Catalyst.Abstractions/Types/Byte32.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Byte32
    path: ../src/Catalyst.Abstractions/Types/Byte32.cs
    startLine: 25
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Types
  syntax:
    content: 'public class Byte32 : FixedSizeBytes<Byte32>'
    content.vb: >-
      Public Class Byte32

          Inherits FixedSizeBytes(Of Byte32)
  inheritance:
  - System.Object
  - Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  inheritedMembers:
  - Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RawBytes
  - Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RandomBytes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Abstractions.Types.Byte32.Size
  commentId: P:Catalyst.Abstractions.Types.Byte32.Size
  id: Size
  parent: Catalyst.Abstractions.Types.Byte32
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Byte32.Size
  fullName: Catalyst.Abstractions.Types.Byte32.Size
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Types/Byte32.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Size
    path: ../src/Catalyst.Abstractions/Types/Byte32.cs
    startLine: 27
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Types
  syntax:
    content: protected override sealed int Size { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected NotOverridable Overrides ReadOnly Property Size As Integer
  overridden: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.Size
  overload: Catalyst.Abstractions.Types.Byte32.Size*
  modifiers.csharp:
  - protected
  - override
  - sealed
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
  - ReadOnly
- uid: Catalyst.Abstractions.Types.Byte32.#ctor
  commentId: M:Catalyst.Abstractions.Types.Byte32.#ctor
  id: '#ctor'
  parent: Catalyst.Abstractions.Types.Byte32
  langs:
  - csharp
  - vb
  name: Byte32()
  nameWithType: Byte32.Byte32()
  fullName: Catalyst.Abstractions.Types.Byte32.Byte32()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Abstractions/Types/Byte32.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Abstractions/Types/Byte32.cs
    startLine: 29
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Types
  syntax:
    content: public Byte32()
    content.vb: Public Sub New
  overload: Catalyst.Abstractions.Types.Byte32.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Abstractions.Types.Byte32.#ctor(System.Byte[])
  commentId: M:Catalyst.Abstractions.Types.Byte32.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Catalyst.Abstractions.Types.Byte32
  langs:
  - csharp
  - vb
  name: Byte32(Byte[])
  nameWithType: Byte32.Byte32(Byte[])
  fullName: Catalyst.Abstractions.Types.Byte32.Byte32(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Abstractions/Types/Byte32.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Abstractions/Types/Byte32.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Types
  syntax:
    content: public Byte32(byte[] rawBytes)
    parameters:
    - id: rawBytes
      type: System.Byte[]
    content.vb: Public Sub New(rawBytes As Byte())
  overload: Catalyst.Abstractions.Types.Byte32.#ctor*
  nameWithType.vb: Byte32.Byte32(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Abstractions.Types.Byte32.Byte32(System.Byte())
  name.vb: Byte32(Byte())
references:
- uid: Catalyst.Abstractions.Types
  commentId: N:Catalyst.Abstractions.Types
  name: Catalyst.Abstractions.Types
  nameWithType: Catalyst.Abstractions.Types
  fullName: Catalyst.Abstractions.Types
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  commentId: T:Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  parent: Catalyst.Abstractions.Types
  definition: Catalyst.Abstractions.Types.FixedSizeBytes`1
  name: FixedSizeBytes<Byte32>
  nameWithType: FixedSizeBytes<Byte32>
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<Catalyst.Abstractions.Types.Byte32>
  nameWithType.vb: FixedSizeBytes(Of Byte32)
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of Catalyst.Abstractions.Types.Byte32)
  name.vb: FixedSizeBytes(Of Byte32)
  spec.csharp:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1
    name: FixedSizeBytes
    nameWithType: FixedSizeBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.Types.Byte32
    name: Byte32
    nameWithType: Byte32
    fullName: Catalyst.Abstractions.Types.Byte32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1
    name: FixedSizeBytes
    nameWithType: FixedSizeBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.Types.Byte32
    name: Byte32
    nameWithType: Byte32
    fullName: Catalyst.Abstractions.Types.Byte32
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RawBytes
  commentId: P:Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RawBytes
  parent: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  definition: Catalyst.Abstractions.Types.FixedSizeBytes`1.RawBytes
  name: RawBytes
  nameWithType: FixedSizeBytes<Byte32>.RawBytes
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<Catalyst.Abstractions.Types.Byte32>.RawBytes
  nameWithType.vb: FixedSizeBytes(Of Byte32).RawBytes
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of Catalyst.Abstractions.Types.Byte32).RawBytes
- uid: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RandomBytes
  commentId: M:Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.RandomBytes
  parent: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  definition: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
  name: RandomBytes()
  nameWithType: FixedSizeBytes<Byte32>.RandomBytes()
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<Catalyst.Abstractions.Types.Byte32>.RandomBytes()
  nameWithType.vb: FixedSizeBytes(Of Byte32).RandomBytes()
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of Catalyst.Abstractions.Types.Byte32).RandomBytes()
  spec.csharp:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
    name: RandomBytes
    nameWithType: FixedSizeBytes<Byte32>.RandomBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes<Catalyst.Abstractions.Types.Byte32>.RandomBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
    name: RandomBytes
    nameWithType: FixedSizeBytes(Of Byte32).RandomBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes(Of Catalyst.Abstractions.Types.Byte32).RandomBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Types.FixedSizeBytes`1
  commentId: T:Catalyst.Abstractions.Types.FixedSizeBytes`1
  name: FixedSizeBytes<T>
  nameWithType: FixedSizeBytes<T>
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<T>
  nameWithType.vb: FixedSizeBytes(Of T)
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of T)
  name.vb: FixedSizeBytes(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1
    name: FixedSizeBytes
    nameWithType: FixedSizeBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1
    name: FixedSizeBytes
    nameWithType: FixedSizeBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RawBytes
  commentId: P:Catalyst.Abstractions.Types.FixedSizeBytes`1.RawBytes
  name: RawBytes
  nameWithType: FixedSizeBytes<T>.RawBytes
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<T>.RawBytes
  nameWithType.vb: FixedSizeBytes(Of T).RawBytes
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of T).RawBytes
- uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
  commentId: M:Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
  name: RandomBytes()
  nameWithType: FixedSizeBytes<T>.RandomBytes()
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<T>.RandomBytes()
  nameWithType.vb: FixedSizeBytes(Of T).RandomBytes()
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of T).RandomBytes()
  spec.csharp:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
    name: RandomBytes
    nameWithType: FixedSizeBytes<T>.RandomBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes<T>.RandomBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.RandomBytes
    name: RandomBytes
    nameWithType: FixedSizeBytes(Of T).RandomBytes
    fullName: Catalyst.Abstractions.Types.FixedSizeBytes(Of T).RandomBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.Size
  commentId: P:Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}.Size
  parent: Catalyst.Abstractions.Types.FixedSizeBytes{Catalyst.Abstractions.Types.Byte32}
  definition: Catalyst.Abstractions.Types.FixedSizeBytes`1.Size
  name: Size
  nameWithType: FixedSizeBytes<Byte32>.Size
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<Catalyst.Abstractions.Types.Byte32>.Size
  nameWithType.vb: FixedSizeBytes(Of Byte32).Size
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of Catalyst.Abstractions.Types.Byte32).Size
- uid: Catalyst.Abstractions.Types.Byte32.Size*
  commentId: Overload:Catalyst.Abstractions.Types.Byte32.Size
  name: Size
  nameWithType: Byte32.Size
  fullName: Catalyst.Abstractions.Types.Byte32.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Abstractions.Types.FixedSizeBytes`1.Size
  commentId: P:Catalyst.Abstractions.Types.FixedSizeBytes`1.Size
  name: Size
  nameWithType: FixedSizeBytes<T>.Size
  fullName: Catalyst.Abstractions.Types.FixedSizeBytes<T>.Size
  nameWithType.vb: FixedSizeBytes(Of T).Size
  fullName.vb: Catalyst.Abstractions.Types.FixedSizeBytes(Of T).Size
- uid: Catalyst.Abstractions.Types.Byte32.#ctor*
  commentId: Overload:Catalyst.Abstractions.Types.Byte32.#ctor
  name: Byte32
  nameWithType: Byte32.Byte32
  fullName: Catalyst.Abstractions.Types.Byte32.Byte32
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
