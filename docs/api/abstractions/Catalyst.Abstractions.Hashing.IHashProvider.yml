### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Hashing.IHashProvider
  commentId: T:Catalyst.Abstractions.Hashing.IHashProvider
  id: IHashProvider
  parent: Catalyst.Abstractions.Hashing
  children:
  - Catalyst.Abstractions.Hashing.IHashProvider.Cast(System.Byte[])
  - Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Byte[])
  - Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Collections.Generic.IEnumerable{System.Byte})
  - Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.IO.Stream)
  - Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash(System.String)
  - Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
  - Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash(System.Byte[])
  langs:
  - csharp
  - vb
  name: IHashProvider
  nameWithType: IHashProvider
  fullName: Catalyst.Abstractions.Hashing.IHashProvider
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IHashProvider
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 29
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: public interface IHashProvider
    content.vb: Public Interface IHashProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
  commentId: P:Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
  id: HashingAlgorithm
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: HashingAlgorithm
  nameWithType: IHashProvider.HashingAlgorithm
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
  type: Property
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: HashingAlgorithm
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 31
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: HashingAlgorithm HashingAlgorithm { get; set; }
    parameters: []
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.HashingAlgorithm
    content.vb: Property HashingAlgorithm As HashingAlgorithm
  overload: Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm*
  modifiers.csharp:
  - get
  - set
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash(System.String)
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash(System.String)
  id: ComputeUtf8MultiHash(System.String)
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: ComputeUtf8MultiHash(String)
  nameWithType: IHashProvider.ComputeUtf8MultiHash(String)
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash(System.String)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ComputeUtf8MultiHash
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 32
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: MultiHash ComputeUtf8MultiHash(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Function ComputeUtf8MultiHash(data As String) As MultiHash
  overload: Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash*
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.IO.Stream)
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.IO.Stream)
  id: ComputeMultiHash(System.IO.Stream)
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: ComputeMultiHash(Stream)
  nameWithType: IHashProvider.ComputeMultiHash(Stream)
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ComputeMultiHash
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 33
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: MultiHash ComputeMultiHash(Stream data)
    parameters:
    - id: data
      type: System.IO.Stream
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Function ComputeMultiHash(data As Stream) As MultiHash
  overload: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash*
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Byte[])
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Byte[])
  id: ComputeMultiHash(System.Byte[])
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: ComputeMultiHash(Byte[])
  nameWithType: IHashProvider.ComputeMultiHash(Byte[])
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ComputeMultiHash
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 34
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: MultiHash ComputeMultiHash(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Function ComputeMultiHash(data As Byte()) As MultiHash
  overload: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash*
  nameWithType.vb: IHashProvider.ComputeMultiHash(Byte())
  fullName.vb: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Byte())
  name.vb: ComputeMultiHash(Byte())
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Collections.Generic.IEnumerable{System.Byte})
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Collections.Generic.IEnumerable{System.Byte})
  id: ComputeMultiHash(System.Collections.Generic.IEnumerable{System.Byte})
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: ComputeMultiHash(IEnumerable<Byte>)
  nameWithType: IHashProvider.ComputeMultiHash(IEnumerable<Byte>)
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Collections.Generic.IEnumerable<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ComputeMultiHash
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 35
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: MultiHash ComputeMultiHash(IEnumerable<byte> content)
    parameters:
    - id: content
      type: System.Collections.Generic.IEnumerable{System.Byte}
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Function ComputeMultiHash(content As IEnumerable(Of Byte)) As MultiHash
  overload: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash*
  nameWithType.vb: IHashProvider.ComputeMultiHash(IEnumerable(Of Byte))
  fullName.vb: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash(System.Collections.Generic.IEnumerable(Of System.Byte))
  name.vb: ComputeMultiHash(IEnumerable(Of Byte))
- uid: Catalyst.Abstractions.Hashing.IHashProvider.Cast(System.Byte[])
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.Cast(System.Byte[])
  id: Cast(System.Byte[])
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: Cast(Byte[])
  nameWithType: IHashProvider.Cast(Byte[])
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.Cast(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Cast
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 36
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: MultiHash Cast(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Function Cast(data As Byte()) As MultiHash
  overload: Catalyst.Abstractions.Hashing.IHashProvider.Cast*
  nameWithType.vb: IHashProvider.Cast(Byte())
  fullName.vb: Catalyst.Abstractions.Hashing.IHashProvider.Cast(System.Byte())
  name.vb: Cast(Byte())
- uid: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash(System.Byte[])
  commentId: M:Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash(System.Byte[])
  id: IsValidHash(System.Byte[])
  parent: Catalyst.Abstractions.Hashing.IHashProvider
  langs:
  - csharp
  - vb
  name: IsValidHash(Byte[])
  nameWithType: IHashProvider.IsValidHash(Byte[])
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Hashing/IHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IsValidHash
    path: ../src/Catalyst.Abstractions/Hashing/IHashProvider.cs
    startLine: 37
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Hashing
  syntax:
    content: bool IsValidHash(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Function IsValidHash(data As Byte()) As Boolean
  overload: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash*
  nameWithType.vb: IHashProvider.IsValidHash(Byte())
  fullName.vb: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash(System.Byte())
  name.vb: IsValidHash(Byte())
references:
- uid: Catalyst.Abstractions.Hashing
  commentId: N:Catalyst.Abstractions.Hashing
  name: Catalyst.Abstractions.Hashing
  nameWithType: Catalyst.Abstractions.Hashing
  fullName: Catalyst.Abstractions.Hashing
- uid: Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm*
  commentId: Overload:Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
  name: HashingAlgorithm
  nameWithType: IHashProvider.HashingAlgorithm
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.HashingAlgorithm
- uid: TheDotNetLeague.MultiFormats.MultiHash.HashingAlgorithm
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.HashingAlgorithm
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: HashingAlgorithm
  nameWithType: HashingAlgorithm
  fullName: TheDotNetLeague.MultiFormats.MultiHash.HashingAlgorithm
- uid: TheDotNetLeague.MultiFormats.MultiHash
  commentId: N:TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: TheDotNetLeague.MultiFormats.MultiHash
  nameWithType: TheDotNetLeague.MultiFormats.MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash*
  commentId: Overload:Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash
  name: ComputeUtf8MultiHash
  nameWithType: IHashProvider.ComputeUtf8MultiHash
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeUtf8MultiHash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: MultiHash
  nameWithType: MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash*
  commentId: Overload:Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash
  name: ComputeMultiHash
  nameWithType: IHashProvider.ComputeMultiHash
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.ComputeMultiHash
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Abstractions.Hashing.IHashProvider.Cast*
  commentId: Overload:Catalyst.Abstractions.Hashing.IHashProvider.Cast
  name: Cast
  nameWithType: IHashProvider.Cast
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.Cast
- uid: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash*
  commentId: Overload:Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash
  name: IsValidHash
  nameWithType: IHashProvider.IsValidHash
  fullName: Catalyst.Abstractions.Hashing.IHashProvider.IsValidHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
