### YamlMime:ManagedReference
items:
- uid: Catalyst.Abstractions.Cli.ICatalystCli
  commentId: T:Catalyst.Abstractions.Cli.ICatalystCli
  id: ICatalystCli
  parent: Catalyst.Abstractions.Cli
  children:
  - Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand(System.String[])
  - Catalyst.Abstractions.Cli.ICatalystCli.RunConsole(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICatalystCli
  nameWithType: ICatalystCli
  fullName: Catalyst.Abstractions.Cli.ICatalystCli
  type: Interface
  source:
    remote:
      path: src/Catalyst.Abstractions/Cli/ICatalystCli.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ICatalystCli
    path: ../src/Catalyst.Abstractions/Cli/ICatalystCli.cs
    startLine: 27
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cli
  syntax:
    content: public interface ICatalystCli
    content.vb: Public Interface ICatalystCli
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Abstractions.Cli.ICatalystCli.RunConsole(System.Threading.CancellationToken)
  commentId: M:Catalyst.Abstractions.Cli.ICatalystCli.RunConsole(System.Threading.CancellationToken)
  id: RunConsole(System.Threading.CancellationToken)
  parent: Catalyst.Abstractions.Cli.ICatalystCli
  langs:
  - csharp
  - vb
  name: RunConsole(CancellationToken)
  nameWithType: ICatalystCli.RunConsole(CancellationToken)
  fullName: Catalyst.Abstractions.Cli.ICatalystCli.RunConsole(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cli/ICatalystCli.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RunConsole
    path: ../src/Catalyst.Abstractions/Cli/ICatalystCli.cs
    startLine: 33
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cli
  summary: "\nRuns the main cli ui.\n"
  example: []
  syntax:
    content: bool RunConsole(CancellationToken ct)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Boolean
      description: ''
    content.vb: Function RunConsole(ct As CancellationToken) As Boolean
  overload: Catalyst.Abstractions.Cli.ICatalystCli.RunConsole*
- uid: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand(System.String[])
  commentId: M:Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand(System.String[])
  id: ParseCommand(System.String[])
  parent: Catalyst.Abstractions.Cli.ICatalystCli
  langs:
  - csharp
  - vb
  name: ParseCommand(String[])
  nameWithType: ICatalystCli.ParseCommand(String[])
  fullName: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand(System.String[])
  type: Method
  source:
    remote:
      path: src/Catalyst.Abstractions/Cli/ICatalystCli.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ParseCommand
    path: ../src/Catalyst.Abstractions/Cli/ICatalystCli.cs
    startLine: 40
  assemblies:
  - Catalyst.Abstractions
  namespace: Catalyst.Abstractions.Cli
  summary: "\nParses the Options object sent and calls the correct message to handle the option a defined in the MapResult\n"
  example: []
  syntax:
    content: bool ParseCommand(params string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: string array including the parameters passed through the command line
    return:
      type: System.Boolean
      description: Returns true if a method to handle the options is found otherwise returns false
    content.vb: Function ParseCommand(ParamArray args As String()) As Boolean
  overload: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand*
  nameWithType.vb: ICatalystCli.ParseCommand(String())
  fullName.vb: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand(System.String())
  name.vb: ParseCommand(String())
references:
- uid: Catalyst.Abstractions.Cli
  commentId: N:Catalyst.Abstractions.Cli
  name: Catalyst.Abstractions.Cli
  nameWithType: Catalyst.Abstractions.Cli
  fullName: Catalyst.Abstractions.Cli
- uid: Catalyst.Abstractions.Cli.ICatalystCli.RunConsole*
  commentId: Overload:Catalyst.Abstractions.Cli.ICatalystCli.RunConsole
  name: RunConsole
  nameWithType: ICatalystCli.RunConsole
  fullName: Catalyst.Abstractions.Cli.ICatalystCli.RunConsole
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand*
  commentId: Overload:Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand
  name: ParseCommand
  nameWithType: ICatalystCli.ParseCommand
  fullName: Catalyst.Abstractions.Cli.ICatalystCli.ParseCommand
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
