### YamlMime:ManagedReference
items:
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  id: PeerId
  parent: Catalyst.Protocol.Peer
  children:
  - Catalyst.Protocol.Peer.PeerId.#ctor
  - Catalyst.Protocol.Peer.PeerId.#ctor(Catalyst.Protocol.Peer.PeerId)
  - Catalyst.Protocol.Peer.PeerId.CalculateSize
  - Catalyst.Protocol.Peer.PeerId.Clone
  - Catalyst.Protocol.Peer.PeerId.Descriptor
  - Catalyst.Protocol.Peer.PeerId.Equals(Catalyst.Protocol.Peer.PeerId)
  - Catalyst.Protocol.Peer.PeerId.Equals(System.Object)
  - Catalyst.Protocol.Peer.PeerId.GetHashCode
  - Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor
  - Catalyst.Protocol.Peer.PeerId.Ip
  - Catalyst.Protocol.Peer.PeerId.IpAddress
  - Catalyst.Protocol.Peer.PeerId.IpEndPoint
  - Catalyst.Protocol.Peer.PeerId.IpFieldNumber
  - Catalyst.Protocol.Peer.PeerId.IsValid
  - Catalyst.Protocol.Peer.PeerId.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  - Catalyst.Protocol.Peer.PeerId.MergeFrom(Google.Protobuf.CodedInputStream)
  - Catalyst.Protocol.Peer.PeerId.Parser
  - Catalyst.Protocol.Peer.PeerId.Port
  - Catalyst.Protocol.Peer.PeerId.PortFieldNumber
  - Catalyst.Protocol.Peer.PeerId.PublicKey
  - Catalyst.Protocol.Peer.PeerId.PublicKeyFieldNumber
  - Catalyst.Protocol.Peer.PeerId.ToString
  - Catalyst.Protocol.Peer.PeerId.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
  type: Class
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PeerId
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 53
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: "\n*\nAggregated size of the fields in PeerId should be 42 bytes as specified in\nhttps://github.com/catalyst-network/protocol-blueprint/blob/master/PeerProtocol.md\n"
  example: []
  syntax:
    content: 'public sealed class PeerId : IMessage<PeerId>, IMessage, IEquatable<PeerId>, IDeepCloneable<PeerId>'
    content.vb: >-
      Public NotInheritable Class PeerId

          Implements IMessage(Of PeerId), IMessage, IEquatable(Of PeerId), IDeepCloneable(Of PeerId)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}
  - Google.Protobuf.IMessage
  - System.IEquatable{Catalyst.Protocol.Peer.PeerId}
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Protocol.Peer.PeerId.IpAddress
  commentId: P:Catalyst.Protocol.Peer.PeerId.IpAddress
  id: IpAddress
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: PeerId.IpAddress
  fullName: Catalyst.Protocol.Peer.PeerId.IpAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/Peer/PeerId.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IpAddress
    path: ../src/Catalyst.Protocol/Peer/PeerId.cs
    startLine: 35
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public IPAddress IpAddress { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
    content.vb: Public ReadOnly Property IpAddress As IPAddress
  overload: Catalyst.Protocol.Peer.PeerId.IpAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Peer.PeerId.IpEndPoint
  commentId: P:Catalyst.Protocol.Peer.PeerId.IpEndPoint
  id: IpEndPoint
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: IpEndPoint
  nameWithType: PeerId.IpEndPoint
  fullName: Catalyst.Protocol.Peer.PeerId.IpEndPoint
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/Peer/PeerId.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IpEndPoint
    path: ../src/Catalyst.Protocol/Peer/PeerId.cs
    startLine: 36
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public IPEndPoint IpEndPoint { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly Property IpEndPoint As IPEndPoint
  overload: Catalyst.Protocol.Peer.PeerId.IpEndPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Peer.PeerId.IsValid
  commentId: M:Catalyst.Protocol.Peer.PeerId.IsValid
  id: IsValid
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: PeerId.IsValid()
  fullName: Catalyst.Protocol.Peer.PeerId.IsValid()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/Peer/PeerId.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IsValid
    path: ../src/Catalyst.Protocol/Peer/PeerId.cs
    startLine: 47
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid As Boolean
  overload: Catalyst.Protocol.Peer.PeerId.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.Parser
  commentId: P:Catalyst.Protocol.Peer.PeerId.Parser
  id: Parser
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: PeerId.Parser
  fullName: Catalyst.Protocol.Peer.PeerId.Parser
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Parser
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 56
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public static MessageParser<PeerId> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Catalyst.Protocol.Peer.PeerId}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of PeerId)
  overload: Catalyst.Protocol.Peer.PeerId.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.Peer.PeerId.Descriptor
  commentId: P:Catalyst.Protocol.Peer.PeerId.Descriptor
  id: Descriptor
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: PeerId.Descriptor
  fullName: Catalyst.Protocol.Peer.PeerId.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 59
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Catalyst.Protocol.Peer.PeerId.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor
  commentId: P:Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: PeerId.IMessage.Descriptor
  fullName: Catalyst.Protocol.Peer.PeerId.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 64
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: PeerId.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Catalyst.Protocol.Peer.PeerId.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.Peer.PeerId.#ctor
  commentId: M:Catalyst.Protocol.Peer.PeerId.#ctor
  id: '#ctor'
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: PeerId()
  nameWithType: PeerId.PeerId()
  fullName: Catalyst.Protocol.Peer.PeerId.PeerId()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 69
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public PeerId()
    content.vb: Public Sub New
  overload: Catalyst.Protocol.Peer.PeerId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.#ctor(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Catalyst.Protocol.Peer.PeerId.#ctor(Catalyst.Protocol.Peer.PeerId)
  id: '#ctor(Catalyst.Protocol.Peer.PeerId)'
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: PeerId(PeerId)
  nameWithType: PeerId.PeerId(PeerId)
  fullName: Catalyst.Protocol.Peer.PeerId.PeerId(Catalyst.Protocol.Peer.PeerId)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 76
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public PeerId(PeerId other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: Public Sub New(other As PeerId)
  overload: Catalyst.Protocol.Peer.PeerId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.Clone
  commentId: M:Catalyst.Protocol.Peer.PeerId.Clone
  id: Clone
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PeerId.Clone()
  fullName: Catalyst.Protocol.Peer.PeerId.Clone()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Clone
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 84
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public PeerId Clone()
    return:
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: Public Function Clone As PeerId
  overload: Catalyst.Protocol.Peer.PeerId.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.IpFieldNumber
  commentId: F:Catalyst.Protocol.Peer.PeerId.IpFieldNumber
  id: IpFieldNumber
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: IpFieldNumber
  nameWithType: PeerId.IpFieldNumber
  fullName: Catalyst.Protocol.Peer.PeerId.IpFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IpFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 90
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: Field number for the &quot;ip&quot; field.
  example: []
  syntax:
    content: public const int IpFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const IpFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Peer.PeerId.Ip
  commentId: P:Catalyst.Protocol.Peer.PeerId.Ip
  id: Ip
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Ip
  nameWithType: PeerId.Ip
  fullName: Catalyst.Protocol.Peer.PeerId.Ip
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Ip
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 95
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: "\n16 bytes\n"
  example: []
  syntax:
    content: public ByteString Ip { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property Ip As ByteString
  overload: Catalyst.Protocol.Peer.PeerId.Ip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.PortFieldNumber
  commentId: F:Catalyst.Protocol.Peer.PeerId.PortFieldNumber
  id: PortFieldNumber
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: PortFieldNumber
  nameWithType: PeerId.PortFieldNumber
  fullName: Catalyst.Protocol.Peer.PeerId.PortFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PortFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 104
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: Field number for the &quot;port&quot; field.
  example: []
  syntax:
    content: public const int PortFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const PortFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Peer.PeerId.Port
  commentId: P:Catalyst.Protocol.Peer.PeerId.Port
  id: Port
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: PeerId.Port
  fullName: Catalyst.Protocol.Peer.PeerId.Port
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Port
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 109
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: "\n2 bytes\n"
  example: []
  syntax:
    content: public uint Port { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Port As UInteger
  overload: Catalyst.Protocol.Peer.PeerId.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.PublicKeyFieldNumber
  commentId: F:Catalyst.Protocol.Peer.PeerId.PublicKeyFieldNumber
  id: PublicKeyFieldNumber
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: PublicKeyFieldNumber
  nameWithType: PeerId.PublicKeyFieldNumber
  fullName: Catalyst.Protocol.Peer.PeerId.PublicKeyFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicKeyFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 118
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: Field number for the &quot;public_key&quot; field.
  example: []
  syntax:
    content: public const int PublicKeyFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const PublicKeyFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Peer.PeerId.PublicKey
  commentId: P:Catalyst.Protocol.Peer.PeerId.PublicKey
  id: PublicKey
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: PeerId.PublicKey
  fullName: Catalyst.Protocol.Peer.PeerId.PublicKey
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicKey
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 123
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  summary: "\nPeers public key, node operators are encouraged to use the same, public key across all their nodes.\n"
  example: []
  syntax:
    content: public ByteString PublicKey { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property PublicKey As ByteString
  overload: Catalyst.Protocol.Peer.PeerId.PublicKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.Equals(System.Object)
  commentId: M:Catalyst.Protocol.Peer.PeerId.Equals(System.Object)
  id: Equals(System.Object)
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PeerId.Equals(Object)
  fullName: Catalyst.Protocol.Peer.PeerId.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 131
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Catalyst.Protocol.Peer.PeerId.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Peer.PeerId.Equals(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Catalyst.Protocol.Peer.PeerId.Equals(Catalyst.Protocol.Peer.PeerId)
  id: Equals(Catalyst.Protocol.Peer.PeerId)
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: Equals(PeerId)
  nameWithType: PeerId.Equals(PeerId)
  fullName: Catalyst.Protocol.Peer.PeerId.Equals(Catalyst.Protocol.Peer.PeerId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 136
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public bool Equals(PeerId other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Peer.PeerId
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As PeerId) As Boolean
  overload: Catalyst.Protocol.Peer.PeerId.Equals*
  implements:
  - System.IEquatable{Catalyst.Protocol.Peer.PeerId}.Equals(Catalyst.Protocol.Peer.PeerId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.GetHashCode
  commentId: M:Catalyst.Protocol.Peer.PeerId.GetHashCode
  id: GetHashCode
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PeerId.GetHashCode()
  fullName: Catalyst.Protocol.Peer.PeerId.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetHashCode
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 150
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Catalyst.Protocol.Peer.PeerId.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Peer.PeerId.ToString
  commentId: M:Catalyst.Protocol.Peer.PeerId.ToString
  id: ToString
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PeerId.ToString()
  fullName: Catalyst.Protocol.Peer.PeerId.ToString()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToString
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 162
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Catalyst.Protocol.Peer.PeerId.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Peer.PeerId.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Catalyst.Protocol.Peer.PeerId.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: PeerId.WriteTo(CodedOutputStream)
  fullName: Catalyst.Protocol.Peer.PeerId.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTo
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 167
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Catalyst.Protocol.Peer.PeerId.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.CalculateSize
  commentId: M:Catalyst.Protocol.Peer.PeerId.CalculateSize
  id: CalculateSize
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: PeerId.CalculateSize()
  fullName: Catalyst.Protocol.Peer.PeerId.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CalculateSize
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 186
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Catalyst.Protocol.Peer.PeerId.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Catalyst.Protocol.Peer.PeerId.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  id: MergeFrom(Catalyst.Protocol.Peer.PeerId)
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: MergeFrom(PeerId)
  nameWithType: PeerId.MergeFrom(PeerId)
  fullName: Catalyst.Protocol.Peer.PeerId.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 204
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public void MergeFrom(PeerId other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Peer.PeerId
    content.vb: Public Sub MergeFrom(other As PeerId)
  overload: Catalyst.Protocol.Peer.PeerId.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Peer.PeerId.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Catalyst.Protocol.Peer.PeerId.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Catalyst.Protocol.Peer.PeerId
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: PeerId.MergeFrom(CodedInputStream)
  fullName: Catalyst.Protocol.Peer.PeerId.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Peer.cs
    startLine: 221
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Peer
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Catalyst.Protocol.Peer.PeerId.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Protocol.Peer
  commentId: N:Catalyst.Protocol.Peer
  name: Catalyst.Protocol.Peer
  nameWithType: Catalyst.Protocol.Peer
  fullName: Catalyst.Protocol.Peer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}
  commentId: T:Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PeerId>
  nameWithType: IMessage<PeerId>
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Peer.PeerId>
  nameWithType.vb: IMessage(Of PeerId)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.Peer.PeerId)
  name.vb: IMessage(Of PeerId)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Catalyst.Protocol.Peer.PeerId}
  commentId: T:System.IEquatable{Catalyst.Protocol.Peer.PeerId}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PeerId>
  nameWithType: IEquatable<PeerId>
  fullName: System.IEquatable<Catalyst.Protocol.Peer.PeerId>
  nameWithType.vb: IEquatable(Of PeerId)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.Peer.PeerId)
  name.vb: IEquatable(Of PeerId)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}
  commentId: T:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PeerId>
  nameWithType: IDeepCloneable<PeerId>
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Peer.PeerId>
  nameWithType.vb: IDeepCloneable(Of PeerId)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Peer.PeerId)
  name.vb: IDeepCloneable(Of PeerId)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.IpAddress*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.IpAddress
  name: IpAddress
  nameWithType: PeerId.IpAddress
  fullName: Catalyst.Protocol.Peer.PeerId.IpAddress
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Catalyst.Protocol.Peer.PeerId.IpEndPoint*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.IpEndPoint
  name: IpEndPoint
  nameWithType: PeerId.IpEndPoint
  fullName: Catalyst.Protocol.Peer.PeerId.IpEndPoint
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: Catalyst.Protocol.Peer.PeerId.IsValid*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.IsValid
  name: IsValid
  nameWithType: PeerId.IsValid
  fullName: Catalyst.Protocol.Peer.PeerId.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Peer.PeerId.Parser*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Parser
  name: Parser
  nameWithType: PeerId.Parser
  fullName: Catalyst.Protocol.Peer.PeerId.Parser
- uid: Google.Protobuf.MessageParser{Catalyst.Protocol.Peer.PeerId}
  commentId: T:Google.Protobuf.MessageParser{Catalyst.Protocol.Peer.PeerId}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<PeerId>
  nameWithType: MessageParser<PeerId>
  fullName: Google.Protobuf.MessageParser<Catalyst.Protocol.Peer.PeerId>
  nameWithType.vb: MessageParser(Of PeerId)
  fullName.vb: Google.Protobuf.MessageParser(Of Catalyst.Protocol.Peer.PeerId)
  name.vb: MessageParser(Of PeerId)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.Descriptor*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Descriptor
  name: Descriptor
  nameWithType: PeerId.Descriptor
  fullName: Catalyst.Protocol.Peer.PeerId.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: PeerId.IMessage.Descriptor
  fullName: Catalyst.Protocol.Peer.PeerId.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: PeerId.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Catalyst.Protocol.Peer.PeerId.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.Peer.PeerId.#ctor*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.#ctor
  name: PeerId
  nameWithType: PeerId.PeerId
  fullName: Catalyst.Protocol.Peer.PeerId.PeerId
- uid: Catalyst.Protocol.Peer.PeerId
  commentId: T:Catalyst.Protocol.Peer.PeerId
  parent: Catalyst.Protocol.Peer
  name: PeerId
  nameWithType: PeerId
  fullName: Catalyst.Protocol.Peer.PeerId
- uid: Catalyst.Protocol.Peer.PeerId.Clone*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Clone
  name: Clone
  nameWithType: PeerId.Clone
  fullName: Catalyst.Protocol.Peer.PeerId.Clone
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}.Clone
  parent: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Peer.PeerId}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<PeerId>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Peer.PeerId>.Clone()
  nameWithType.vb: IDeepCloneable(Of PeerId).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Peer.PeerId).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<PeerId>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Peer.PeerId>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of PeerId).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Peer.PeerId).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Protocol.Peer.PeerId.Ip*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Ip
  name: Ip
  nameWithType: PeerId.Ip
  fullName: Catalyst.Protocol.Peer.PeerId.Ip
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Catalyst.Protocol.Peer.PeerId.Port*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Port
  name: Port
  nameWithType: PeerId.Port
  fullName: Catalyst.Protocol.Peer.PeerId.Port
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Catalyst.Protocol.Peer.PeerId.PublicKey*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.PublicKey
  name: PublicKey
  nameWithType: PeerId.PublicKey
  fullName: Catalyst.Protocol.Peer.PeerId.PublicKey
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.Equals*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.Equals
  name: Equals
  nameWithType: PeerId.Equals
  fullName: Catalyst.Protocol.Peer.PeerId.Equals
- uid: System.IEquatable{Catalyst.Protocol.Peer.PeerId}.Equals(Catalyst.Protocol.Peer.PeerId)
  commentId: M:System.IEquatable{Catalyst.Protocol.Peer.PeerId}.Equals(Catalyst.Protocol.Peer.PeerId)
  parent: System.IEquatable{Catalyst.Protocol.Peer.PeerId}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(PeerId)
  nameWithType: IEquatable<PeerId>.Equals(PeerId)
  fullName: System.IEquatable<Catalyst.Protocol.Peer.PeerId>.Equals(Catalyst.Protocol.Peer.PeerId)
  nameWithType.vb: IEquatable(Of PeerId).Equals(PeerId)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.Peer.PeerId).Equals(Catalyst.Protocol.Peer.PeerId)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<PeerId>.Equals
    fullName: System.IEquatable<Catalyst.Protocol.Peer.PeerId>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of PeerId).Equals
    fullName: System.IEquatable(Of Catalyst.Protocol.Peer.PeerId).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.GetHashCode*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.GetHashCode
  name: GetHashCode
  nameWithType: PeerId.GetHashCode
  fullName: Catalyst.Protocol.Peer.PeerId.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.ToString*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.ToString
  name: ToString
  nameWithType: PeerId.ToString
  fullName: Catalyst.Protocol.Peer.PeerId.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Protocol.Peer.PeerId.WriteTo*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.WriteTo
  name: WriteTo
  nameWithType: PeerId.WriteTo
  fullName: Catalyst.Protocol.Peer.PeerId.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Catalyst.Protocol.Peer.PeerId.CalculateSize*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.CalculateSize
  name: CalculateSize
  nameWithType: PeerId.CalculateSize
  fullName: Catalyst.Protocol.Peer.PeerId.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Peer.PeerId.MergeFrom*
  commentId: Overload:Catalyst.Protocol.Peer.PeerId.MergeFrom
  name: MergeFrom
  nameWithType: PeerId.MergeFrom
  fullName: Catalyst.Protocol.Peer.PeerId.MergeFrom
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  commentId: M:Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  parent: Google.Protobuf.IMessage{Catalyst.Protocol.Peer.PeerId}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(PeerId)
  nameWithType: IMessage<PeerId>.MergeFrom(PeerId)
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Peer.PeerId>.MergeFrom(Catalyst.Protocol.Peer.PeerId)
  nameWithType.vb: IMessage(Of PeerId).MergeFrom(PeerId)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.Peer.PeerId).MergeFrom(Catalyst.Protocol.Peer.PeerId)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<PeerId>.MergeFrom
    fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Peer.PeerId>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of PeerId).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Catalyst.Protocol.Peer.PeerId).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Peer.PeerId
    name: PeerId
    nameWithType: PeerId
    fullName: Catalyst.Protocol.Peer.PeerId
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
