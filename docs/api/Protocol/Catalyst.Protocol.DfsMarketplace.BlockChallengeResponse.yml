### YamlMime:ManagedReference
items:
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  commentId: T:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  id: BlockChallengeResponse
  parent: Catalyst.Protocol.DfsMarketplace
  children:
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.AnswerFieldNumber
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHashFieldNumber
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(System.Object)
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Google.Protobuf.CodedInputStream)
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString
  - Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: BlockChallengeResponse
  nameWithType: BlockChallengeResponse
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  type: Class
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BlockChallengeResponse
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 235
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: 'public sealed class BlockChallengeResponse : IMessage<BlockChallengeResponse>, IMessage, IEquatable<BlockChallengeResponse>, IDeepCloneable<BlockChallengeResponse>'
    content.vb: >-
      Public NotInheritable Class BlockChallengeResponse

          Implements IMessage(Of BlockChallengeResponse), IMessage, IEquatable(Of BlockChallengeResponse), IDeepCloneable(Of BlockChallengeResponse)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  - Google.Protobuf.IMessage
  - System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
  commentId: P:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
  id: Parser
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: BlockChallengeResponse.Parser
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Parser
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 238
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public static MessageParser<BlockChallengeResponse> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of BlockChallengeResponse)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
  commentId: P:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
  id: Descriptor
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: BlockChallengeResponse.Descriptor
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 241
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor
  commentId: P:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: BlockChallengeResponse.IMessage.Descriptor
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 246
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: BlockChallengeResponse.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor
  id: '#ctor'
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: BlockChallengeResponse()
  nameWithType: BlockChallengeResponse.BlockChallengeResponse()
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeResponse()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 251
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public BlockChallengeResponse()
    content.vb: Public Sub New
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  id: '#ctor(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)'
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: BlockChallengeResponse(BlockChallengeResponse)
  nameWithType: BlockChallengeResponse.BlockChallengeResponse(BlockChallengeResponse)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeResponse(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 258
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public BlockChallengeResponse(BlockChallengeResponse other)
    parameters:
    - id: other
      type: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    content.vb: Public Sub New(other As BlockChallengeResponse)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone
  id: Clone
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: BlockChallengeResponse.Clone()
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Clone
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 265
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public BlockChallengeResponse Clone()
    return:
      type: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    content.vb: Public Function Clone As BlockChallengeResponse
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.AnswerFieldNumber
  commentId: F:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.AnswerFieldNumber
  id: AnswerFieldNumber
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: AnswerFieldNumber
  nameWithType: BlockChallengeResponse.AnswerFieldNumber
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.AnswerFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AnswerFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 271
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  summary: Field number for the &quot;answer&quot; field.
  example: []
  syntax:
    content: public const int AnswerFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const AnswerFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
  commentId: P:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
  id: Answer
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Answer
  nameWithType: BlockChallengeResponse.Answer
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Answer
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 273
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public string Answer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Answer As String
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHashFieldNumber
  commentId: F:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHashFieldNumber
  id: BlockChallengeRequestHashFieldNumber
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: BlockChallengeRequestHashFieldNumber
  nameWithType: BlockChallengeResponse.BlockChallengeRequestHashFieldNumber
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHashFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BlockChallengeRequestHashFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 282
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  summary: Field number for the &quot;block_challenge_request_hash&quot; field.
  example: []
  syntax:
    content: public const int BlockChallengeRequestHashFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const BlockChallengeRequestHashFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
  commentId: P:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
  id: BlockChallengeRequestHash
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: BlockChallengeRequestHash
  nameWithType: BlockChallengeResponse.BlockChallengeRequestHash
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: BlockChallengeRequestHash
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 284
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public string BlockChallengeRequestHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BlockChallengeRequestHash As String
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(System.Object)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(System.Object)
  id: Equals(System.Object)
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BlockChallengeResponse.Equals(Object)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 292
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  id: Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: Equals(BlockChallengeResponse)
  nameWithType: BlockChallengeResponse.Equals(BlockChallengeResponse)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 297
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public bool Equals(BlockChallengeResponse other)
    parameters:
    - id: other
      type: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As BlockChallengeResponse) As Boolean
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals*
  implements:
  - System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode
  id: GetHashCode
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BlockChallengeResponse.GetHashCode()
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetHashCode
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 310
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString
  id: ToString
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlockChallengeResponse.ToString()
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToString
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 321
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: BlockChallengeResponse.WriteTo(CodedOutputStream)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTo
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 326
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize
  id: CalculateSize
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: BlockChallengeResponse.CalculateSize()
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CalculateSize
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 341
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  id: MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(BlockChallengeResponse)
  nameWithType: BlockChallengeResponse.MergeFrom(BlockChallengeResponse)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 356
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public void MergeFrom(BlockChallengeResponse other)
    parameters:
    - id: other
      type: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    content.vb: Public Sub MergeFrom(other As BlockChallengeResponse)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: BlockChallengeResponse.MergeFrom(CodedInputStream)
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/DfsMarketplace.cs
    startLine: 370
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.DfsMarketplace
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Protocol.DfsMarketplace
  commentId: N:Catalyst.Protocol.DfsMarketplace
  name: Catalyst.Protocol.DfsMarketplace
  nameWithType: Catalyst.Protocol.DfsMarketplace
  fullName: Catalyst.Protocol.DfsMarketplace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  commentId: T:Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<BlockChallengeResponse>
  nameWithType: IMessage<BlockChallengeResponse>
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>
  nameWithType.vb: IMessage(Of BlockChallengeResponse)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  name.vb: IMessage(Of BlockChallengeResponse)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  commentId: T:System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BlockChallengeResponse>
  nameWithType: IEquatable<BlockChallengeResponse>
  fullName: System.IEquatable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>
  nameWithType.vb: IEquatable(Of BlockChallengeResponse)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  name.vb: IEquatable(Of BlockChallengeResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  commentId: T:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<BlockChallengeResponse>
  nameWithType: IDeepCloneable<BlockChallengeResponse>
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>
  nameWithType.vb: IDeepCloneable(Of BlockChallengeResponse)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  name.vb: IDeepCloneable(Of BlockChallengeResponse)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
  name: Parser
  nameWithType: BlockChallengeResponse.Parser
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Parser
- uid: Google.Protobuf.MessageParser{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  commentId: T:Google.Protobuf.MessageParser{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<BlockChallengeResponse>
  nameWithType: MessageParser<BlockChallengeResponse>
  fullName: Google.Protobuf.MessageParser<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>
  nameWithType.vb: MessageParser(Of BlockChallengeResponse)
  fullName.vb: Google.Protobuf.MessageParser(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  name.vb: MessageParser(Of BlockChallengeResponse)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
  name: Descriptor
  nameWithType: BlockChallengeResponse.Descriptor
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: BlockChallengeResponse.IMessage.Descriptor
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: BlockChallengeResponse.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.#ctor
  name: BlockChallengeResponse
  nameWithType: BlockChallengeResponse.BlockChallengeResponse
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeResponse
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  commentId: T:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  parent: Catalyst.Protocol.DfsMarketplace
  name: BlockChallengeResponse
  nameWithType: BlockChallengeResponse
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone
  name: Clone
  nameWithType: BlockChallengeResponse.Clone
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Clone
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Clone
  parent: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<BlockChallengeResponse>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.Clone()
  nameWithType.vb: IDeepCloneable(Of BlockChallengeResponse).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<BlockChallengeResponse>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of BlockChallengeResponse).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
  name: Answer
  nameWithType: BlockChallengeResponse.Answer
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Answer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
  name: BlockChallengeRequestHash
  nameWithType: BlockChallengeResponse.BlockChallengeRequestHash
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.BlockChallengeRequestHash
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals
  name: Equals
  nameWithType: BlockChallengeResponse.Equals
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  commentId: M:System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  parent: System.IEquatable{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BlockChallengeResponse)
  nameWithType: IEquatable<BlockChallengeResponse>.Equals(BlockChallengeResponse)
  fullName: System.IEquatable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  nameWithType.vb: IEquatable(Of BlockChallengeResponse).Equals(BlockChallengeResponse)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).Equals(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BlockChallengeResponse>.Equals
    fullName: System.IEquatable<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BlockChallengeResponse).Equals
    fullName: System.IEquatable(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode
  name: GetHashCode
  nameWithType: BlockChallengeResponse.GetHashCode
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString
  name: ToString
  nameWithType: BlockChallengeResponse.ToString
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.ToString
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo
  name: WriteTo
  nameWithType: BlockChallengeResponse.WriteTo
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize
  name: CalculateSize
  nameWithType: BlockChallengeResponse.CalculateSize
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom*
  commentId: Overload:Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom
  name: MergeFrom
  nameWithType: BlockChallengeResponse.MergeFrom
  fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse.MergeFrom
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  commentId: M:Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  parent: Google.Protobuf.IMessage{Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(BlockChallengeResponse)
  nameWithType: IMessage<BlockChallengeResponse>.MergeFrom(BlockChallengeResponse)
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  nameWithType.vb: IMessage(Of BlockChallengeResponse).MergeFrom(BlockChallengeResponse)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).MergeFrom(Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<BlockChallengeResponse>.MergeFrom
    fullName: Google.Protobuf.IMessage<Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of BlockChallengeResponse).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
    name: BlockChallengeResponse
    nameWithType: BlockChallengeResponse
    fullName: Catalyst.Protocol.DfsMarketplace.BlockChallengeResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
