### YamlMime:ManagedReference
items:
- uid: Catalyst.Protocol.Deltas.Delta
  commentId: T:Catalyst.Protocol.Deltas.Delta
  id: Delta
  parent: Catalyst.Protocol.Deltas
  children:
  - Catalyst.Protocol.Deltas.Delta.#ctor
  - Catalyst.Protocol.Deltas.Delta.#ctor(Catalyst.Protocol.Deltas.Delta)
  - Catalyst.Protocol.Deltas.Delta.CalculateSize
  - Catalyst.Protocol.Deltas.Delta.Clone
  - Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
  - Catalyst.Protocol.Deltas.Delta.CoinbaseEntriesFieldNumber
  - Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
  - Catalyst.Protocol.Deltas.Delta.ConfidentialEntriesFieldNumber
  - Catalyst.Protocol.Deltas.Delta.ContractEntries
  - Catalyst.Protocol.Deltas.Delta.ContractEntriesFieldNumber
  - Catalyst.Protocol.Deltas.Delta.Descriptor
  - Catalyst.Protocol.Deltas.Delta.Equals(Catalyst.Protocol.Deltas.Delta)
  - Catalyst.Protocol.Deltas.Delta.Equals(System.Object)
  - Catalyst.Protocol.Deltas.Delta.GetHashCode
  - Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor
  - Catalyst.Protocol.Deltas.Delta.IsValid
  - Catalyst.Protocol.Deltas.Delta.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  - Catalyst.Protocol.Deltas.Delta.MergeFrom(Google.Protobuf.CodedInputStream)
  - Catalyst.Protocol.Deltas.Delta.MerklePoda
  - Catalyst.Protocol.Deltas.Delta.MerklePodaFieldNumber
  - Catalyst.Protocol.Deltas.Delta.MerkleRoot
  - Catalyst.Protocol.Deltas.Delta.MerkleRootFieldNumber
  - Catalyst.Protocol.Deltas.Delta.Parser
  - Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
  - Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHashFieldNumber
  - Catalyst.Protocol.Deltas.Delta.PublicEntries
  - Catalyst.Protocol.Deltas.Delta.PublicEntriesFieldNumber
  - Catalyst.Protocol.Deltas.Delta.TimeStamp
  - Catalyst.Protocol.Deltas.Delta.TimeStampFieldNumber
  - Catalyst.Protocol.Deltas.Delta.ToString
  - Catalyst.Protocol.Deltas.Delta.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: Delta
  nameWithType: Delta
  fullName: Catalyst.Protocol.Deltas.Delta
  type: Class
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Delta
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 48
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: 'public sealed class Delta : IMessage<Delta>, IMessage, IEquatable<Delta>, IDeepCloneable<Delta>'
    content.vb: >-
      Public NotInheritable Class Delta

          Implements IMessage(Of Delta), IMessage, IEquatable(Of Delta), IDeepCloneable(Of Delta)
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}
  - Google.Protobuf.IMessage
  - System.IEquatable{Catalyst.Protocol.Deltas.Delta}
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Protocol.Deltas.Delta.IsValid
  commentId: M:Catalyst.Protocol.Deltas.Delta.IsValid
  id: IsValid
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: Delta.IsValid()
  fullName: Catalyst.Protocol.Deltas.Delta.IsValid()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/Deltas/Delta.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IsValid
    path: ../src/Catalyst.Protocol/Deltas/Delta.cs
    startLine: 30
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid As Boolean
  overload: Catalyst.Protocol.Deltas.Delta.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.Parser
  commentId: P:Catalyst.Protocol.Deltas.Delta.Parser
  id: Parser
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Delta.Parser
  fullName: Catalyst.Protocol.Deltas.Delta.Parser
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Parser
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 51
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public static MessageParser<Delta> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Catalyst.Protocol.Deltas.Delta}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of Delta)
  overload: Catalyst.Protocol.Deltas.Delta.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.Descriptor
  commentId: P:Catalyst.Protocol.Deltas.Delta.Descriptor
  id: Descriptor
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: Delta.Descriptor
  fullName: Catalyst.Protocol.Deltas.Delta.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 54
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Catalyst.Protocol.Deltas.Delta.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor
  commentId: P:Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: Delta.IMessage.Descriptor
  fullName: Catalyst.Protocol.Deltas.Delta.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 59
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Delta.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Catalyst.Protocol.Deltas.Delta.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.Deltas.Delta.#ctor
  commentId: M:Catalyst.Protocol.Deltas.Delta.#ctor
  id: '#ctor'
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Delta()
  nameWithType: Delta.Delta()
  fullName: Catalyst.Protocol.Deltas.Delta.Delta()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 64
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public Delta()
    content.vb: Public Sub New
  overload: Catalyst.Protocol.Deltas.Delta.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.#ctor(Catalyst.Protocol.Deltas.Delta)
  commentId: M:Catalyst.Protocol.Deltas.Delta.#ctor(Catalyst.Protocol.Deltas.Delta)
  id: '#ctor(Catalyst.Protocol.Deltas.Delta)'
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Delta(Delta)
  nameWithType: Delta.Delta(Delta)
  fullName: Catalyst.Protocol.Deltas.Delta.Delta(Catalyst.Protocol.Deltas.Delta)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 71
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public Delta(Delta other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Deltas.Delta
    content.vb: Public Sub New(other As Delta)
  overload: Catalyst.Protocol.Deltas.Delta.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.Clone
  commentId: M:Catalyst.Protocol.Deltas.Delta.Clone
  id: Clone
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Delta.Clone()
  fullName: Catalyst.Protocol.Deltas.Delta.Clone()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Clone
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 84
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public Delta Clone()
    return:
      type: Catalyst.Protocol.Deltas.Delta
    content.vb: Public Function Clone As Delta
  overload: Catalyst.Protocol.Deltas.Delta.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHashFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHashFieldNumber
  id: PreviousDeltaDfsHashFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: PreviousDeltaDfsHashFieldNumber
  nameWithType: Delta.PreviousDeltaDfsHashFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHashFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PreviousDeltaDfsHashFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 90
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;previous_delta_dfs_hash&quot; field.
  example: []
  syntax:
    content: public const int PreviousDeltaDfsHashFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const PreviousDeltaDfsHashFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
  commentId: P:Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
  id: PreviousDeltaDfsHash
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: PreviousDeltaDfsHash
  nameWithType: Delta.PreviousDeltaDfsHash
  fullName: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PreviousDeltaDfsHash
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 95
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: "\naddress for the content of the previous delta on the DFS\n"
  example: []
  syntax:
    content: public ByteString PreviousDeltaDfsHash { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property PreviousDeltaDfsHash As ByteString
  overload: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.MerkleRootFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.MerkleRootFieldNumber
  id: MerkleRootFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MerkleRootFieldNumber
  nameWithType: Delta.MerkleRootFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.MerkleRootFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MerkleRootFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 104
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;merkle_root&quot; field.
  example: []
  syntax:
    content: public const int MerkleRootFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const MerkleRootFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.MerkleRoot
  commentId: P:Catalyst.Protocol.Deltas.Delta.MerkleRoot
  id: MerkleRoot
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MerkleRoot
  nameWithType: Delta.MerkleRoot
  fullName: Catalyst.Protocol.Deltas.Delta.MerkleRoot
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MerkleRoot
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 106
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public ByteString MerkleRoot { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property MerkleRoot As ByteString
  overload: Catalyst.Protocol.Deltas.Delta.MerkleRoot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.MerklePodaFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.MerklePodaFieldNumber
  id: MerklePodaFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MerklePodaFieldNumber
  nameWithType: Delta.MerklePodaFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.MerklePodaFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MerklePodaFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 115
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;merkle_poda&quot; field.
  example: []
  syntax:
    content: public const int MerklePodaFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const MerklePodaFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.MerklePoda
  commentId: P:Catalyst.Protocol.Deltas.Delta.MerklePoda
  id: MerklePoda
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MerklePoda
  nameWithType: Delta.MerklePoda
  fullName: Catalyst.Protocol.Deltas.Delta.MerklePoda
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MerklePoda
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 120
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: "\nproof of delegated authority for active wokers\n"
  example: []
  syntax:
    content: public ByteString MerklePoda { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property MerklePoda As ByteString
  overload: Catalyst.Protocol.Deltas.Delta.MerklePoda*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.TimeStampFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.TimeStampFieldNumber
  id: TimeStampFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: TimeStampFieldNumber
  nameWithType: Delta.TimeStampFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.TimeStampFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TimeStampFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 129
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;time_stamp&quot; field.
  example: []
  syntax:
    content: public const int TimeStampFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const TimeStampFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.TimeStamp
  commentId: P:Catalyst.Protocol.Deltas.Delta.TimeStamp
  id: TimeStamp
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: Delta.TimeStamp
  fullName: Catalyst.Protocol.Deltas.Delta.TimeStamp
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TimeStamp
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 131
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public Timestamp TimeStamp { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Timestamp
    content.vb: Public Property TimeStamp As Timestamp
  overload: Catalyst.Protocol.Deltas.Delta.TimeStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.PublicEntriesFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.PublicEntriesFieldNumber
  id: PublicEntriesFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: PublicEntriesFieldNumber
  nameWithType: Delta.PublicEntriesFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.PublicEntriesFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicEntriesFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 140
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;public_entries&quot; field.
  example: []
  syntax:
    content: public const int PublicEntriesFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const PublicEntriesFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.PublicEntries
  commentId: P:Catalyst.Protocol.Deltas.Delta.PublicEntries
  id: PublicEntries
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: PublicEntries
  nameWithType: Delta.PublicEntries
  fullName: Catalyst.Protocol.Deltas.Delta.PublicEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicEntries
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 144
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public RepeatedField<PublicEntry> PublicEntries { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.PublicEntry}
    content.vb: Public ReadOnly Property PublicEntries As RepeatedField(Of PublicEntry)
  overload: Catalyst.Protocol.Deltas.Delta.PublicEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.ConfidentialEntriesFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.ConfidentialEntriesFieldNumber
  id: ConfidentialEntriesFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: ConfidentialEntriesFieldNumber
  nameWithType: Delta.ConfidentialEntriesFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.ConfidentialEntriesFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfidentialEntriesFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 150
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;confidential_entries&quot; field.
  example: []
  syntax:
    content: public const int ConfidentialEntriesFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const ConfidentialEntriesFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
  commentId: P:Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
  id: ConfidentialEntries
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: ConfidentialEntries
  nameWithType: Delta.ConfidentialEntries
  fullName: Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfidentialEntries
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 154
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public RepeatedField<ConfidentialEntry> ConfidentialEntries { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ConfidentialEntry}
    content.vb: Public ReadOnly Property ConfidentialEntries As RepeatedField(Of ConfidentialEntry)
  overload: Catalyst.Protocol.Deltas.Delta.ConfidentialEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.ContractEntriesFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.ContractEntriesFieldNumber
  id: ContractEntriesFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: ContractEntriesFieldNumber
  nameWithType: Delta.ContractEntriesFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.ContractEntriesFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ContractEntriesFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 160
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;contract_entries&quot; field.
  example: []
  syntax:
    content: public const int ContractEntriesFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const ContractEntriesFieldNumber As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.ContractEntries
  commentId: P:Catalyst.Protocol.Deltas.Delta.ContractEntries
  id: ContractEntries
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: ContractEntries
  nameWithType: Delta.ContractEntries
  fullName: Catalyst.Protocol.Deltas.Delta.ContractEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ContractEntries
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 164
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public RepeatedField<ContractEntry> ContractEntries { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ContractEntry}
    content.vb: Public ReadOnly Property ContractEntries As RepeatedField(Of ContractEntry)
  overload: Catalyst.Protocol.Deltas.Delta.ContractEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.CoinbaseEntriesFieldNumber
  commentId: F:Catalyst.Protocol.Deltas.Delta.CoinbaseEntriesFieldNumber
  id: CoinbaseEntriesFieldNumber
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: CoinbaseEntriesFieldNumber
  nameWithType: Delta.CoinbaseEntriesFieldNumber
  fullName: Catalyst.Protocol.Deltas.Delta.CoinbaseEntriesFieldNumber
  type: Field
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CoinbaseEntriesFieldNumber
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 170
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: Field number for the &quot;coinbase_entries&quot; field.
  example: []
  syntax:
    content: public const int CoinbaseEntriesFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const CoinbaseEntriesFieldNumber As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
  commentId: P:Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
  id: CoinbaseEntries
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: CoinbaseEntries
  nameWithType: Delta.CoinbaseEntries
  fullName: Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
  type: Property
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CoinbaseEntries
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 177
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  summary: "\none per active worker\n"
  example: []
  syntax:
    content: public RepeatedField<CoinbaseEntry> CoinbaseEntries { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.CoinbaseEntry}
    content.vb: Public ReadOnly Property CoinbaseEntries As RepeatedField(Of CoinbaseEntry)
  overload: Catalyst.Protocol.Deltas.Delta.CoinbaseEntries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Protocol.Deltas.Delta.Equals(System.Object)
  commentId: M:Catalyst.Protocol.Deltas.Delta.Equals(System.Object)
  id: Equals(System.Object)
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Delta.Equals(Object)
  fullName: Catalyst.Protocol.Deltas.Delta.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 182
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Catalyst.Protocol.Deltas.Delta.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Deltas.Delta.Equals(Catalyst.Protocol.Deltas.Delta)
  commentId: M:Catalyst.Protocol.Deltas.Delta.Equals(Catalyst.Protocol.Deltas.Delta)
  id: Equals(Catalyst.Protocol.Deltas.Delta)
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: Equals(Delta)
  nameWithType: Delta.Equals(Delta)
  fullName: Catalyst.Protocol.Deltas.Delta.Equals(Catalyst.Protocol.Deltas.Delta)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Equals
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 187
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public bool Equals(Delta other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Deltas.Delta
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Delta) As Boolean
  overload: Catalyst.Protocol.Deltas.Delta.Equals*
  implements:
  - System.IEquatable{Catalyst.Protocol.Deltas.Delta}.Equals(Catalyst.Protocol.Deltas.Delta)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.GetHashCode
  commentId: M:Catalyst.Protocol.Deltas.Delta.GetHashCode
  id: GetHashCode
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Delta.GetHashCode()
  fullName: Catalyst.Protocol.Deltas.Delta.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetHashCode
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 206
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Catalyst.Protocol.Deltas.Delta.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Deltas.Delta.ToString
  commentId: M:Catalyst.Protocol.Deltas.Delta.ToString
  id: ToString
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Delta.ToString()
  fullName: Catalyst.Protocol.Deltas.Delta.ToString()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ToString
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 223
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Catalyst.Protocol.Deltas.Delta.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Catalyst.Protocol.Deltas.Delta.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Catalyst.Protocol.Deltas.Delta.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: Delta.WriteTo(CodedOutputStream)
  fullName: Catalyst.Protocol.Deltas.Delta.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: WriteTo
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 228
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Catalyst.Protocol.Deltas.Delta.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.CalculateSize
  commentId: M:Catalyst.Protocol.Deltas.Delta.CalculateSize
  id: CalculateSize
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: Delta.CalculateSize()
  fullName: Catalyst.Protocol.Deltas.Delta.CalculateSize()
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CalculateSize
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 255
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Catalyst.Protocol.Deltas.Delta.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  commentId: M:Catalyst.Protocol.Deltas.Delta.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  id: MergeFrom(Catalyst.Protocol.Deltas.Delta)
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MergeFrom(Delta)
  nameWithType: Delta.MergeFrom(Delta)
  fullName: Catalyst.Protocol.Deltas.Delta.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 280
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public void MergeFrom(Delta other)
    parameters:
    - id: other
      type: Catalyst.Protocol.Deltas.Delta
    content.vb: Public Sub MergeFrom(other As Delta)
  overload: Catalyst.Protocol.Deltas.Delta.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Protocol.Deltas.Delta.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Catalyst.Protocol.Deltas.Delta.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Catalyst.Protocol.Deltas.Delta
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: Delta.MergeFrom(CodedInputStream)
  fullName: Catalyst.Protocol.Deltas.Delta.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: MergeFrom
    path: ../src/Catalyst.Protocol/obj/Release/netcoreapp3.0/Deltas.cs
    startLine: 307
  assemblies:
  - Catalyst.Protocol
  namespace: Catalyst.Protocol.Deltas
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Catalyst.Protocol.Deltas.Delta.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Protocol.Deltas
  commentId: N:Catalyst.Protocol.Deltas
  name: Catalyst.Protocol.Deltas
  nameWithType: Catalyst.Protocol.Deltas
  fullName: Catalyst.Protocol.Deltas
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}
  commentId: T:Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Delta>
  nameWithType: IMessage<Delta>
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Deltas.Delta>
  nameWithType.vb: IMessage(Of Delta)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.Deltas.Delta)
  name.vb: IMessage(Of Delta)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.IEquatable{Catalyst.Protocol.Deltas.Delta}
  commentId: T:System.IEquatable{Catalyst.Protocol.Deltas.Delta}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Delta>
  nameWithType: IEquatable<Delta>
  fullName: System.IEquatable<Catalyst.Protocol.Deltas.Delta>
  nameWithType.vb: IEquatable(Of Delta)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.Deltas.Delta)
  name.vb: IEquatable(Of Delta)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}
  commentId: T:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Delta>
  nameWithType: IDeepCloneable<Delta>
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Deltas.Delta>
  nameWithType.vb: IDeepCloneable(Of Delta)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Deltas.Delta)
  name.vb: IDeepCloneable(Of Delta)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.IsValid*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.IsValid
  name: IsValid
  nameWithType: Delta.IsValid
  fullName: Catalyst.Protocol.Deltas.Delta.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Deltas.Delta.Parser*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.Parser
  name: Parser
  nameWithType: Delta.Parser
  fullName: Catalyst.Protocol.Deltas.Delta.Parser
- uid: Google.Protobuf.MessageParser{Catalyst.Protocol.Deltas.Delta}
  commentId: T:Google.Protobuf.MessageParser{Catalyst.Protocol.Deltas.Delta}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<Delta>
  nameWithType: MessageParser<Delta>
  fullName: Google.Protobuf.MessageParser<Catalyst.Protocol.Deltas.Delta>
  nameWithType.vb: MessageParser(Of Delta)
  fullName.vb: Google.Protobuf.MessageParser(Of Catalyst.Protocol.Deltas.Delta)
  name.vb: MessageParser(Of Delta)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.Descriptor*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.Descriptor
  name: Descriptor
  nameWithType: Delta.Descriptor
  fullName: Catalyst.Protocol.Deltas.Delta.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: Delta.IMessage.Descriptor
  fullName: Catalyst.Protocol.Deltas.Delta.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: Delta.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Catalyst.Protocol.Deltas.Delta.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Catalyst.Protocol.Deltas.Delta.#ctor*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.#ctor
  name: Delta
  nameWithType: Delta.Delta
  fullName: Catalyst.Protocol.Deltas.Delta.Delta
- uid: Catalyst.Protocol.Deltas.Delta
  commentId: T:Catalyst.Protocol.Deltas.Delta
  parent: Catalyst.Protocol.Deltas
  name: Delta
  nameWithType: Delta
  fullName: Catalyst.Protocol.Deltas.Delta
- uid: Catalyst.Protocol.Deltas.Delta.Clone*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.Clone
  name: Clone
  nameWithType: Delta.Clone
  fullName: Catalyst.Protocol.Deltas.Delta.Clone
- uid: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}.Clone
  parent: Google.Protobuf.IDeepCloneable{Catalyst.Protocol.Deltas.Delta}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<Delta>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Deltas.Delta>.Clone()
  nameWithType.vb: IDeepCloneable(Of Delta).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Deltas.Delta).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<Delta>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Catalyst.Protocol.Deltas.Delta>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of Delta).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Catalyst.Protocol.Deltas.Delta).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
  name: PreviousDeltaDfsHash
  nameWithType: Delta.PreviousDeltaDfsHash
  fullName: Catalyst.Protocol.Deltas.Delta.PreviousDeltaDfsHash
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Catalyst.Protocol.Deltas.Delta.MerkleRoot*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.MerkleRoot
  name: MerkleRoot
  nameWithType: Delta.MerkleRoot
  fullName: Catalyst.Protocol.Deltas.Delta.MerkleRoot
- uid: Catalyst.Protocol.Deltas.Delta.MerklePoda*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.MerklePoda
  name: MerklePoda
  nameWithType: Delta.MerklePoda
  fullName: Catalyst.Protocol.Deltas.Delta.MerklePoda
- uid: Catalyst.Protocol.Deltas.Delta.TimeStamp*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.TimeStamp
  name: TimeStamp
  nameWithType: Delta.TimeStamp
  fullName: Catalyst.Protocol.Deltas.Delta.TimeStamp
- uid: Google.Protobuf.WellKnownTypes.Timestamp
  commentId: T:Google.Protobuf.WellKnownTypes.Timestamp
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Timestamp
  nameWithType: Timestamp
  fullName: Google.Protobuf.WellKnownTypes.Timestamp
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Catalyst.Protocol.Deltas.Delta.PublicEntries*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.PublicEntries
  name: PublicEntries
  nameWithType: Delta.PublicEntries
  fullName: Catalyst.Protocol.Deltas.Delta.PublicEntries
- uid: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.PublicEntry}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.PublicEntry}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<PublicEntry>
  nameWithType: RepeatedField<PublicEntry>
  fullName: Google.Protobuf.Collections.RepeatedField<Catalyst.Protocol.Transaction.PublicEntry>
  nameWithType.vb: RepeatedField(Of PublicEntry)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Catalyst.Protocol.Transaction.PublicEntry)
  name.vb: RepeatedField(Of PublicEntry)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Transaction.PublicEntry
    name: PublicEntry
    nameWithType: PublicEntry
    fullName: Catalyst.Protocol.Transaction.PublicEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Transaction.PublicEntry
    name: PublicEntry
    nameWithType: PublicEntry
    fullName: Catalyst.Protocol.Transaction.PublicEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Catalyst.Protocol.Deltas.Delta.ConfidentialEntries*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
  name: ConfidentialEntries
  nameWithType: Delta.ConfidentialEntries
  fullName: Catalyst.Protocol.Deltas.Delta.ConfidentialEntries
- uid: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ConfidentialEntry}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ConfidentialEntry}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<ConfidentialEntry>
  nameWithType: RepeatedField<ConfidentialEntry>
  fullName: Google.Protobuf.Collections.RepeatedField<Catalyst.Protocol.Transaction.ConfidentialEntry>
  nameWithType.vb: RepeatedField(Of ConfidentialEntry)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Catalyst.Protocol.Transaction.ConfidentialEntry)
  name.vb: RepeatedField(Of ConfidentialEntry)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Transaction.ConfidentialEntry
    name: ConfidentialEntry
    nameWithType: ConfidentialEntry
    fullName: Catalyst.Protocol.Transaction.ConfidentialEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Transaction.ConfidentialEntry
    name: ConfidentialEntry
    nameWithType: ConfidentialEntry
    fullName: Catalyst.Protocol.Transaction.ConfidentialEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.ContractEntries*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.ContractEntries
  name: ContractEntries
  nameWithType: Delta.ContractEntries
  fullName: Catalyst.Protocol.Deltas.Delta.ContractEntries
- uid: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ContractEntry}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.ContractEntry}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<ContractEntry>
  nameWithType: RepeatedField<ContractEntry>
  fullName: Google.Protobuf.Collections.RepeatedField<Catalyst.Protocol.Transaction.ContractEntry>
  nameWithType.vb: RepeatedField(Of ContractEntry)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Catalyst.Protocol.Transaction.ContractEntry)
  name.vb: RepeatedField(Of ContractEntry)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Transaction.ContractEntry
    name: ContractEntry
    nameWithType: ContractEntry
    fullName: Catalyst.Protocol.Transaction.ContractEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Transaction.ContractEntry
    name: ContractEntry
    nameWithType: ContractEntry
    fullName: Catalyst.Protocol.Transaction.ContractEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.CoinbaseEntries*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
  name: CoinbaseEntries
  nameWithType: Delta.CoinbaseEntries
  fullName: Catalyst.Protocol.Deltas.Delta.CoinbaseEntries
- uid: Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.CoinbaseEntry}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Catalyst.Protocol.Transaction.CoinbaseEntry}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<CoinbaseEntry>
  nameWithType: RepeatedField<CoinbaseEntry>
  fullName: Google.Protobuf.Collections.RepeatedField<Catalyst.Protocol.Transaction.CoinbaseEntry>
  nameWithType.vb: RepeatedField(Of CoinbaseEntry)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Catalyst.Protocol.Transaction.CoinbaseEntry)
  name.vb: RepeatedField(Of CoinbaseEntry)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Transaction.CoinbaseEntry
    name: CoinbaseEntry
    nameWithType: CoinbaseEntry
    fullName: Catalyst.Protocol.Transaction.CoinbaseEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Transaction.CoinbaseEntry
    name: CoinbaseEntry
    nameWithType: CoinbaseEntry
    fullName: Catalyst.Protocol.Transaction.CoinbaseEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.Equals*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.Equals
  name: Equals
  nameWithType: Delta.Equals
  fullName: Catalyst.Protocol.Deltas.Delta.Equals
- uid: System.IEquatable{Catalyst.Protocol.Deltas.Delta}.Equals(Catalyst.Protocol.Deltas.Delta)
  commentId: M:System.IEquatable{Catalyst.Protocol.Deltas.Delta}.Equals(Catalyst.Protocol.Deltas.Delta)
  parent: System.IEquatable{Catalyst.Protocol.Deltas.Delta}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Delta)
  nameWithType: IEquatable<Delta>.Equals(Delta)
  fullName: System.IEquatable<Catalyst.Protocol.Deltas.Delta>.Equals(Catalyst.Protocol.Deltas.Delta)
  nameWithType.vb: IEquatable(Of Delta).Equals(Delta)
  fullName.vb: System.IEquatable(Of Catalyst.Protocol.Deltas.Delta).Equals(Catalyst.Protocol.Deltas.Delta)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Delta>.Equals
    fullName: System.IEquatable<Catalyst.Protocol.Deltas.Delta>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Delta).Equals
    fullName: System.IEquatable(Of Catalyst.Protocol.Deltas.Delta).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.GetHashCode*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.GetHashCode
  name: GetHashCode
  nameWithType: Delta.GetHashCode
  fullName: Catalyst.Protocol.Deltas.Delta.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.ToString*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.ToString
  name: ToString
  nameWithType: Delta.ToString
  fullName: Catalyst.Protocol.Deltas.Delta.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Protocol.Deltas.Delta.WriteTo*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.WriteTo
  name: WriteTo
  nameWithType: Delta.WriteTo
  fullName: Catalyst.Protocol.Deltas.Delta.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Catalyst.Protocol.Deltas.Delta.CalculateSize*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.CalculateSize
  name: CalculateSize
  nameWithType: Delta.CalculateSize
  fullName: Catalyst.Protocol.Deltas.Delta.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta.MergeFrom*
  commentId: Overload:Catalyst.Protocol.Deltas.Delta.MergeFrom
  name: MergeFrom
  nameWithType: Delta.MergeFrom
  fullName: Catalyst.Protocol.Deltas.Delta.MergeFrom
- uid: Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  commentId: M:Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  parent: Google.Protobuf.IMessage{Catalyst.Protocol.Deltas.Delta}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(Delta)
  nameWithType: IMessage<Delta>.MergeFrom(Delta)
  fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Deltas.Delta>.MergeFrom(Catalyst.Protocol.Deltas.Delta)
  nameWithType.vb: IMessage(Of Delta).MergeFrom(Delta)
  fullName.vb: Google.Protobuf.IMessage(Of Catalyst.Protocol.Deltas.Delta).MergeFrom(Catalyst.Protocol.Deltas.Delta)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<Delta>.MergeFrom
    fullName: Google.Protobuf.IMessage<Catalyst.Protocol.Deltas.Delta>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of Delta).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Catalyst.Protocol.Deltas.Delta).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
