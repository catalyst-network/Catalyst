### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient
  commentId: T:Catalyst.Core.Modules.Rpc.Client.RpcClient
  id: RpcClient
  parent: Catalyst.Core.Modules.Rpc.Client
  children:
  - Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory,System.Security.Cryptography.X509Certificates.X509Certificate2,Catalyst.Abstractions.Rpc.IRpcClientConfig,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver},Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)
  - Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync
  - Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse``1(System.Action{``0})
  langs:
  - csharp
  - vb
  name: RpcClient
  nameWithType: RpcClient
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: RpcClient
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  summary: "\nThis class provides a command line interface (CLI) application to connect to Catalyst Node.\nThrough the CLI the node operator will be able to connect to any number of running nodes and run commands.\n"
  example: []
  syntax:
    content: 'public sealed class RpcClient : TcpClient, ITcpClient, IRpcClient, ISocketClient, ISocket, IDisposable'
    content.vb: >-
      Public NotInheritable Class RpcClient

          Inherits TcpClient

          Implements ITcpClient, IRpcClient, ISocketClient, ISocket, IDisposable
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Transport.SocketBase
  - Catalyst.Core.Lib.IO.Transport.ClientBase
  - Catalyst.Core.Lib.IO.Transport.TcpClient
  implements:
  - Catalyst.Abstractions.IO.Transport.ITcpClient
  - Catalyst.Abstractions.Rpc.IRpcClient
  - Catalyst.Abstractions.IO.Transport.ISocketClient
  - Catalyst.Abstractions.IO.Transport.ISocket
  - System.IDisposable
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}})
  - Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory,System.Security.Cryptography.X509Certificates.X509Certificate2,Catalyst.Abstractions.Rpc.IRpcClientConfig,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver},Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)
  commentId: M:Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory,System.Security.Cryptography.X509Certificates.X509Certificate2,Catalyst.Abstractions.Rpc.IRpcClientConfig,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver},Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)
  id: '#ctor(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory,System.Security.Cryptography.X509Certificates.X509Certificate2,Catalyst.Abstractions.Rpc.IRpcClientConfig,System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver},Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)'
  parent: Catalyst.Core.Modules.Rpc.Client.RpcClient
  langs:
  - csharp
  - vb
  name: RpcClient(ITcpClientChannelFactory, X509Certificate2, IRpcClientConfig, IEnumerable<IRpcResponseObserver>, ITcpClientEventLoopGroupFactory)
  nameWithType: RpcClient.RpcClient(ITcpClientChannelFactory, X509Certificate2, IRpcClientConfig, IEnumerable<IRpcResponseObserver>, ITcpClientEventLoopGroupFactory)
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.RpcClient(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory, System.Security.Cryptography.X509Certificates.X509Certificate2, Catalyst.Abstractions.Rpc.IRpcClientConfig, System.Collections.Generic.IEnumerable<Catalyst.Abstractions.IO.Observers.IRpcResponseObserver>, Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
    startLine: 65
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  summary: "\nInitialize a new instance of RPClient\n"
  example: []
  syntax:
    content: public RpcClient(ITcpClientChannelFactory channelFactory, X509Certificate2 certificate, IRpcClientConfig clientConfig, IEnumerable<IRpcResponseObserver> handlers, ITcpClientEventLoopGroupFactory clientEventLoopGroupFactory)
    parameters:
    - id: channelFactory
      type: Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory
      description: ''
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: ''
    - id: clientConfig
      type: Catalyst.Abstractions.Rpc.IRpcClientConfig
      description: rpc node config
    - id: handlers
      type: System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver}
      description: ''
    - id: clientEventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory
      description: ''
    content.vb: Public Sub New(channelFactory As ITcpClientChannelFactory, certificate As X509Certificate2, clientConfig As IRpcClientConfig, handlers As IEnumerable(Of IRpcResponseObserver), clientEventLoopGroupFactory As ITcpClientEventLoopGroupFactory)
  overload: Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor*
  nameWithType.vb: RpcClient.RpcClient(ITcpClientChannelFactory, X509Certificate2, IRpcClientConfig, IEnumerable(Of IRpcResponseObserver), ITcpClientEventLoopGroupFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Rpc.Client.RpcClient.RpcClient(Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory, System.Security.Cryptography.X509Certificates.X509Certificate2, Catalyst.Abstractions.Rpc.IRpcClientConfig, System.Collections.Generic.IEnumerable(Of Catalyst.Abstractions.IO.Observers.IRpcResponseObserver), Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory)
  name.vb: RpcClient(ITcpClientChannelFactory, X509Certificate2, IRpcClientConfig, IEnumerable(Of IRpcResponseObserver), ITcpClientEventLoopGroupFactory)
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse``1(System.Action{``0})
  commentId: M:Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse``1(System.Action{``0})
  id: SubscribeToResponse``1(System.Action{``0})
  parent: Catalyst.Core.Modules.Rpc.Client.RpcClient
  langs:
  - csharp
  - vb
  name: SubscribeToResponse<T>(Action<T>)
  nameWithType: RpcClient.SubscribeToResponse<T>(Action<T>)
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse<T>(System.Action<T>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SubscribeToResponse
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
    startLine: 79
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  syntax:
    content: >-
      public IDisposable SubscribeToResponse<T>(Action<T> onNext)

          where T : IMessage<T>
    parameters:
    - id: onNext
      type: System.Action{{T}}
    typeParameters:
    - id: T
    return:
      type: System.IDisposable
    content.vb: Public Function SubscribeToResponse(Of T As IMessage(Of T))(onNext As Action(Of T)) As IDisposable
  overload: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse*
  implements:
  - Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{{T}})
  nameWithType.vb: RpcClient.SubscribeToResponse(Of T)(Action(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse(Of T)(System.Action(Of T))
  name.vb: SubscribeToResponse(Of T)(Action(Of T))
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync
  commentId: M:Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync
  id: StartAsync
  parent: Catalyst.Core.Modules.Rpc.Client.RpcClient
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: RpcClient.StartAsync()
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StartAsync
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClient.cs
    startLine: 101
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  syntax:
    content: public override Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function StartAsync As Task
  overridden: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  overload: Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync*
  implements:
  - Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Modules.Rpc.Client
  commentId: N:Catalyst.Core.Modules.Rpc.Client
  name: Catalyst.Core.Modules.Rpc.Client
  nameWithType: Catalyst.Core.Modules.Rpc.Client
  fullName: Catalyst.Core.Modules.Rpc.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.SocketBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: SocketBase
  nameWithType: SocketBase
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase
  commentId: T:Catalyst.Core.Lib.IO.Transport.ClientBase
  parent: Catalyst.Core.Lib.IO.Transport
  name: ClientBase
  nameWithType: ClientBase
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase
- uid: Catalyst.Core.Lib.IO.Transport.TcpClient
  commentId: T:Catalyst.Core.Lib.IO.Transport.TcpClient
  parent: Catalyst.Core.Lib.IO.Transport
  name: TcpClient
  nameWithType: TcpClient
  fullName: Catalyst.Core.Lib.IO.Transport.TcpClient
- uid: Catalyst.Abstractions.IO.Transport.ITcpClient
  commentId: T:Catalyst.Abstractions.IO.Transport.ITcpClient
  parent: Catalyst.Abstractions.IO.Transport
  name: ITcpClient
  nameWithType: ITcpClient
  fullName: Catalyst.Abstractions.IO.Transport.ITcpClient
- uid: Catalyst.Abstractions.Rpc.IRpcClient
  commentId: T:Catalyst.Abstractions.Rpc.IRpcClient
  parent: Catalyst.Abstractions.Rpc
  name: IRpcClient
  nameWithType: IRpcClient
  fullName: Catalyst.Abstractions.Rpc.IRpcClient
- uid: Catalyst.Abstractions.IO.Transport.ISocketClient
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocketClient
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocketClient
  nameWithType: ISocketClient
  fullName: Catalyst.Abstractions.IO.Transport.ISocketClient
- uid: Catalyst.Abstractions.IO.Transport.ISocket
  commentId: T:Catalyst.Abstractions.IO.Transport.ISocket
  parent: Catalyst.Abstractions.IO.Transport
  name: ISocket
  nameWithType: ISocket
  fullName: Catalyst.Abstractions.IO.Transport.ISocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}})
  commentId: M:Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  parent: Catalyst.Core.Lib.IO.Transport.ClientBase
  definition: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  name: SendMessage<T>(IMessageDto<T>)
  nameWithType: ClientBase.SendMessage<T>(IMessageDto<T>)
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>)
  nameWithType.vb: ClientBase.SendMessage(Of T)(IMessageDto(Of T))
  fullName.vb: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T))
  name.vb: SendMessage(Of T)(IMessageDto(Of T))
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage<T>
    nameWithType: ClientBase.SendMessage<T>
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage(Of T)
    nameWithType: ClientBase.SendMessage(Of T)
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: ChannelFactory
  nameWithType: SocketBase.ChannelFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.ChannelFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  commentId: F:Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: EventLoopGroupFactory
  nameWithType: SocketBase.EventLoopGroupFactory
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.EventLoopGroupFactory
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  commentId: P:Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Channel
  nameWithType: SocketBase.Channel
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Channel
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: Dispose()
  nameWithType: SocketBase.Dispose()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SocketBase.Dispose(Boolean)
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SocketBase.Dispose
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Transport
  commentId: N:Catalyst.Core.Lib.IO.Transport
  name: Catalyst.Core.Lib.IO.Transport
  nameWithType: Catalyst.Core.Lib.IO.Transport
  fullName: Catalyst.Core.Lib.IO.Transport
- uid: Catalyst.Abstractions.IO.Transport
  commentId: N:Catalyst.Abstractions.IO.Transport
  name: Catalyst.Abstractions.IO.Transport
  nameWithType: Catalyst.Abstractions.IO.Transport
  fullName: Catalyst.Abstractions.IO.Transport
- uid: Catalyst.Abstractions.Rpc
  commentId: N:Catalyst.Abstractions.Rpc
  name: Catalyst.Abstractions.Rpc
  nameWithType: Catalyst.Abstractions.Rpc
  fullName: Catalyst.Abstractions.Rpc
- uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  commentId: M:Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
  name: SendMessage<T>(IMessageDto<T>)
  nameWithType: ClientBase.SendMessage<T>(IMessageDto<T>)
  fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>)
  nameWithType.vb: ClientBase.SendMessage(Of T)(IMessageDto(Of T))
  fullName.vb: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T))
  name.vb: SendMessage(Of T)(IMessageDto(Of T))
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage<T>
    nameWithType: ClientBase.SendMessage<T>
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage``1(Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{``0})
    name: SendMessage(Of T)
    nameWithType: ClientBase.SendMessage(Of T)
    fullName: Catalyst.Core.Lib.IO.Transport.ClientBase.SendMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Rpc.Client.RpcClient.#ctor
  name: RpcClient
  nameWithType: RpcClient.RpcClient
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.RpcClient
- uid: Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory
  commentId: T:Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory
  parent: Catalyst.Abstractions.IO.Transport.Channels
  name: ITcpClientChannelFactory
  nameWithType: ITcpClientChannelFactory
  fullName: Catalyst.Abstractions.IO.Transport.Channels.ITcpClientChannelFactory
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: Catalyst.Abstractions.Rpc.IRpcClientConfig
  commentId: T:Catalyst.Abstractions.Rpc.IRpcClientConfig
  parent: Catalyst.Abstractions.Rpc
  name: IRpcClientConfig
  nameWithType: IRpcClientConfig
  fullName: Catalyst.Abstractions.Rpc.IRpcClientConfig
- uid: System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver}
  commentId: T:System.Collections.Generic.IEnumerable{Catalyst.Abstractions.IO.Observers.IRpcResponseObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IRpcResponseObserver>
  nameWithType: IEnumerable<IRpcResponseObserver>
  fullName: System.Collections.Generic.IEnumerable<Catalyst.Abstractions.IO.Observers.IRpcResponseObserver>
  nameWithType.vb: IEnumerable(Of IRpcResponseObserver)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Catalyst.Abstractions.IO.Observers.IRpcResponseObserver)
  name.vb: IEnumerable(Of IRpcResponseObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.IO.Observers.IRpcResponseObserver
    name: IRpcResponseObserver
    nameWithType: IRpcResponseObserver
    fullName: Catalyst.Abstractions.IO.Observers.IRpcResponseObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.IO.Observers.IRpcResponseObserver
    name: IRpcResponseObserver
    nameWithType: IRpcResponseObserver
    fullName: Catalyst.Abstractions.IO.Observers.IRpcResponseObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: ITcpClientEventLoopGroupFactory
  nameWithType: ITcpClientEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.ITcpClientEventLoopGroupFactory
- uid: Catalyst.Abstractions.IO.Transport.Channels
  commentId: N:Catalyst.Abstractions.IO.Transport.Channels
  name: Catalyst.Abstractions.IO.Transport.Channels
  nameWithType: Catalyst.Abstractions.IO.Transport.Channels
  fullName: Catalyst.Abstractions.IO.Transport.Channels
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse*
  commentId: Overload:Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse
  name: SubscribeToResponse
  nameWithType: RpcClient.SubscribeToResponse
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.SubscribeToResponse
- uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{{T}})
  commentId: M:Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
  parent: Catalyst.Abstractions.Rpc.IRpcClient
  definition: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
  name: SubscribeToResponse<T>(Action<T>)
  nameWithType: IRpcClient.SubscribeToResponse<T>(Action<T>)
  fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse<T>(System.Action<T>)
  nameWithType.vb: IRpcClient.SubscribeToResponse(Of T)(Action(Of T))
  fullName.vb: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse(Of T)(System.Action(Of T))
  name.vb: SubscribeToResponse(Of T)(Action(Of T))
  spec.csharp:
  - uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
    name: SubscribeToResponse<T>
    nameWithType: IRpcClient.SubscribeToResponse<T>
    fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
    name: SubscribeToResponse(Of T)
    nameWithType: IRpcClient.SubscribeToResponse(Of T)
    fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
  commentId: M:Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
  isExternal: true
  name: SubscribeToResponse<T>(Action<T>)
  nameWithType: IRpcClient.SubscribeToResponse<T>(Action<T>)
  fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse<T>(System.Action<T>)
  nameWithType.vb: IRpcClient.SubscribeToResponse(Of T)(Action(Of T))
  fullName.vb: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse(Of T)(System.Action(Of T))
  name.vb: SubscribeToResponse(Of T)(Action(Of T))
  spec.csharp:
  - uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
    name: SubscribeToResponse<T>
    nameWithType: IRpcClient.SubscribeToResponse<T>
    fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse``1(System.Action{``0})
    name: SubscribeToResponse(Of T)
    nameWithType: IRpcClient.SubscribeToResponse(Of T)
    fullName: Catalyst.Abstractions.Rpc.IRpcClient.SubscribeToResponse(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  commentId: M:Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  parent: Catalyst.Core.Lib.IO.Transport.SocketBase
  name: StartAsync()
  nameWithType: SocketBase.StartAsync()
  fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync()
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
    name: StartAsync
    nameWithType: SocketBase.StartAsync
    fullName: Catalyst.Core.Lib.IO.Transport.SocketBase.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync*
  commentId: Overload:Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync
  name: StartAsync
  nameWithType: RpcClient.StartAsync
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClient.StartAsync
- uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  commentId: M:Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  parent: Catalyst.Abstractions.IO.Transport.ISocket
  name: StartAsync()
  nameWithType: ISocket.StartAsync()
  fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync()
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
    name: StartAsync
    nameWithType: ISocket.StartAsync
    fullName: Catalyst.Abstractions.IO.Transport.ISocket.StartAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
