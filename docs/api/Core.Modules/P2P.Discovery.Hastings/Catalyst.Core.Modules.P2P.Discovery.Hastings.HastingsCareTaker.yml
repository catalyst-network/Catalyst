### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  commentId: T:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  id: HastingsCareTaker
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings
  children:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor
  - Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  - Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get
  - Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
  - Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek
  langs:
  - csharp
  - vb
  name: HastingsCareTaker
  nameWithType: HastingsCareTaker
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: HastingsCareTaker
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 29
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  syntax:
    content: 'public sealed class HastingsCareTaker : IHastingsCareTaker'
    content.vb: >-
      Public NotInheritable Class HastingsCareTaker

          Implements IHastingsCareTaker
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
  commentId: P:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
  id: HastingMementoList
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  langs:
  - csharp
  - vb
  name: HastingMementoList
  nameWithType: HastingsCareTaker.HastingMementoList
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: HastingMementoList
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  syntax:
    content: public ConcurrentStack<IHastingsMemento> HastingMementoList { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentStack{Catalyst.Abstractions.P2P.Discovery.IHastingsMemento}
    content.vb: Public ReadOnly Property HastingMementoList As ConcurrentStack(Of IHastingsMemento)
  overload: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList*
  implements:
  - Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.HastingMementoList
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor
  commentId: M:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor
  id: '#ctor'
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  langs:
  - csharp
  - vb
  name: HastingsCareTaker()
  nameWithType: HastingsCareTaker.HastingsCareTaker()
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingsCareTaker()
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  syntax:
    content: public HastingsCareTaker()
    content.vb: Public Sub New
  overload: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  commentId: M:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  id: Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  langs:
  - csharp
  - vb
  name: Add(IHastingsMemento)
  nameWithType: HastingsCareTaker.Add(IHastingsMemento)
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Add
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  example: []
  syntax:
    content: public void Add(IHastingsMemento hastingsMemento)
    parameters:
    - id: hastingsMemento
      type: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    content.vb: Public Sub Add(hastingsMemento As IHastingsMemento)
  overload: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add*
  implements:
  - Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek
  commentId: M:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek
  id: Peek
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: HastingsCareTaker.Peek()
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Peek
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  syntax:
    content: public IHastingsMemento Peek()
    return:
      type: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    content.vb: Public Function Peek As IHastingsMemento
  overload: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek*
  implements:
  - Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get
  commentId: M:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get
  id: Get
  parent: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: HastingsCareTaker.Get()
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Get
    path: ../src/Catalyst.Core.Modules.P2P.Discovery.Hastings/HastingsCareTaker.cs
    startLine: 55
  assemblies:
  - Catalyst.Core.Modules.P2P.Discovery.Hastings
  namespace: Catalyst.Core.Modules.P2P.Discovery.Hastings
  example: []
  syntax:
    content: public IHastingsMemento Get()
    return:
      type: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    content.vb: Public Function Get As IHastingsMemento
  overload: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get*
  implements:
  - Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings
  commentId: N:Catalyst.Core.Modules.P2P.Discovery.Hastings
  name: Catalyst.Core.Modules.P2P.Discovery.Hastings
  nameWithType: Catalyst.Core.Modules.P2P.Discovery.Hastings
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  commentId: T:Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  parent: Catalyst.Abstractions.P2P.Discovery
  name: IHastingsCareTaker
  nameWithType: IHastingsCareTaker
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.P2P.Discovery
  commentId: N:Catalyst.Abstractions.P2P.Discovery
  name: Catalyst.Abstractions.P2P.Discovery
  nameWithType: Catalyst.Abstractions.P2P.Discovery
  fullName: Catalyst.Abstractions.P2P.Discovery
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList*
  commentId: Overload:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
  name: HastingMementoList
  nameWithType: HastingsCareTaker.HastingMementoList
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingMementoList
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.HastingMementoList
  commentId: P:Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.HastingMementoList
  parent: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  name: HastingMementoList
  nameWithType: IHastingsCareTaker.HastingMementoList
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.HastingMementoList
- uid: System.Collections.Concurrent.ConcurrentStack{Catalyst.Abstractions.P2P.Discovery.IHastingsMemento}
  commentId: T:System.Collections.Concurrent.ConcurrentStack{Catalyst.Abstractions.P2P.Discovery.IHastingsMemento}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentStack`1
  name: ConcurrentStack<IHastingsMemento>
  nameWithType: ConcurrentStack<IHastingsMemento>
  fullName: System.Collections.Concurrent.ConcurrentStack<Catalyst.Abstractions.P2P.Discovery.IHastingsMemento>
  nameWithType.vb: ConcurrentStack(Of IHastingsMemento)
  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  name.vb: ConcurrentStack(Of IHastingsMemento)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    nameWithType: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    name: IHastingsMemento
    nameWithType: IHastingsMemento
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    nameWithType: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    name: IHastingsMemento
    nameWithType: IHastingsMemento
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentStack`1
  commentId: T:System.Collections.Concurrent.ConcurrentStack`1
  isExternal: true
  name: ConcurrentStack<T>
  nameWithType: ConcurrentStack<T>
  fullName: System.Collections.Concurrent.ConcurrentStack<T>
  nameWithType.vb: ConcurrentStack(Of T)
  fullName.vb: System.Collections.Concurrent.ConcurrentStack(Of T)
  name.vb: ConcurrentStack(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    nameWithType: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentStack`1
    name: ConcurrentStack
    nameWithType: ConcurrentStack
    fullName: System.Collections.Concurrent.ConcurrentStack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor*
  commentId: Overload:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.#ctor
  name: HastingsCareTaker
  nameWithType: HastingsCareTaker.HastingsCareTaker
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.HastingsCareTaker
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add*
  commentId: Overload:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add
  name: Add
  nameWithType: HastingsCareTaker.Add
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Add
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  commentId: M:Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  parent: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  name: Add(IHastingsMemento)
  nameWithType: IHastingsCareTaker.Add(IHastingsMemento)
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
    name: Add
    nameWithType: IHastingsCareTaker.Add
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    name: IHastingsMemento
    nameWithType: IHastingsMemento
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add(Catalyst.Abstractions.P2P.Discovery.IHastingsMemento)
    name: Add
    nameWithType: IHastingsCareTaker.Add
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
    name: IHastingsMemento
    nameWithType: IHastingsMemento
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  commentId: T:Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
  parent: Catalyst.Abstractions.P2P.Discovery
  name: IHastingsMemento
  nameWithType: IHastingsMemento
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsMemento
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek*
  commentId: Overload:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek
  name: Peek
  nameWithType: HastingsCareTaker.Peek
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Peek
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
  commentId: M:Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
  parent: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  name: Peek()
  nameWithType: IHastingsCareTaker.Peek()
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek()
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
    name: Peek
    nameWithType: IHastingsCareTaker.Peek
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
    name: Peek
    nameWithType: IHastingsCareTaker.Peek
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get*
  commentId: Overload:Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get
  name: Get
  nameWithType: HastingsCareTaker.Get
  fullName: Catalyst.Core.Modules.P2P.Discovery.Hastings.HastingsCareTaker.Get
- uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
  commentId: M:Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
  parent: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker
  name: Get()
  nameWithType: IHastingsCareTaker.Get()
  fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get()
  spec.csharp:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
    name: Get
    nameWithType: IHastingsCareTaker.Get
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
    name: Get
    nameWithType: IHastingsCareTaker.Get
    fullName: Catalyst.Abstractions.P2P.Discovery.IHastingsCareTaker.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
