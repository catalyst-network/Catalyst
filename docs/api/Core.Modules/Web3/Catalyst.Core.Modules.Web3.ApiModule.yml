### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Web3.ApiModule
  commentId: T:Catalyst.Core.Modules.Web3.ApiModule
  id: ApiModule
  parent: Catalyst.Core.Modules.Web3
  children:
  - Catalyst.Core.Modules.Web3.ApiModule.#ctor(System.String,System.Collections.Generic.List{System.String},System.Boolean)
  - Catalyst.Core.Modules.Web3.ApiModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  - Catalyst.Core.Modules.Web3.ApiModule.Load(Autofac.ContainerBuilder)
  langs:
  - csharp
  - vb
  name: ApiModule
  nameWithType: ApiModule
  fullName: Catalyst.Core.Modules.Web3.ApiModule
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/ApiModule.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ApiModule
    path: ../src/Catalyst.Core.Modules.Web3/ApiModule.cs
    startLine: 40
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3
  syntax:
    content: 'public sealed class ApiModule : Module, IModule'
    content.vb: >-
      Public NotInheritable Class ApiModule

          Inherits

           Module  Implements IModule
  inheritance:
  - System.Object
  - Autofac.Module
  implements:
  - Autofac.Core.IModule
  inheritedMembers:
  - Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
  - Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)
  - Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry,Autofac.Core.IRegistrationSource)
  - Autofac.Module.ThisAssembly
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.Web3.ApiModule.#ctor(System.String,System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:Catalyst.Core.Modules.Web3.ApiModule.#ctor(System.String,System.Collections.Generic.List{System.String},System.Boolean)
  id: '#ctor(System.String,System.Collections.Generic.List{System.String},System.Boolean)'
  parent: Catalyst.Core.Modules.Web3.ApiModule
  langs:
  - csharp
  - vb
  name: ApiModule(String, List<String>, Boolean)
  nameWithType: ApiModule.ApiModule(String, List<String>, Boolean)
  fullName: Catalyst.Core.Modules.Web3.ApiModule.ApiModule(System.String, System.Collections.Generic.List<System.String>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/ApiModule.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Web3/ApiModule.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3
  syntax:
    content: public ApiModule(string apiBindingAddress, List<string> controllerModules, bool addSwagger = true)
    parameters:
    - id: apiBindingAddress
      type: System.String
    - id: controllerModules
      type: System.Collections.Generic.List{System.String}
    - id: addSwagger
      type: System.Boolean
    content.vb: Public Sub New(apiBindingAddress As String, controllerModules As List(Of String), addSwagger As Boolean = True)
  overload: Catalyst.Core.Modules.Web3.ApiModule.#ctor*
  nameWithType.vb: ApiModule.ApiModule(String, List(Of String), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Web3.ApiModule.ApiModule(System.String, System.Collections.Generic.List(Of System.String), System.Boolean)
  name.vb: ApiModule(String, List(Of String), Boolean)
- uid: Catalyst.Core.Modules.Web3.ApiModule.Load(Autofac.ContainerBuilder)
  commentId: M:Catalyst.Core.Modules.Web3.ApiModule.Load(Autofac.ContainerBuilder)
  id: Load(Autofac.ContainerBuilder)
  parent: Catalyst.Core.Modules.Web3.ApiModule
  langs:
  - csharp
  - vb
  name: Load(ContainerBuilder)
  nameWithType: ApiModule.Load(ContainerBuilder)
  fullName: Catalyst.Core.Modules.Web3.ApiModule.Load(Autofac.ContainerBuilder)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/ApiModule.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Load
    path: ../src/Catalyst.Core.Modules.Web3/ApiModule.cs
    startLine: 54
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3
  syntax:
    content: protected override void Load(ContainerBuilder builder)
    parameters:
    - id: builder
      type: Autofac.ContainerBuilder
    content.vb: Protected Overrides Sub Load(builder As ContainerBuilder)
  overridden: Autofac.Module.Load(Autofac.ContainerBuilder)
  overload: Catalyst.Core.Modules.Web3.ApiModule.Load*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  commentId: M:Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  id: ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Autofac.ContainerBuilder)
  parent: Catalyst.Core.Modules.Web3.ApiModule
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection, ContainerBuilder)
  nameWithType: ApiModule.ConfigureServices(IServiceCollection, ContainerBuilder)
  fullName: Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Autofac.ContainerBuilder)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/ApiModule.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ConfigureServices
    path: ../src/Catalyst.Core.Modules.Web3/ApiModule.cs
    startLine: 81
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3
  syntax:
    content: public void ConfigureServices(IServiceCollection services, ContainerBuilder containerBuilder)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: containerBuilder
      type: Autofac.ContainerBuilder
    content.vb: Public Sub ConfigureServices(services As IServiceCollection, containerBuilder As ContainerBuilder)
  overload: Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Web3.ApiModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Catalyst.Core.Modules.Web3.ApiModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Catalyst.Core.Modules.Web3.ApiModule
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder)
  nameWithType: ApiModule.Configure(IApplicationBuilder)
  fullName: Catalyst.Core.Modules.Web3.ApiModule.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/ApiModule.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Configure
    path: ../src/Catalyst.Core.Modules.Web3/ApiModule.cs
    startLine: 109
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3
  syntax:
    content: public void Configure(IApplicationBuilder app)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    content.vb: Public Sub Configure(app As IApplicationBuilder)
  overload: Catalyst.Core.Modules.Web3.ApiModule.Configure*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.Web3
  commentId: N:Catalyst.Core.Modules.Web3
  name: Catalyst.Core.Modules.Web3
  nameWithType: Catalyst.Core.Modules.Web3
  fullName: Catalyst.Core.Modules.Web3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Autofac.Module
  commentId: T:Autofac.Module
  parent: Autofac
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: Autofac.Module
- uid: Autofac.Core.IModule
  commentId: T:Autofac.Core.IModule
  parent: Autofac.Core
  isExternal: true
  name: IModule
  nameWithType: IModule
  fullName: Autofac.Core.IModule
- uid: Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
  commentId: M:Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
  parent: Autofac.Module
  isExternal: true
  name: Configure(IComponentRegistry)
  nameWithType: Module.Configure(IComponentRegistry)
  fullName: Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
  spec.csharp:
  - uid: Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
    name: Configure
    nameWithType: Module.Configure
    fullName: Autofac.Module.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Autofac.Module.Configure(Autofac.Core.IComponentRegistry)
    name: Configure
    nameWithType: Module.Configure
    fullName: Autofac.Module.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)
  commentId: M:Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)
  parent: Autofac.Module
  isExternal: true
  name: AttachToComponentRegistration(IComponentRegistry, IComponentRegistration)
  nameWithType: Module.AttachToComponentRegistration(IComponentRegistry, IComponentRegistration)
  fullName: Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry, Autofac.Core.IComponentRegistration)
  spec.csharp:
  - uid: Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)
    name: AttachToComponentRegistration
    nameWithType: Module.AttachToComponentRegistration
    fullName: Autofac.Module.AttachToComponentRegistration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Autofac.Core.IComponentRegistration
    name: IComponentRegistration
    nameWithType: IComponentRegistration
    fullName: Autofac.Core.IComponentRegistration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)
    name: AttachToComponentRegistration
    nameWithType: Module.AttachToComponentRegistration
    fullName: Autofac.Module.AttachToComponentRegistration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Autofac.Core.IComponentRegistration
    name: IComponentRegistration
    nameWithType: IComponentRegistration
    fullName: Autofac.Core.IComponentRegistration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry,Autofac.Core.IRegistrationSource)
  commentId: M:Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry,Autofac.Core.IRegistrationSource)
  parent: Autofac.Module
  isExternal: true
  name: AttachToRegistrationSource(IComponentRegistry, IRegistrationSource)
  nameWithType: Module.AttachToRegistrationSource(IComponentRegistry, IRegistrationSource)
  fullName: Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry, Autofac.Core.IRegistrationSource)
  spec.csharp:
  - uid: Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry,Autofac.Core.IRegistrationSource)
    name: AttachToRegistrationSource
    nameWithType: Module.AttachToRegistrationSource
    fullName: Autofac.Module.AttachToRegistrationSource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Autofac.Core.IRegistrationSource
    name: IRegistrationSource
    nameWithType: IRegistrationSource
    fullName: Autofac.Core.IRegistrationSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Autofac.Module.AttachToRegistrationSource(Autofac.Core.IComponentRegistry,Autofac.Core.IRegistrationSource)
    name: AttachToRegistrationSource
    nameWithType: Module.AttachToRegistrationSource
    fullName: Autofac.Module.AttachToRegistrationSource
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.Core.IComponentRegistry
    name: IComponentRegistry
    nameWithType: IComponentRegistry
    fullName: Autofac.Core.IComponentRegistry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Autofac.Core.IRegistrationSource
    name: IRegistrationSource
    nameWithType: IRegistrationSource
    fullName: Autofac.Core.IRegistrationSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Autofac.Module.ThisAssembly
  commentId: P:Autofac.Module.ThisAssembly
  parent: Autofac.Module
  isExternal: true
  name: ThisAssembly
  nameWithType: Module.ThisAssembly
  fullName: Autofac.Module.ThisAssembly
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Autofac
  commentId: N:Autofac
  isExternal: true
  name: Autofac
  nameWithType: Autofac
  fullName: Autofac
- uid: Autofac.Core
  commentId: N:Autofac.Core
  isExternal: true
  name: Autofac.Core
  nameWithType: Autofac.Core
  fullName: Autofac.Core
- uid: Catalyst.Core.Modules.Web3.ApiModule.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Web3.ApiModule.#ctor
  name: ApiModule
  nameWithType: ApiModule.ApiModule
  fullName: Catalyst.Core.Modules.Web3.ApiModule.ApiModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Autofac.Module.Load(Autofac.ContainerBuilder)
  commentId: M:Autofac.Module.Load(Autofac.ContainerBuilder)
  parent: Autofac.Module
  isExternal: true
  name: Load(ContainerBuilder)
  nameWithType: Module.Load(ContainerBuilder)
  fullName: Autofac.Module.Load(Autofac.ContainerBuilder)
  spec.csharp:
  - uid: Autofac.Module.Load(Autofac.ContainerBuilder)
    name: Load
    nameWithType: Module.Load
    fullName: Autofac.Module.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.ContainerBuilder
    name: ContainerBuilder
    nameWithType: ContainerBuilder
    fullName: Autofac.ContainerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Autofac.Module.Load(Autofac.ContainerBuilder)
    name: Load
    nameWithType: Module.Load
    fullName: Autofac.Module.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Autofac.ContainerBuilder
    name: ContainerBuilder
    nameWithType: ContainerBuilder
    fullName: Autofac.ContainerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Web3.ApiModule.Load*
  commentId: Overload:Catalyst.Core.Modules.Web3.ApiModule.Load
  name: Load
  nameWithType: ApiModule.Load
  fullName: Catalyst.Core.Modules.Web3.ApiModule.Load
- uid: Autofac.ContainerBuilder
  commentId: T:Autofac.ContainerBuilder
  parent: Autofac
  isExternal: true
  name: ContainerBuilder
  nameWithType: ContainerBuilder
  fullName: Autofac.ContainerBuilder
- uid: Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices*
  commentId: Overload:Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices
  name: ConfigureServices
  nameWithType: ApiModule.ConfigureServices
  fullName: Catalyst.Core.Modules.Web3.ApiModule.ConfigureServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Catalyst.Core.Modules.Web3.ApiModule.Configure*
  commentId: Overload:Catalyst.Core.Modules.Web3.ApiModule.Configure
  name: Configure
  nameWithType: ApiModule.Configure
  fullName: Catalyst.Core.Modules.Web3.ApiModule.Configure
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
