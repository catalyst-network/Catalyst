### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash
  commentId: T:Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash
  id: TransactionComparerByFeeTimestampAndHash
  parent: Catalyst.Core.Modules.Consensus
  children:
  - Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  - Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
  langs:
  - csharp
  - vb
  name: TransactionComparerByFeeTimestampAndHash
  nameWithType: TransactionComparerByFeeTimestampAndHash
  fullName: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TransactionComparerByFeeTimestampAndHash
    path: ../src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus
  example: []
  syntax:
    content: 'public class TransactionComparerByFeeTimestampAndHash : ITransactionComparer, IComparer<TransactionBroadcast>'
    content.vb: >-
      Public Class TransactionComparerByFeeTimestampAndHash

          Implements ITransactionComparer, IComparer(Of TransactionBroadcast)
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Consensus.ITransactionComparer
  - System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  commentId: M:Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  id: Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  parent: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash
  langs:
  - csharp
  - vb
  name: Compare(TransactionBroadcast, TransactionBroadcast)
  nameWithType: TransactionComparerByFeeTimestampAndHash.Compare(TransactionBroadcast, TransactionBroadcast)
  fullName: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare(Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Protocol.Wire.TransactionBroadcast)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Compare
    path: ../src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus
  syntax:
    content: public int Compare(TransactionBroadcast x, TransactionBroadcast y)
    parameters:
    - id: x
      type: Catalyst.Protocol.Wire.TransactionBroadcast
    - id: y
      type: Catalyst.Protocol.Wire.TransactionBroadcast
    return:
      type: System.Int32
    content.vb: Public Function Compare(x As TransactionBroadcast, y As TransactionBroadcast) As Integer
  overload: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare*
  implements:
  - System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
  commentId: P:Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
  id: Default
  parent: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: TransactionComparerByFeeTimestampAndHash.Default
  fullName: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Default
    path: ../src/Catalyst.Core.Modules.Consensus/ByFeeTimestampAndHash.cs
    startLine: 66
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus
  syntax:
    content: public static ITransactionComparer Default { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Consensus.ITransactionComparer
    content.vb: Public Shared ReadOnly Property Default As ITransactionComparer
  overload: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Catalyst.Core.Modules.Consensus
  commentId: N:Catalyst.Core.Modules.Consensus
  name: Catalyst.Core.Modules.Consensus
  nameWithType: Catalyst.Core.Modules.Consensus
  fullName: Catalyst.Core.Modules.Consensus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Consensus.ITransactionComparer
  commentId: T:Catalyst.Abstractions.Consensus.ITransactionComparer
  parent: Catalyst.Abstractions.Consensus
  name: ITransactionComparer
  nameWithType: ITransactionComparer
  fullName: Catalyst.Abstractions.Consensus.ITransactionComparer
- uid: System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}
  commentId: T:System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TransactionBroadcast>
  nameWithType: IComparer<TransactionBroadcast>
  fullName: System.Collections.Generic.IComparer<Catalyst.Protocol.Wire.TransactionBroadcast>
  nameWithType.vb: IComparer(Of TransactionBroadcast)
  fullName.vb: System.Collections.Generic.IComparer(Of Catalyst.Protocol.Wire.TransactionBroadcast)
  name.vb: IComparer(Of TransactionBroadcast)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Consensus
  commentId: N:Catalyst.Abstractions.Consensus
  name: Catalyst.Abstractions.Consensus
  nameWithType: Catalyst.Abstractions.Consensus
  fullName: Catalyst.Abstractions.Consensus
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare*
  commentId: Overload:Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare
  name: Compare
  nameWithType: TransactionComparerByFeeTimestampAndHash.Compare
  fullName: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Compare
- uid: System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  commentId: M:System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}.Compare(Catalyst.Protocol.Wire.TransactionBroadcast,Catalyst.Protocol.Wire.TransactionBroadcast)
  parent: System.Collections.Generic.IComparer{Catalyst.Protocol.Wire.TransactionBroadcast}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(TransactionBroadcast, TransactionBroadcast)
  nameWithType: IComparer<TransactionBroadcast>.Compare(TransactionBroadcast, TransactionBroadcast)
  fullName: System.Collections.Generic.IComparer<Catalyst.Protocol.Wire.TransactionBroadcast>.Compare(Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Protocol.Wire.TransactionBroadcast)
  nameWithType.vb: IComparer(Of TransactionBroadcast).Compare(TransactionBroadcast, TransactionBroadcast)
  fullName.vb: System.Collections.Generic.IComparer(Of Catalyst.Protocol.Wire.TransactionBroadcast).Compare(Catalyst.Protocol.Wire.TransactionBroadcast, Catalyst.Protocol.Wire.TransactionBroadcast)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<TransactionBroadcast>.Compare
    fullName: System.Collections.Generic.IComparer<Catalyst.Protocol.Wire.TransactionBroadcast>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of TransactionBroadcast).Compare
    fullName: System.Collections.Generic.IComparer(Of Catalyst.Protocol.Wire.TransactionBroadcast).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Wire.TransactionBroadcast
    name: TransactionBroadcast
    nameWithType: TransactionBroadcast
    fullName: Catalyst.Protocol.Wire.TransactionBroadcast
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire.TransactionBroadcast
  commentId: T:Catalyst.Protocol.Wire.TransactionBroadcast
  parent: Catalyst.Protocol.Wire
  name: TransactionBroadcast
  nameWithType: TransactionBroadcast
  fullName: Catalyst.Protocol.Wire.TransactionBroadcast
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default*
  commentId: Overload:Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
  name: Default
  nameWithType: TransactionComparerByFeeTimestampAndHash.Default
  fullName: Catalyst.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash.Default
