### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  commentId: T:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  id: DeltaCache
  parent: Catalyst.Core.Modules.Consensus.Deltas
  children:
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor(Catalyst.Abstractions.Hashing.IHashProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader,Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider,Serilog.ILogger)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose(System.Boolean)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey(Catalyst.Protocol.Wire.CandidateDeltaBroadcast)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DeltaCache
  nameWithType: DeltaCache
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DeltaCache
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: 'public class DeltaCache : IDeltaCache, IDisposable'
    content.vb: >-
      Public Class DeltaCache

          Implements IDeltaCache, IDisposable
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
  commentId: P:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
  id: GenesisHash
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: GenesisHash
  nameWithType: DeltaCache.GenesisHash
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GenesisHash
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public MultiHash GenesisHash { get; set; }
    parameters: []
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Public Property GenesisHash As MultiHash
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisHash
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
  commentId: P:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
  id: GenesisAddress
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: GenesisAddress
  nameWithType: DeltaCache.GenesisAddress
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GenesisAddress
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public string GenesisAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GenesisAddress As String
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey(Catalyst.Protocol.Wire.CandidateDeltaBroadcast)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey(Catalyst.Protocol.Wire.CandidateDeltaBroadcast)
  id: GetLocalDeltaCacheKey(Catalyst.Protocol.Wire.CandidateDeltaBroadcast)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: GetLocalDeltaCacheKey(CandidateDeltaBroadcast)
  nameWithType: DeltaCache.GetLocalDeltaCacheKey(CandidateDeltaBroadcast)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey(Catalyst.Protocol.Wire.CandidateDeltaBroadcast)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetLocalDeltaCacheKey
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public static string GetLocalDeltaCacheKey(CandidateDeltaBroadcast candidate)
    parameters:
    - id: candidate
      type: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    return:
      type: System.String
    content.vb: Public Shared Function GetLocalDeltaCacheKey(candidate As CandidateDeltaBroadcast) As String
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor(Catalyst.Abstractions.Hashing.IHashProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader,Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider,Serilog.ILogger)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor(Catalyst.Abstractions.Hashing.IHashProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader,Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider,Serilog.ILogger)
  id: '#ctor(Catalyst.Abstractions.Hashing.IHashProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache,Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader,Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider,Serilog.ILogger)'
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: DeltaCache(IHashProvider, IMemoryCache, IDeltaDfsReader, IDeltaCacheChangeTokenProvider, ILogger)
  nameWithType: DeltaCache.DeltaCache(IHashProvider, IMemoryCache, IDeltaDfsReader, IDeltaCacheChangeTokenProvider, ILogger)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.DeltaCache(Catalyst.Abstractions.Hashing.IHashProvider, Microsoft.Extensions.Caching.Memory.IMemoryCache, Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader, Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider, Serilog.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 53
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public DeltaCache(IHashProvider hashProvider, IMemoryCache memoryCache, IDeltaDfsReader dfsReader, IDeltaCacheChangeTokenProvider changeTokenProvider, ILogger logger)
    parameters:
    - id: hashProvider
      type: Catalyst.Abstractions.Hashing.IHashProvider
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    - id: dfsReader
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader
    - id: changeTokenProvider
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider
    - id: logger
      type: Serilog.ILogger
    content.vb: Public Sub New(hashProvider As IHashProvider, memoryCache As IMemoryCache, dfsReader As IDeltaDfsReader, changeTokenProvider As IDeltaCacheChangeTokenProvider, logger As ILogger)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  id: TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: TryGetOrAddConfirmedDelta(MultiHash, out Delta, CancellationToken)
  nameWithType: DeltaCache.TryGetOrAddConfirmedDelta(MultiHash, out Delta, CancellationToken)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, out Catalyst.Protocol.Deltas.Delta, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TryGetOrAddConfirmedDelta
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 80
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public bool TryGetOrAddConfirmedDelta(MultiHash hash, out Delta delta, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: hash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    - id: delta
      type: Catalyst.Protocol.Deltas.Delta
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Boolean
    content.vb: Public Function TryGetOrAddConfirmedDelta(hash As MultiHash, ByRef delta As Delta, cancellationToken As CancellationToken = Nothing) As Boolean
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  nameWithType.vb: DeltaCache.TryGetOrAddConfirmedDelta(MultiHash, ByRef Delta, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, ByRef Catalyst.Protocol.Deltas.Delta, System.Threading.CancellationToken)
  name.vb: TryGetOrAddConfirmedDelta(MultiHash, ByRef Delta, CancellationToken)
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  id: TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: TryGetLocalDelta(CandidateDeltaBroadcast, out Delta)
  nameWithType: DeltaCache.TryGetLocalDelta(CandidateDeltaBroadcast, out Delta)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast, out Catalyst.Protocol.Deltas.Delta)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TryGetLocalDelta
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 99
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public bool TryGetLocalDelta(CandidateDeltaBroadcast candidate, out Delta delta)
    parameters:
    - id: candidate
      type: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    - id: delta
      type: Catalyst.Protocol.Deltas.Delta
    return:
      type: System.Boolean
    content.vb: Public Function TryGetLocalDelta(candidate As CandidateDeltaBroadcast, ByRef delta As Delta) As Boolean
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  nameWithType.vb: DeltaCache.TryGetLocalDelta(CandidateDeltaBroadcast, ByRef Delta)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast, ByRef Catalyst.Protocol.Deltas.Delta)
  name.vb: TryGetLocalDelta(CandidateDeltaBroadcast, ByRef Delta)
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  id: AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: AddLocalDelta(CandidateDeltaBroadcast, Delta)
  nameWithType: DeltaCache.AddLocalDelta(CandidateDeltaBroadcast, Delta)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast, Catalyst.Protocol.Deltas.Delta)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AddLocalDelta
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 106
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public void AddLocalDelta(CandidateDeltaBroadcast localCandidate, Delta delta)
    parameters:
    - id: localCandidate
      type: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    - id: delta
      type: Catalyst.Protocol.Deltas.Delta
    content.vb: Public Sub AddLocalDelta(localCandidate As CandidateDeltaBroadcast, delta As Delta)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose(System.Boolean)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DeltaCache.Dispose(Boolean)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 112
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose
  id: Dispose
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DeltaCache.Dispose()
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Dispose
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaCache.cs
    startLine: 114
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.Consensus.Deltas
  commentId: N:Catalyst.Core.Modules.Consensus.Deltas
  name: Catalyst.Core.Modules.Consensus.Deltas
  nameWithType: Catalyst.Core.Modules.Consensus.Deltas
  fullName: Catalyst.Core.Modules.Consensus.Deltas
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaCache
  nameWithType: IDeltaCache
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
  name: GenesisHash
  nameWithType: DeltaCache.GenesisHash
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisHash
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisHash
  commentId: P:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisHash
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  name: GenesisHash
  nameWithType: IDeltaCache.GenesisHash
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisHash
- uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: MultiHash
  nameWithType: MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
- uid: TheDotNetLeague.MultiFormats.MultiHash
  commentId: N:TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: TheDotNetLeague.MultiFormats.MultiHash
  nameWithType: TheDotNetLeague.MultiFormats.MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
  name: GenesisAddress
  nameWithType: DeltaCache.GenesisAddress
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GenesisAddress
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisAddress
  commentId: P:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisAddress
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  name: GenesisAddress
  nameWithType: IDeltaCache.GenesisAddress
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.GenesisAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey
  name: GetLocalDeltaCacheKey
  nameWithType: DeltaCache.GetLocalDeltaCacheKey
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.GetLocalDeltaCacheKey
- uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  commentId: T:Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  parent: Catalyst.Protocol.Wire
  name: CandidateDeltaBroadcast
  nameWithType: CandidateDeltaBroadcast
  fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
- uid: Catalyst.Protocol.Wire
  commentId: N:Catalyst.Protocol.Wire
  name: Catalyst.Protocol.Wire
  nameWithType: Catalyst.Protocol.Wire
  fullName: Catalyst.Protocol.Wire
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.#ctor
  name: DeltaCache
  nameWithType: DeltaCache.DeltaCache
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.DeltaCache
- uid: Catalyst.Abstractions.Hashing.IHashProvider
  commentId: T:Catalyst.Abstractions.Hashing.IHashProvider
  parent: Catalyst.Abstractions.Hashing
  name: IHashProvider
  nameWithType: IHashProvider
  fullName: Catalyst.Abstractions.Hashing.IHashProvider
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaDfsReader
  nameWithType: IDeltaDfsReader
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaDfsReader
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaCacheChangeTokenProvider
  nameWithType: IDeltaCacheChangeTokenProvider
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCacheChangeTokenProvider
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Abstractions.Hashing
  commentId: N:Catalyst.Abstractions.Hashing
  name: Catalyst.Abstractions.Hashing
  nameWithType: Catalyst.Abstractions.Hashing
  fullName: Catalyst.Abstractions.Hashing
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta
  name: TryGetOrAddConfirmedDelta
  nameWithType: DeltaCache.TryGetOrAddConfirmedDelta
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetOrAddConfirmedDelta
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  isExternal: true
  name: TryGetOrAddConfirmedDelta(MultiHash, Delta, CancellationToken)
  nameWithType: IDeltaCache.TryGetOrAddConfirmedDelta(MultiHash, Delta, CancellationToken)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, Catalyst.Protocol.Deltas.Delta, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
    name: TryGetOrAddConfirmedDelta
    nameWithType: IDeltaCache.TryGetOrAddConfirmedDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,Catalyst.Protocol.Deltas.Delta@,System.Threading.CancellationToken)
    name: TryGetOrAddConfirmedDelta
    nameWithType: IDeltaCache.TryGetOrAddConfirmedDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetOrAddConfirmedDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Protocol.Deltas.Delta
  commentId: T:Catalyst.Protocol.Deltas.Delta
  parent: Catalyst.Protocol.Deltas
  name: Delta
  nameWithType: Delta
  fullName: Catalyst.Protocol.Deltas.Delta
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Catalyst.Protocol.Deltas
  commentId: N:Catalyst.Protocol.Deltas
  name: Catalyst.Protocol.Deltas
  nameWithType: Catalyst.Protocol.Deltas
  fullName: Catalyst.Protocol.Deltas
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta
  name: TryGetLocalDelta
  nameWithType: DeltaCache.TryGetLocalDelta
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.TryGetLocalDelta
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  name: TryGetLocalDelta(CandidateDeltaBroadcast, Delta)
  nameWithType: IDeltaCache.TryGetLocalDelta(CandidateDeltaBroadcast, Delta)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast, Catalyst.Protocol.Deltas.Delta)
  spec.csharp:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
    name: TryGetLocalDelta
    nameWithType: IDeltaCache.TryGetLocalDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    name: CandidateDeltaBroadcast
    nameWithType: CandidateDeltaBroadcast
    fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta@)
    name: TryGetLocalDelta
    nameWithType: IDeltaCache.TryGetLocalDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.TryGetLocalDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    name: CandidateDeltaBroadcast
    nameWithType: CandidateDeltaBroadcast
    fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta
  name: AddLocalDelta
  nameWithType: DeltaCache.AddLocalDelta
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.AddLocalDelta
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  name: AddLocalDelta(CandidateDeltaBroadcast, Delta)
  nameWithType: IDeltaCache.AddLocalDelta(CandidateDeltaBroadcast, Delta)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast, Catalyst.Protocol.Deltas.Delta)
  spec.csharp:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
    name: AddLocalDelta
    nameWithType: IDeltaCache.AddLocalDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    name: CandidateDeltaBroadcast
    nameWithType: CandidateDeltaBroadcast
    fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta(Catalyst.Protocol.Wire.CandidateDeltaBroadcast,Catalyst.Protocol.Deltas.Delta)
    name: AddLocalDelta
    nameWithType: IDeltaCache.AddLocalDelta
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache.AddLocalDelta
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
    name: CandidateDeltaBroadcast
    nameWithType: CandidateDeltaBroadcast
    fullName: Catalyst.Protocol.Wire.CandidateDeltaBroadcast
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Protocol.Deltas.Delta
    name: Delta
    nameWithType: Delta
    fullName: Catalyst.Protocol.Deltas.Delta
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose
  name: Dispose
  nameWithType: DeltaCache.Dispose
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaCache.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
