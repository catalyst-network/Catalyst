### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  commentId: T:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  id: DeltaHashProvider
  parent: Catalyst.Core.Modules.Consensus.Deltas
  children:
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Serilog.ILogger,System.Int32)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  langs:
  - csharp
  - vb
  name: DeltaHashProvider
  nameWithType: DeltaHashProvider
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DeltaHashProvider
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: 'public class DeltaHashProvider : IDeltaHashProvider'
    content.vb: >-
      Public Class DeltaHashProvider

          Implements IDeltaHashProvider
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
  commentId: P:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
  id: DeltaHashUpdates
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  langs:
  - csharp
  - vb
  name: DeltaHashUpdates
  nameWithType: DeltaHashProvider.DeltaHashUpdates
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DeltaHashUpdates
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public IObservable<MultiHash> DeltaHashUpdates { get; }
    parameters: []
    return:
      type: System.IObservable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
    content.vb: Public ReadOnly Property DeltaHashUpdates As IObservable(Of MultiHash)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.DeltaHashUpdates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Serilog.ILogger,System.Int32)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Serilog.ILogger,System.Int32)
  id: '#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Serilog.ILogger,System.Int32)'
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  langs:
  - csharp
  - vb
  name: DeltaHashProvider(IDeltaCache, ILogger, Int32)
  nameWithType: DeltaHashProvider.DeltaHashProvider(IDeltaCache, ILogger, Int32)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashProvider(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache, Serilog.ILogger, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public DeltaHashProvider(IDeltaCache deltaCache, ILogger logger, int capacity = 10000)
    parameters:
    - id: deltaCache
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
    - id: logger
      type: Serilog.ILogger
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(deltaCache As IDeltaCache, logger As ILogger, capacity As Integer = 10000)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  id: TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  langs:
  - csharp
  - vb
  name: TryUpdateLatestHash(MultiHash, MultiHash)
  nameWithType: DeltaHashProvider.TryUpdateLatestHash(MultiHash, MultiHash)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: TryUpdateLatestHash
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
    startLine: 68
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public bool TryUpdateLatestHash(MultiHash previousHash, MultiHash newHash)
    parameters:
    - id: previousHash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    - id: newHash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    return:
      type: System.Boolean
    content.vb: Public Function TryUpdateLatestHash(previousHash As MultiHash, newHash As MultiHash) As Boolean
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  id: GetLatestDeltaHash(System.Nullable{System.DateTime})
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider
  langs:
  - csharp
  - vb
  name: GetLatestDeltaHash(Nullable<DateTime>)
  nameWithType: DeltaHashProvider.GetLatestDeltaHash(Nullable<DateTime>)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetLatestDeltaHash
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHashProvider.cs
    startLine: 105
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public MultiHash GetLatestDeltaHash(DateTime? asOf = default(DateTime? ))
    parameters:
    - id: asOf
      type: System.Nullable{System.DateTime}
    return:
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    content.vb: Public Function GetLatestDeltaHash(asOf As Date? = Nothing) As MultiHash
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash*
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  nameWithType.vb: DeltaHashProvider.GetLatestDeltaHash(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash(System.Nullable(Of System.DateTime))
  name.vb: GetLatestDeltaHash(Nullable(Of DateTime))
references:
- uid: Catalyst.Core.Modules.Consensus.Deltas
  commentId: N:Catalyst.Core.Modules.Consensus.Deltas
  name: Catalyst.Core.Modules.Consensus.Deltas
  nameWithType: Catalyst.Core.Modules.Consensus.Deltas
  fullName: Catalyst.Core.Modules.Consensus.Deltas
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaHashProvider
  nameWithType: IDeltaHashProvider
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
  name: DeltaHashUpdates
  nameWithType: DeltaHashProvider.DeltaHashUpdates
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashUpdates
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.DeltaHashUpdates
  commentId: P:Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.DeltaHashUpdates
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  name: DeltaHashUpdates
  nameWithType: IDeltaHashProvider.DeltaHashUpdates
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.DeltaHashUpdates
- uid: System.IObservable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
  commentId: T:System.IObservable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
  parent: System
  definition: System.IObservable`1
  name: IObservable<MultiHash>
  nameWithType: IObservable<MultiHash>
  fullName: System.IObservable<TheDotNetLeague.MultiFormats.MultiHash.MultiHash>
  nameWithType.vb: IObservable(Of MultiHash)
  fullName.vb: System.IObservable(Of TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  name.vb: IObservable(Of MultiHash)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.#ctor
  name: DeltaHashProvider
  nameWithType: DeltaHashProvider.DeltaHashProvider
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.DeltaHashProvider
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaCache
  nameWithType: IDeltaCache
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash
  name: TryUpdateLatestHash
  nameWithType: DeltaHashProvider.TryUpdateLatestHash
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.TryUpdateLatestHash
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  isExternal: true
  name: TryUpdateLatestHash(MultiHash, MultiHash)
  nameWithType: IDeltaHashProvider.TryUpdateLatestHash(MultiHash, MultiHash)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  spec.csharp:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
    name: TryUpdateLatestHash
    nameWithType: IDeltaHashProvider.TryUpdateLatestHash
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
    name: TryUpdateLatestHash
    nameWithType: IDeltaHashProvider.TryUpdateLatestHash
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.TryUpdateLatestHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: MultiHash
  nameWithType: MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TheDotNetLeague.MultiFormats.MultiHash
  commentId: N:TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: TheDotNetLeague.MultiFormats.MultiHash
  nameWithType: TheDotNetLeague.MultiFormats.MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash
  name: GetLatestDeltaHash
  nameWithType: DeltaHashProvider.GetLatestDeltaHash
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHashProvider.GetLatestDeltaHash
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  commentId: M:Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
  parent: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  isExternal: true
  name: GetLatestDeltaHash(Nullable<DateTime>)
  nameWithType: IDeltaHashProvider.GetLatestDeltaHash(Nullable<DateTime>)
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable<System.DateTime>)
  nameWithType.vb: IDeltaHashProvider.GetLatestDeltaHash(Nullable(Of DateTime))
  fullName.vb: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable(Of System.DateTime))
  name.vb: GetLatestDeltaHash(Nullable(Of DateTime))
  spec.csharp:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
    name: GetLatestDeltaHash
    nameWithType: IDeltaHashProvider.GetLatestDeltaHash
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash(System.Nullable{System.DateTime})
    name: GetLatestDeltaHash
    nameWithType: IDeltaHashProvider.GetLatestDeltaHash
    fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider.GetLatestDeltaHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
