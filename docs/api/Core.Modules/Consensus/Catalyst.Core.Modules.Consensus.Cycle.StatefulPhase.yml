### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  commentId: T:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  id: StatefulPhase
  parent: Catalyst.Core.Modules.Consensus.Cycle
  children:
  - Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus)
  - Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings,System.TimeSpan,System.Reactive.Concurrency.IScheduler)
  - Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
  - Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
  langs:
  - csharp
  - vb
  name: StatefulPhase
  nameWithType: StatefulPhase
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: StatefulPhase
    path: ../src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Cycle
  syntax:
    content: public class StatefulPhase
    content.vb: Public Class StatefulPhase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus)
  commentId: M:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus)
  id: '#ctor(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus)'
  parent: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  langs:
  - csharp
  - vb
  name: StatefulPhase(IPhaseName, IPhaseStatus)
  nameWithType: StatefulPhase.StatefulPhase(IPhaseName, IPhaseStatus)
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.StatefulPhase(Catalyst.Abstractions.Consensus.Cycle.IPhaseName, Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Cycle
  syntax:
    content: public StatefulPhase(IPhaseName name, IPhaseStatus status)
    parameters:
    - id: name
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseName
    - id: status
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus
    content.vb: Public Sub New(name As IPhaseName, status As IPhaseStatus)
  overload: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
  commentId: P:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
  id: Name
  parent: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StatefulPhase.Name
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Name
    path: ../src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Cycle
  syntax:
    content: public IPhaseName Name { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseName
    content.vb: Public ReadOnly Property Name As IPhaseName
  overload: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
  commentId: P:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
  id: Status
  parent: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: StatefulPhase.Status
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Status
    path: ../src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Cycle
  syntax:
    content: public IPhaseStatus Status { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus
    content.vb: Public ReadOnly Property Status As IPhaseStatus
  overload: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings,System.TimeSpan,System.Reactive.Concurrency.IScheduler)
  commentId: M:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings,System.TimeSpan,System.Reactive.Concurrency.IScheduler)
  id: GetStatusChangeObservable(Catalyst.Abstractions.Consensus.Cycle.IPhaseName,Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings,System.TimeSpan,System.Reactive.Concurrency.IScheduler)
  parent: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  langs:
  - csharp
  - vb
  name: GetStatusChangeObservable(IPhaseName, IPhaseTimings, TimeSpan, IScheduler)
  nameWithType: StatefulPhase.GetStatusChangeObservable(IPhaseName, IPhaseTimings, TimeSpan, IScheduler)
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable(Catalyst.Abstractions.Consensus.Cycle.IPhaseName, Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings, System.TimeSpan, System.Reactive.Concurrency.IScheduler)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetStatusChangeObservable
    path: ../src/Catalyst.Core.Modules.Consensus/Cycle/StatefulPhase.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Cycle
  summary: "\nUse this to get a stream of state change events occuring at the time configured by <see cref=\"!:timings\"></see> every <see cref=\"!:cycleDuration\"></see>\n"
  example: []
  syntax:
    content: public static IObservable<StatefulPhase> GetStatusChangeObservable(IPhaseName name, IPhaseTimings timings, TimeSpan cycleDuration, IScheduler scheduler)
    parameters:
    - id: name
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseName
      description: The name of the phase for which you need the state change events.
    - id: timings
      type: Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings
      description: The timing configuration for the phase.
    - id: cycleDuration
      type: System.TimeSpan
      description: The total duration of a delta production cycle.
    - id: scheduler
      type: System.Reactive.Concurrency.IScheduler
      description: The IScheduler used to synchronise the Timers.
    return:
      type: System.IObservable{Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase}
      description: ''
    content.vb: Public Shared Function GetStatusChangeObservable(name As IPhaseName, timings As IPhaseTimings, cycleDuration As TimeSpan, scheduler As IScheduler) As IObservable(Of StatefulPhase)
  overload: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Modules.Consensus.Cycle
  commentId: N:Catalyst.Core.Modules.Consensus.Cycle
  name: Catalyst.Core.Modules.Consensus.Cycle
  nameWithType: Catalyst.Core.Modules.Consensus.Cycle
  fullName: Catalyst.Core.Modules.Consensus.Cycle
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.#ctor
  name: StatefulPhase
  nameWithType: StatefulPhase.StatefulPhase
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.StatefulPhase
- uid: Catalyst.Abstractions.Consensus.Cycle.IPhaseName
  commentId: T:Catalyst.Abstractions.Consensus.Cycle.IPhaseName
  parent: Catalyst.Abstractions.Consensus.Cycle
  name: IPhaseName
  nameWithType: IPhaseName
  fullName: Catalyst.Abstractions.Consensus.Cycle.IPhaseName
- uid: Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus
  commentId: T:Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus
  parent: Catalyst.Abstractions.Consensus.Cycle
  name: IPhaseStatus
  nameWithType: IPhaseStatus
  fullName: Catalyst.Abstractions.Consensus.Cycle.IPhaseStatus
- uid: Catalyst.Abstractions.Consensus.Cycle
  commentId: N:Catalyst.Abstractions.Consensus.Cycle
  name: Catalyst.Abstractions.Consensus.Cycle
  nameWithType: Catalyst.Abstractions.Consensus.Cycle
  fullName: Catalyst.Abstractions.Consensus.Cycle
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
  name: Name
  nameWithType: StatefulPhase.Name
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Name
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
  name: Status
  nameWithType: StatefulPhase.Status
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.Status
- uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable
  name: GetStatusChangeObservable
  nameWithType: StatefulPhase.GetStatusChangeObservable
  fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase.GetStatusChangeObservable
- uid: Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings
  commentId: T:Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings
  parent: Catalyst.Abstractions.Consensus.Cycle
  name: IPhaseTimings
  nameWithType: IPhaseTimings
  fullName: Catalyst.Abstractions.Consensus.Cycle.IPhaseTimings
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Reactive.Concurrency.IScheduler
  commentId: T:System.Reactive.Concurrency.IScheduler
  parent: System.Reactive.Concurrency
  isExternal: true
  name: IScheduler
  nameWithType: IScheduler
  fullName: System.Reactive.Concurrency.IScheduler
- uid: System.IObservable{Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase}
  commentId: T:System.IObservable{Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase}
  parent: System
  definition: System.IObservable`1
  name: IObservable<StatefulPhase>
  nameWithType: IObservable<StatefulPhase>
  fullName: System.IObservable<Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase>
  nameWithType.vb: IObservable(Of StatefulPhase)
  fullName.vb: System.IObservable(Of Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase)
  name.vb: IObservable(Of StatefulPhase)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
    name: StatefulPhase
    nameWithType: StatefulPhase
    fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
    name: StatefulPhase
    nameWithType: StatefulPhase
    fullName: Catalyst.Core.Modules.Consensus.Cycle.StatefulPhase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reactive.Concurrency
  commentId: N:System.Reactive.Concurrency
  isExternal: true
  name: System.Reactive.Concurrency
  nameWithType: System.Reactive.Concurrency
  fullName: System.Reactive.Concurrency
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
