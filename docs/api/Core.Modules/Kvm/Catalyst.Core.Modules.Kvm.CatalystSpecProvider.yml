### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  commentId: T:Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  id: CatalystSpecProvider
  parent: Catalyst.Core.Modules.Kvm
  children:
  - Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
  - Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
  - Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
  - Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec(System.Int64)
  langs:
  - csharp
  - vb
  name: CatalystSpecProvider
  nameWithType: CatalystSpecProvider
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CatalystSpecProvider
    path: ../src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
    startLine: 28
  assemblies:
  - Catalyst.Core.Modules.Kvm
  namespace: Catalyst.Core.Modules.Kvm
  syntax:
    content: 'public sealed class CatalystSpecProvider : ISpecProvider'
    content.vb: >-
      Public NotInheritable Class CatalystSpecProvider

          Implements ISpecProvider
  inheritance:
  - System.Object
  implements:
  - Nethermind.Core.Specs.ISpecProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
  commentId: P:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
  id: GenesisSpec
  parent: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  langs:
  - csharp
  - vb
  name: GenesisSpec
  nameWithType: CatalystSpecProvider.GenesisSpec
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GenesisSpec
    path: ../src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Modules.Kvm
  namespace: Catalyst.Core.Modules.Kvm
  syntax:
    content: public IReleaseSpec GenesisSpec { get; }
    parameters: []
    return:
      type: Nethermind.Core.Specs.IReleaseSpec
    content.vb: Public ReadOnly Property GenesisSpec As IReleaseSpec
  overload: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec*
  implements:
  - Nethermind.Core.Specs.ISpecProvider.GenesisSpec
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec(System.Int64)
  commentId: M:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec(System.Int64)
  id: GetSpec(System.Int64)
  parent: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  langs:
  - csharp
  - vb
  name: GetSpec(Int64)
  nameWithType: CatalystSpecProvider.GetSpec(Int64)
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec(System.Int64)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: GetSpec
    path: ../src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Modules.Kvm
  namespace: Catalyst.Core.Modules.Kvm
  syntax:
    content: public IReleaseSpec GetSpec(long blockNumber)
    parameters:
    - id: blockNumber
      type: System.Int64
    return:
      type: Nethermind.Core.Specs.IReleaseSpec
    content.vb: Public Function GetSpec(blockNumber As Long) As IReleaseSpec
  overload: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec*
  implements:
  - Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
  commentId: P:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
  id: DaoBlockNumber
  parent: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  langs:
  - csharp
  - vb
  name: DaoBlockNumber
  nameWithType: CatalystSpecProvider.DaoBlockNumber
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DaoBlockNumber
    path: ../src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Modules.Kvm
  namespace: Catalyst.Core.Modules.Kvm
  syntax:
    content: public long? DaoBlockNumber { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property DaoBlockNumber As Long?
  overload: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber*
  implements:
  - Nethermind.Core.Specs.ISpecProvider.DaoBlockNumber
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
  commentId: P:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
  id: ChainId
  parent: Catalyst.Core.Modules.Kvm.CatalystSpecProvider
  langs:
  - csharp
  - vb
  name: ChainId
  nameWithType: CatalystSpecProvider.ChainId
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: ChainId
    path: ../src/Catalyst.Core.Modules.Kvm/CatalystSpecProvider.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Modules.Kvm
  namespace: Catalyst.Core.Modules.Kvm
  syntax:
    content: public int ChainId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ChainId As Integer
  overload: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId*
  implements:
  - Nethermind.Core.Specs.ISpecProvider.ChainId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Catalyst.Core.Modules.Kvm
  commentId: N:Catalyst.Core.Modules.Kvm
  name: Catalyst.Core.Modules.Kvm
  nameWithType: Catalyst.Core.Modules.Kvm
  fullName: Catalyst.Core.Modules.Kvm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Nethermind.Core.Specs.ISpecProvider
  commentId: T:Nethermind.Core.Specs.ISpecProvider
  parent: Nethermind.Core.Specs
  name: ISpecProvider
  nameWithType: ISpecProvider
  fullName: Nethermind.Core.Specs.ISpecProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Nethermind.Core.Specs
  commentId: N:Nethermind.Core.Specs
  name: Nethermind.Core.Specs
  nameWithType: Nethermind.Core.Specs
  fullName: Nethermind.Core.Specs
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec*
  commentId: Overload:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
  name: GenesisSpec
  nameWithType: CatalystSpecProvider.GenesisSpec
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GenesisSpec
- uid: Nethermind.Core.Specs.ISpecProvider.GenesisSpec
  commentId: P:Nethermind.Core.Specs.ISpecProvider.GenesisSpec
  parent: Nethermind.Core.Specs.ISpecProvider
  name: GenesisSpec
  nameWithType: ISpecProvider.GenesisSpec
  fullName: Nethermind.Core.Specs.ISpecProvider.GenesisSpec
- uid: Nethermind.Core.Specs.IReleaseSpec
  commentId: T:Nethermind.Core.Specs.IReleaseSpec
  parent: Nethermind.Core.Specs
  name: IReleaseSpec
  nameWithType: IReleaseSpec
  fullName: Nethermind.Core.Specs.IReleaseSpec
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec*
  commentId: Overload:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec
  name: GetSpec
  nameWithType: CatalystSpecProvider.GetSpec
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.GetSpec
- uid: Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
  commentId: M:Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
  parent: Nethermind.Core.Specs.ISpecProvider
  isExternal: true
  name: GetSpec(Int64)
  nameWithType: ISpecProvider.GetSpec(Int64)
  fullName: Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
  spec.csharp:
  - uid: Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
    name: GetSpec
    nameWithType: ISpecProvider.GetSpec
    fullName: Nethermind.Core.Specs.ISpecProvider.GetSpec
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Nethermind.Core.Specs.ISpecProvider.GetSpec(System.Int64)
    name: GetSpec
    nameWithType: ISpecProvider.GetSpec
    fullName: Nethermind.Core.Specs.ISpecProvider.GetSpec
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber*
  commentId: Overload:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
  name: DaoBlockNumber
  nameWithType: CatalystSpecProvider.DaoBlockNumber
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.DaoBlockNumber
- uid: Nethermind.Core.Specs.ISpecProvider.DaoBlockNumber
  commentId: P:Nethermind.Core.Specs.ISpecProvider.DaoBlockNumber
  parent: Nethermind.Core.Specs.ISpecProvider
  name: DaoBlockNumber
  nameWithType: ISpecProvider.DaoBlockNumber
  fullName: Nethermind.Core.Specs.ISpecProvider.DaoBlockNumber
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId*
  commentId: Overload:Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
  name: ChainId
  nameWithType: CatalystSpecProvider.ChainId
  fullName: Catalyst.Core.Modules.Kvm.CatalystSpecProvider.ChainId
- uid: Nethermind.Core.Specs.ISpecProvider.ChainId
  commentId: P:Nethermind.Core.Specs.ISpecProvider.ChainId
  parent: Nethermind.Core.Specs.ISpecProvider
  name: ChainId
  nameWithType: ISpecProvider.ChainId
  fullName: Nethermind.Core.Specs.ISpecProvider.ChainId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
