### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  commentId: T:Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  id: LedgerSynchroniser
  parent: Catalyst.Core.Modules.Ledger
  children:
  - Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Catalyst.Abstractions.Hashing.IHashProvider,Serilog.ILogger)
  - Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  - Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
  langs:
  - csharp
  - vb
  name: LedgerSynchroniser
  nameWithType: LedgerSynchroniser
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: LedgerSynchroniser
    path: ../src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger
  example: []
  syntax:
    content: 'public class LedgerSynchroniser : ILedgerSynchroniser'
    content.vb: >-
      Public Class LedgerSynchroniser

          Implements ILedgerSynchroniser
  inheritance:
  - System.Object
  implements:
  - Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Catalyst.Abstractions.Hashing.IHashProvider,Serilog.ILogger)
  commentId: M:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Catalyst.Abstractions.Hashing.IHashProvider,Serilog.ILogger)
  id: '#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache,Catalyst.Abstractions.Hashing.IHashProvider,Serilog.ILogger)'
  parent: Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  langs:
  - csharp
  - vb
  name: LedgerSynchroniser(IDeltaCache, IHashProvider, ILogger)
  nameWithType: LedgerSynchroniser.LedgerSynchroniser(IDeltaCache, IHashProvider, ILogger)
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.LedgerSynchroniser(Catalyst.Abstractions.Consensus.Deltas.IDeltaCache, Catalyst.Abstractions.Hashing.IHashProvider, Serilog.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger
  syntax:
    content: public LedgerSynchroniser(IDeltaCache deltaCache, IHashProvider hashProvider, ILogger logger)
    parameters:
    - id: deltaCache
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
    - id: hashProvider
      type: Catalyst.Abstractions.Hashing.IHashProvider
    - id: logger
      type: Serilog.ILogger
    content.vb: Public Sub New(deltaCache As IDeltaCache, hashProvider As IHashProvider, logger As ILogger)
  overload: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
  commentId: P:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
  id: DeltaCache
  parent: Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  langs:
  - csharp
  - vb
  name: DeltaCache
  nameWithType: LedgerSynchroniser.DeltaCache
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: DeltaCache
    path: ../src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger
  example: []
  syntax:
    content: public IDeltaCache DeltaCache { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
    content.vb: Public ReadOnly Property DeltaCache As IDeltaCache
  overload: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache*
  implements:
  - Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.DeltaCache
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  commentId: M:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  id: CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  parent: Catalyst.Core.Modules.Ledger.LedgerSynchroniser
  langs:
  - csharp
  - vb
  name: CacheDeltasBetween(MultiHash, MultiHash, CancellationToken)
  nameWithType: LedgerSynchroniser.CacheDeltasBetween(MultiHash, MultiHash, CancellationToken)
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, TheDotNetLeague.MultiFormats.MultiHash.MultiHash, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: CacheDeltasBetween
    path: ../src/Catalyst.Core.Modules.Ledger/LedgerSynchroniser.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger
  example: []
  syntax:
    content: public IEnumerable<MultiHash> CacheDeltasBetween(MultiHash latestKnownDeltaHash, MultiHash targetDeltaHash, CancellationToken cancellationToken)
    parameters:
    - id: latestKnownDeltaHash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    - id: targetDeltaHash
      type: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IEnumerable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
    content.vb: Public Function CacheDeltasBetween(latestKnownDeltaHash As MultiHash, targetDeltaHash As MultiHash, cancellationToken As CancellationToken) As IEnumerable(Of MultiHash)
  overload: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween*
  implements:
  - Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.Ledger
  commentId: N:Catalyst.Core.Modules.Ledger
  name: Catalyst.Core.Modules.Ledger
  nameWithType: Catalyst.Core.Modules.Ledger
  fullName: Catalyst.Core.Modules.Ledger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
  commentId: T:Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
  parent: Catalyst.Core.Modules.Ledger
  name: ILedgerSynchroniser
  nameWithType: ILedgerSynchroniser
  fullName: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.#ctor
  name: LedgerSynchroniser
  nameWithType: LedgerSynchroniser.LedgerSynchroniser
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.LedgerSynchroniser
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaCache
  nameWithType: IDeltaCache
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaCache
- uid: Catalyst.Abstractions.Hashing.IHashProvider
  commentId: T:Catalyst.Abstractions.Hashing.IHashProvider
  parent: Catalyst.Abstractions.Hashing
  name: IHashProvider
  nameWithType: IHashProvider
  fullName: Catalyst.Abstractions.Hashing.IHashProvider
- uid: Serilog.ILogger
  commentId: T:Serilog.ILogger
  parent: Serilog
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Serilog.ILogger
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Abstractions.Hashing
  commentId: N:Catalyst.Abstractions.Hashing
  name: Catalyst.Abstractions.Hashing
  nameWithType: Catalyst.Abstractions.Hashing
  fullName: Catalyst.Abstractions.Hashing
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache*
  commentId: Overload:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
  name: DeltaCache
  nameWithType: LedgerSynchroniser.DeltaCache
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.DeltaCache
- uid: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.DeltaCache
  commentId: P:Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.DeltaCache
  parent: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
  name: DeltaCache
  nameWithType: ILedgerSynchroniser.DeltaCache
  fullName: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.DeltaCache
- uid: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween*
  commentId: Overload:Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween
  name: CacheDeltasBetween
  nameWithType: LedgerSynchroniser.CacheDeltasBetween
  fullName: Catalyst.Core.Modules.Ledger.LedgerSynchroniser.CacheDeltasBetween
- uid: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  commentId: M:Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
  parent: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser
  isExternal: true
  name: CacheDeltasBetween(MultiHash, MultiHash, CancellationToken)
  nameWithType: ILedgerSynchroniser.CacheDeltasBetween(MultiHash, MultiHash, CancellationToken)
  fullName: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash, TheDotNetLeague.MultiFormats.MultiHash.MultiHash, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
    name: CacheDeltasBetween
    nameWithType: ILedgerSynchroniser.CacheDeltasBetween
    fullName: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween(TheDotNetLeague.MultiFormats.MultiHash.MultiHash,TheDotNetLeague.MultiFormats.MultiHash.MultiHash,System.Threading.CancellationToken)
    name: CacheDeltasBetween
    nameWithType: ILedgerSynchroniser.CacheDeltasBetween
    fullName: Catalyst.Core.Modules.Ledger.ILedgerSynchroniser.CacheDeltasBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  commentId: T:TheDotNetLeague.MultiFormats.MultiHash.MultiHash
  parent: TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: MultiHash
  nameWithType: MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IEnumerable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
  commentId: T:System.Collections.Generic.IEnumerable{TheDotNetLeague.MultiFormats.MultiHash.MultiHash}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MultiHash>
  nameWithType: IEnumerable<MultiHash>
  fullName: System.Collections.Generic.IEnumerable<TheDotNetLeague.MultiFormats.MultiHash.MultiHash>
  nameWithType.vb: IEnumerable(Of MultiHash)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TheDotNetLeague.MultiFormats.MultiHash.MultiHash)
  name.vb: IEnumerable(Of MultiHash)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    name: MultiHash
    nameWithType: MultiHash
    fullName: TheDotNetLeague.MultiFormats.MultiHash.MultiHash
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TheDotNetLeague.MultiFormats.MultiHash
  commentId: N:TheDotNetLeague.MultiFormats.MultiHash
  isExternal: true
  name: TheDotNetLeague.MultiFormats.MultiHash
  nameWithType: TheDotNetLeague.MultiFormats.MultiHash
  fullName: TheDotNetLeague.MultiFormats.MultiHash
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
