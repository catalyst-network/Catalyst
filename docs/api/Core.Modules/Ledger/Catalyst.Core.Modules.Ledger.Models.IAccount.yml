### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount
  commentId: T:Catalyst.Core.Modules.Ledger.Models.IAccount
  id: IAccount
  parent: Catalyst.Core.Modules.Ledger.Models
  children:
  - Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
  - Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
  - Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
  langs:
  - csharp
  - vb
  name: IAccount
  nameWithType: IAccount
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount
  type: Interface
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: IAccount
    path: ../src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger.Models
  summary: "\nThis class represent a user account of which there can be the following types:\nconfidential account, non-confidential account and smart contract account\n"
  example: []
  syntax:
    content: 'public interface IAccount : IDocument'
    content.vb: >-
      Public Interface IAccount

          Inherits IDocument
  inheritedMembers:
  - Catalyst.Abstractions.Repository.IDocument.DocumentId
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
  commentId: P:Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
  id: PublicAddress
  parent: Catalyst.Core.Modules.Ledger.Models.IAccount
  langs:
  - csharp
  - vb
  name: PublicAddress
  nameWithType: IAccount.PublicAddress
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: PublicAddress
    path: ../src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger.Models
  summary: "\nThe address used to identify the account.\n"
  example: []
  syntax:
    content: string PublicAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property PublicAddress As String
  overload: Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
  commentId: P:Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
  id: AccountType
  parent: Catalyst.Core.Modules.Ledger.Models.IAccount
  langs:
  - csharp
  - vb
  name: AccountType
  nameWithType: IAccount.AccountType
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: AccountType
    path: ../src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger.Models
  summary: "\nType of the account: public or confidential.\n"
  example: []
  syntax:
    content: AccountTypes AccountType { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.Types.AccountTypes
    content.vb: ReadOnly Property AccountType As AccountTypes
  overload: Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
  commentId: P:Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
  id: Balance
  parent: Catalyst.Core.Modules.Ledger.Models.IAccount
  langs:
  - csharp
  - vb
  name: Balance
  nameWithType: IAccount.Balance
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: Balance
    path: ../src/Catalyst.Core.Modules.Ledger/Models/IAccount.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Modules.Ledger
  namespace: Catalyst.Core.Modules.Ledger.Models
  summary: "\nThe balance of the account.\n"
  example: []
  syntax:
    content: UInt256 Balance { get; set; }
    parameters: []
    return:
      type: Nethermind.Dirichlet.Numerics.UInt256
    content.vb: Property Balance As UInt256
  overload: Catalyst.Core.Modules.Ledger.Models.IAccount.Balance*
  modifiers.csharp:
  - get
  - set
references:
- uid: Catalyst.Core.Modules.Ledger.Models
  commentId: N:Catalyst.Core.Modules.Ledger.Models
  name: Catalyst.Core.Modules.Ledger.Models
  nameWithType: Catalyst.Core.Modules.Ledger.Models
  fullName: Catalyst.Core.Modules.Ledger.Models
- uid: Catalyst.Abstractions.Repository.IDocument.DocumentId
  commentId: P:Catalyst.Abstractions.Repository.IDocument.DocumentId
  parent: Catalyst.Abstractions.Repository.IDocument
  name: DocumentId
  nameWithType: IDocument.DocumentId
  fullName: Catalyst.Abstractions.Repository.IDocument.DocumentId
- uid: Catalyst.Abstractions.Repository.IDocument
  commentId: T:Catalyst.Abstractions.Repository.IDocument
  parent: Catalyst.Abstractions.Repository
  name: IDocument
  nameWithType: IDocument
  fullName: Catalyst.Abstractions.Repository.IDocument
- uid: Catalyst.Abstractions.Repository
  commentId: N:Catalyst.Abstractions.Repository
  name: Catalyst.Abstractions.Repository
  nameWithType: Catalyst.Abstractions.Repository
  fullName: Catalyst.Abstractions.Repository
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress*
  commentId: Overload:Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
  name: PublicAddress
  nameWithType: IAccount.PublicAddress
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.PublicAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType*
  commentId: Overload:Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
  name: AccountType
  nameWithType: IAccount.AccountType
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.AccountType
- uid: Catalyst.Abstractions.Types.AccountTypes
  commentId: T:Catalyst.Abstractions.Types.AccountTypes
  parent: Catalyst.Abstractions.Types
  name: AccountTypes
  nameWithType: AccountTypes
  fullName: Catalyst.Abstractions.Types.AccountTypes
- uid: Catalyst.Abstractions.Types
  commentId: N:Catalyst.Abstractions.Types
  name: Catalyst.Abstractions.Types
  nameWithType: Catalyst.Abstractions.Types
  fullName: Catalyst.Abstractions.Types
- uid: Catalyst.Core.Modules.Ledger.Models.IAccount.Balance*
  commentId: Overload:Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
  name: Balance
  nameWithType: IAccount.Balance
  fullName: Catalyst.Core.Modules.Ledger.Models.IAccount.Balance
- uid: Nethermind.Dirichlet.Numerics.UInt256
  commentId: T:Nethermind.Dirichlet.Numerics.UInt256
  parent: Nethermind.Dirichlet.Numerics
  name: UInt256
  nameWithType: UInt256
  fullName: Nethermind.Dirichlet.Numerics.UInt256
- uid: Nethermind.Dirichlet.Numerics
  commentId: N:Nethermind.Dirichlet.Numerics
  name: Nethermind.Dirichlet.Numerics
  nameWithType: Nethermind.Dirichlet.Numerics
  fullName: Nethermind.Dirichlet.Numerics
