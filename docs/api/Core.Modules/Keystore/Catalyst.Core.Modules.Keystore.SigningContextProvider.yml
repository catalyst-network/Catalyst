### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider
  commentId: T:Catalyst.Core.Modules.Keystore.SigningContextProvider
  id: SigningContextProvider
  parent: Catalyst.Core.Modules.Keystore
  children:
  - Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Cryptography.SigningContext)
  - Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Network.NetworkType,Catalyst.Protocol.Cryptography.SignatureType)
  - Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
  langs:
  - csharp
  - vb
  name: SigningContextProvider
  nameWithType: SigningContextProvider
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SigningContextProvider
    path: ../src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
    startLine: 29
  assemblies:
  - Catalyst.Core.Modules.Keystore
  namespace: Catalyst.Core.Modules.Keystore
  syntax:
    content: 'public class SigningContextProvider : ISigningContextProvider'
    content.vb: >-
      Public Class SigningContextProvider

          Implements ISigningContextProvider
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Keystore.ISigningContextProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Network.NetworkType,Catalyst.Protocol.Cryptography.SignatureType)
  commentId: M:Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Network.NetworkType,Catalyst.Protocol.Cryptography.SignatureType)
  id: '#ctor(Catalyst.Protocol.Network.NetworkType,Catalyst.Protocol.Cryptography.SignatureType)'
  parent: Catalyst.Core.Modules.Keystore.SigningContextProvider
  langs:
  - csharp
  - vb
  name: SigningContextProvider(NetworkType, SignatureType)
  nameWithType: SigningContextProvider.SigningContextProvider(NetworkType, SignatureType)
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContextProvider(Catalyst.Protocol.Network.NetworkType, Catalyst.Protocol.Cryptography.SignatureType)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Modules.Keystore
  namespace: Catalyst.Core.Modules.Keystore
  syntax:
    content: public SigningContextProvider(NetworkType networkType, SignatureType signatureType)
    parameters:
    - id: networkType
      type: Catalyst.Protocol.Network.NetworkType
    - id: signatureType
      type: Catalyst.Protocol.Cryptography.SignatureType
    content.vb: Public Sub New(networkType As NetworkType, signatureType As SignatureType)
  overload: Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Cryptography.SigningContext)
  commentId: M:Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor(Catalyst.Protocol.Cryptography.SigningContext)
  id: '#ctor(Catalyst.Protocol.Cryptography.SigningContext)'
  parent: Catalyst.Core.Modules.Keystore.SigningContextProvider
  langs:
  - csharp
  - vb
  name: SigningContextProvider(SigningContext)
  nameWithType: SigningContextProvider.SigningContextProvider(SigningContext)
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContextProvider(Catalyst.Protocol.Cryptography.SigningContext)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Modules.Keystore
  namespace: Catalyst.Core.Modules.Keystore
  syntax:
    content: public SigningContextProvider(SigningContext signingContext)
    parameters:
    - id: signingContext
      type: Catalyst.Protocol.Cryptography.SigningContext
    content.vb: Public Sub New(signingContext As SigningContext)
  overload: Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
  commentId: P:Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
  id: SigningContext
  parent: Catalyst.Core.Modules.Keystore.SigningContextProvider
  langs:
  - csharp
  - vb
  name: SigningContext
  nameWithType: SigningContextProvider.SigningContext
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
      branch: develop
      repo: https://github.com/catalyst-network/Catalyst.Node.git
    id: SigningContext
    path: ../src/Catalyst.Core.Modules.Keystore/SigningContextProvider.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Modules.Keystore
  namespace: Catalyst.Core.Modules.Keystore
  syntax:
    content: public SigningContext SigningContext { get; }
    parameters: []
    return:
      type: Catalyst.Protocol.Cryptography.SigningContext
    content.vb: Public ReadOnly Property SigningContext As SigningContext
  overload: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext*
  implements:
  - Catalyst.Abstractions.Keystore.ISigningContextProvider.SigningContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Catalyst.Core.Modules.Keystore
  commentId: N:Catalyst.Core.Modules.Keystore
  name: Catalyst.Core.Modules.Keystore
  nameWithType: Catalyst.Core.Modules.Keystore
  fullName: Catalyst.Core.Modules.Keystore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Keystore.ISigningContextProvider
  commentId: T:Catalyst.Abstractions.Keystore.ISigningContextProvider
  parent: Catalyst.Abstractions.Keystore
  name: ISigningContextProvider
  nameWithType: ISigningContextProvider
  fullName: Catalyst.Abstractions.Keystore.ISigningContextProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Keystore
  commentId: N:Catalyst.Abstractions.Keystore
  name: Catalyst.Abstractions.Keystore
  nameWithType: Catalyst.Abstractions.Keystore
  fullName: Catalyst.Abstractions.Keystore
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Keystore.SigningContextProvider.#ctor
  name: SigningContextProvider
  nameWithType: SigningContextProvider.SigningContextProvider
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContextProvider
- uid: Catalyst.Protocol.Network.NetworkType
  commentId: T:Catalyst.Protocol.Network.NetworkType
  parent: Catalyst.Protocol.Network
  name: NetworkType
  nameWithType: NetworkType
  fullName: Catalyst.Protocol.Network.NetworkType
- uid: Catalyst.Protocol.Cryptography.SignatureType
  commentId: T:Catalyst.Protocol.Cryptography.SignatureType
  parent: Catalyst.Protocol.Cryptography
  name: SignatureType
  nameWithType: SignatureType
  fullName: Catalyst.Protocol.Cryptography.SignatureType
- uid: Catalyst.Protocol.Network
  commentId: N:Catalyst.Protocol.Network
  name: Catalyst.Protocol.Network
  nameWithType: Catalyst.Protocol.Network
  fullName: Catalyst.Protocol.Network
- uid: Catalyst.Protocol.Cryptography
  commentId: N:Catalyst.Protocol.Cryptography
  name: Catalyst.Protocol.Cryptography
  nameWithType: Catalyst.Protocol.Cryptography
  fullName: Catalyst.Protocol.Cryptography
- uid: Catalyst.Protocol.Cryptography.SigningContext
  commentId: T:Catalyst.Protocol.Cryptography.SigningContext
  parent: Catalyst.Protocol.Cryptography
  name: SigningContext
  nameWithType: SigningContext
  fullName: Catalyst.Protocol.Cryptography.SigningContext
- uid: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext*
  commentId: Overload:Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
  name: SigningContext
  nameWithType: SigningContextProvider.SigningContext
  fullName: Catalyst.Core.Modules.Keystore.SigningContextProvider.SigningContext
- uid: Catalyst.Abstractions.Keystore.ISigningContextProvider.SigningContext
  commentId: P:Catalyst.Abstractions.Keystore.ISigningContextProvider.SigningContext
  parent: Catalyst.Abstractions.Keystore.ISigningContextProvider
  name: SigningContext
  nameWithType: ISigningContextProvider.SigningContext
  fullName: Catalyst.Abstractions.Keystore.ISigningContextProvider.SigningContext
