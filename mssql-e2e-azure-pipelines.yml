# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

strategy:
  matrix:
    Windows-VS2019:
      imageName: 'windows-2019'
      netcore_sdk: 3.0.100
      rustup_toolchain: stable

variables:
  release.type: '-beta'
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'Debug'

pool:
  vmImage: $(imageName)

steps:
  - script: choco install sql-server-express -d -v -y
    displayName: 'install mssql-express'
  
  - task: DotNetCoreInstaller@0
    displayName: 'Install .NetCore SDK'
    inputs:
      version: 3.0.100
  
  - bash: |
      git submodule update --init --force --recursive
    displayName: 'Clone submodules'
  
  - task: PowerShell@2
    inputs: 
      targetType: 'filePath'
      filePath: 'mssql_powershell.ps1'
      script: 'Write-Host Hello World Testing Powershell script section'
  
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
  
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      projects: 'src/**/*.csproj'
      arguments: '--configuration $(BuildConfiguration)'
      failOnStandardError: 'true'
  
  - task: DotNetCoreCLI@2
    displayName: 'Run end to end tests'
    inputs:
      command: test
      projects: 'src/*[Tt]ests/*.csproj'
      arguments: '--filter TestType=EndToEndTest_MSSQL --configuration $(BuildConfiguration)'
      failOnStandardError: 'true'
    timeoutInMinutes: 10