// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Peer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ADL.Peer.Protocol {

  /// <summary>Holder for reflection information generated from Peer.proto</summary>
  public static partial class PeerReflection {

    #region Descriptor
    /// <summary>File descriptor for Peer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PeerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpQZWVyLnByb3RvEhFBREwuUGVlci5Qcm90b2NvbCIbCgtQaW5nUmVxdWVz",
            "dBIMCgRwaW5nGAEgASgJIhwKDFBvbmdSZXNwb25zZRIMCgRwb25nGAIgASgJ",
            "Ih8KD1BlZXJJbmZvUmVxdWVzdBIMCgRwaW5nGAEgASgJIiAKEFBlZXJJbmZv",
            "UmVzcG9uc2USDAoEcG9uZxgCIAEoCSIkChRQZWVyTmVpZ2hib3JzUmVxdWVz",
            "dBIMCgRwaW5nGAEgASgJIiUKFVBlZXJOZWlnaGJvcnNSZXNwb25zZRIMCgRw",
            "b25nGAIgASgJMo4CCgRQZWVyEkcKBFBpbmcSHi5BREwuUGVlci5Qcm90b2Nv",
            "bC5QaW5nUmVxdWVzdBofLkFETC5QZWVyLlByb3RvY29sLlBvbmdSZXNwb25z",
            "ZRJWCgtHZXRQZWVySW5mbxIiLkFETC5QZWVyLlByb3RvY29sLlBlZXJJbmZv",
            "UmVxdWVzdBojLkFETC5QZWVyLlByb3RvY29sLlBlZXJJbmZvUmVzcG9uc2US",
            "ZQoQR2V0UGVlck5laWdoYm9ycxInLkFETC5QZWVyLlByb3RvY29sLlBlZXJO",
            "ZWlnaGJvcnNSZXF1ZXN0GiguQURMLlBlZXIuUHJvdG9jb2wuUGVlck5laWdo",
            "Ym9yc1Jlc3BvbnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PingRequest), global::ADL.Peer.Protocol.PingRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PongResponse), global::ADL.Peer.Protocol.PongResponse.Parser, new[]{ "Pong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PeerInfoRequest), global::ADL.Peer.Protocol.PeerInfoRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PeerInfoResponse), global::ADL.Peer.Protocol.PeerInfoResponse.Parser, new[]{ "Pong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PeerNeighborsRequest), global::ADL.Peer.Protocol.PeerNeighborsRequest.Parser, new[]{ "Ping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ADL.Peer.Protocol.PeerNeighborsResponse), global::ADL.Peer.Protocol.PeerNeighborsResponse.Parser, new[]{ "Pong" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PingRequest : pb::IMessage<PingRequest> {
    private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest(PingRequest other) : this() {
      ping_ = other.ping_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest Clone() {
      return new PingRequest(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    private string ping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ping {
      get { return ping_; }
      set {
        ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ping != other.Ping) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ping.Length != 0) hash ^= Ping.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ping.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ping.Length != 0) {
        Ping = other.Ping;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ping = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PongResponse : pb::IMessage<PongResponse> {
    private static readonly pb::MessageParser<PongResponse> _parser = new pb::MessageParser<PongResponse>(() => new PongResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PongResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongResponse(PongResponse other) : this() {
      pong_ = other.pong_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongResponse Clone() {
      return new PongResponse(this);
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 2;
    private string pong_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pong {
      get { return pong_; }
      set {
        pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PongResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PongResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pong != other.Pong) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pong.Length != 0) hash ^= Pong.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pong.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pong);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pong.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PongResponse other) {
      if (other == null) {
        return;
      }
      if (other.Pong.Length != 0) {
        Pong = other.Pong;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Pong = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerInfoRequest : pb::IMessage<PeerInfoRequest> {
    private static readonly pb::MessageParser<PeerInfoRequest> _parser = new pb::MessageParser<PeerInfoRequest>(() => new PeerInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoRequest(PeerInfoRequest other) : this() {
      ping_ = other.ping_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoRequest Clone() {
      return new PeerInfoRequest(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    private string ping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ping {
      get { return ping_; }
      set {
        ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ping != other.Ping) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ping.Length != 0) hash ^= Ping.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ping.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ping.Length != 0) {
        Ping = other.Ping;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ping = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerInfoResponse : pb::IMessage<PeerInfoResponse> {
    private static readonly pb::MessageParser<PeerInfoResponse> _parser = new pb::MessageParser<PeerInfoResponse>(() => new PeerInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoResponse(PeerInfoResponse other) : this() {
      pong_ = other.pong_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerInfoResponse Clone() {
      return new PeerInfoResponse(this);
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 2;
    private string pong_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pong {
      get { return pong_; }
      set {
        pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pong != other.Pong) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pong.Length != 0) hash ^= Pong.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pong.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pong);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pong.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Pong.Length != 0) {
        Pong = other.Pong;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Pong = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerNeighborsRequest : pb::IMessage<PeerNeighborsRequest> {
    private static readonly pb::MessageParser<PeerNeighborsRequest> _parser = new pb::MessageParser<PeerNeighborsRequest>(() => new PeerNeighborsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerNeighborsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsRequest(PeerNeighborsRequest other) : this() {
      ping_ = other.ping_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsRequest Clone() {
      return new PeerNeighborsRequest(this);
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 1;
    private string ping_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ping {
      get { return ping_; }
      set {
        ping_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerNeighborsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerNeighborsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ping != other.Ping) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ping.Length != 0) hash ^= Ping.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ping.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ping.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ping);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerNeighborsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ping.Length != 0) {
        Ping = other.Ping;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ping = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PeerNeighborsResponse : pb::IMessage<PeerNeighborsResponse> {
    private static readonly pb::MessageParser<PeerNeighborsResponse> _parser = new pb::MessageParser<PeerNeighborsResponse>(() => new PeerNeighborsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PeerNeighborsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ADL.Peer.Protocol.PeerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsResponse(PeerNeighborsResponse other) : this() {
      pong_ = other.pong_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PeerNeighborsResponse Clone() {
      return new PeerNeighborsResponse(this);
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 2;
    private string pong_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pong {
      get { return pong_; }
      set {
        pong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PeerNeighborsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PeerNeighborsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pong != other.Pong) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pong.Length != 0) hash ^= Pong.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pong.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pong);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pong.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pong);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PeerNeighborsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Pong.Length != 0) {
        Pong = other.Pong;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Pong = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
