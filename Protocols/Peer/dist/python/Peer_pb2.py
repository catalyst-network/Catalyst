# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Peer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='Peer.proto',
  package='ADL.Protocol.Peer',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nPeer.proto\x12\x11\x41\x44L.Protocol.Peer\"\x1b\n\x0bPingRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\"\x1c\n\x0cPongResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\"\x1f\n\x0fPeerInfoRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\" \n\x10PeerInfoResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\"$\n\x14PeerNeighborsRequest\x12\x0c\n\x04ping\x18\x01 \x01(\t\"%\n\x15PeerNeighborsResponse\x12\x0c\n\x04pong\x18\x01 \x01(\t\"/\n\x10\x43hallengeRequest\x12\x0c\n\x04type\x18\x01 \x01(\x05\x12\r\n\x05nonce\x18\x02 \x01(\x05\"I\n\x11\x43hallengeResponse\x12\x0c\n\x04type\x18\x01 \x01(\x05\x12\x13\n\x0bsignedNonce\x18\x02 \x01(\t\x12\x11\n\tpublicKey\x18\x03 \x01(\tb\x06proto3')
)




_PINGREQUEST = _descriptor.Descriptor(
  name='PingRequest',
  full_name='ADL.Protocol.Peer.PingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='ADL.Protocol.Peer.PingRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=60,
)


_PONGRESPONSE = _descriptor.Descriptor(
  name='PongResponse',
  full_name='ADL.Protocol.Peer.PongResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='ADL.Protocol.Peer.PongResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=90,
)


_PEERINFOREQUEST = _descriptor.Descriptor(
  name='PeerInfoRequest',
  full_name='ADL.Protocol.Peer.PeerInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='ADL.Protocol.Peer.PeerInfoRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=123,
)


_PEERINFORESPONSE = _descriptor.Descriptor(
  name='PeerInfoResponse',
  full_name='ADL.Protocol.Peer.PeerInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='ADL.Protocol.Peer.PeerInfoResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=157,
)


_PEERNEIGHBORSREQUEST = _descriptor.Descriptor(
  name='PeerNeighborsRequest',
  full_name='ADL.Protocol.Peer.PeerNeighborsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='ADL.Protocol.Peer.PeerNeighborsRequest.ping', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=195,
)


_PEERNEIGHBORSRESPONSE = _descriptor.Descriptor(
  name='PeerNeighborsResponse',
  full_name='ADL.Protocol.Peer.PeerNeighborsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pong', full_name='ADL.Protocol.Peer.PeerNeighborsResponse.pong', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=234,
)


_CHALLENGEREQUEST = _descriptor.Descriptor(
  name='ChallengeRequest',
  full_name='ADL.Protocol.Peer.ChallengeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ADL.Protocol.Peer.ChallengeRequest.type', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nonce', full_name='ADL.Protocol.Peer.ChallengeRequest.nonce', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=283,
)


_CHALLENGERESPONSE = _descriptor.Descriptor(
  name='ChallengeResponse',
  full_name='ADL.Protocol.Peer.ChallengeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ADL.Protocol.Peer.ChallengeResponse.type', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signedNonce', full_name='ADL.Protocol.Peer.ChallengeResponse.signedNonce', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='ADL.Protocol.Peer.ChallengeResponse.publicKey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=358,
)

DESCRIPTOR.message_types_by_name['PingRequest'] = _PINGREQUEST
DESCRIPTOR.message_types_by_name['PongResponse'] = _PONGRESPONSE
DESCRIPTOR.message_types_by_name['PeerInfoRequest'] = _PEERINFOREQUEST
DESCRIPTOR.message_types_by_name['PeerInfoResponse'] = _PEERINFORESPONSE
DESCRIPTOR.message_types_by_name['PeerNeighborsRequest'] = _PEERNEIGHBORSREQUEST
DESCRIPTOR.message_types_by_name['PeerNeighborsResponse'] = _PEERNEIGHBORSRESPONSE
DESCRIPTOR.message_types_by_name['ChallengeRequest'] = _CHALLENGEREQUEST
DESCRIPTOR.message_types_by_name['ChallengeResponse'] = _CHALLENGERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), dict(
  DESCRIPTOR = _PINGREQUEST,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PingRequest)
  ))
_sym_db.RegisterMessage(PingRequest)

PongResponse = _reflection.GeneratedProtocolMessageType('PongResponse', (_message.Message,), dict(
  DESCRIPTOR = _PONGRESPONSE,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PongResponse)
  ))
_sym_db.RegisterMessage(PongResponse)

PeerInfoRequest = _reflection.GeneratedProtocolMessageType('PeerInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _PEERINFOREQUEST,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PeerInfoRequest)
  ))
_sym_db.RegisterMessage(PeerInfoRequest)

PeerInfoResponse = _reflection.GeneratedProtocolMessageType('PeerInfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _PEERINFORESPONSE,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PeerInfoResponse)
  ))
_sym_db.RegisterMessage(PeerInfoResponse)

PeerNeighborsRequest = _reflection.GeneratedProtocolMessageType('PeerNeighborsRequest', (_message.Message,), dict(
  DESCRIPTOR = _PEERNEIGHBORSREQUEST,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PeerNeighborsRequest)
  ))
_sym_db.RegisterMessage(PeerNeighborsRequest)

PeerNeighborsResponse = _reflection.GeneratedProtocolMessageType('PeerNeighborsResponse', (_message.Message,), dict(
  DESCRIPTOR = _PEERNEIGHBORSRESPONSE,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.PeerNeighborsResponse)
  ))
_sym_db.RegisterMessage(PeerNeighborsResponse)

ChallengeRequest = _reflection.GeneratedProtocolMessageType('ChallengeRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHALLENGEREQUEST,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.ChallengeRequest)
  ))
_sym_db.RegisterMessage(ChallengeRequest)

ChallengeResponse = _reflection.GeneratedProtocolMessageType('ChallengeResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHALLENGERESPONSE,
  __module__ = 'Peer_pb2'
  # @@protoc_insertion_point(class_scope:ADL.Protocol.Peer.ChallengeResponse)
  ))
_sym_db.RegisterMessage(ChallengeResponse)


# @@protoc_insertion_point(module_scope)
