// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mempool.proto

#include "Mempool.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Mempool_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Mempool_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Tx_Timestamp;
}  // namespace protobuf_Mempool_2eproto
namespace ADL {
namespace Protocols {
namespace Mempool {
class Tx_TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tx_Timestamp>
      _instance;
} _Tx_Timestamp_default_instance_;
class TxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tx>
      _instance;
} _Tx_default_instance_;
class KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Key>
      _instance;
} _Key_default_instance_;
}  // namespace Mempool
}  // namespace Protocols
}  // namespace ADL
namespace protobuf_Mempool_2eproto {
static void InitDefaultsTx_Timestamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocols::Mempool::_Tx_Timestamp_default_instance_;
    new (ptr) ::ADL::Protocols::Mempool::Tx_Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocols::Mempool::Tx_Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tx_Timestamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTx_Timestamp}, {}};

static void InitDefaultsTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocols::Mempool::_Tx_default_instance_;
    new (ptr) ::ADL::Protocols::Mempool::Tx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocols::Mempool::Tx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Tx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTx}, {
      &protobuf_Mempool_2eproto::scc_info_Tx_Timestamp.base,}};

static void InitDefaultsKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocols::Mempool::_Key_default_instance_;
    new (ptr) ::ADL::Protocols::Mempool::Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocols::Mempool::Key::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Key =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKey}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Tx_Timestamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Key.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx_Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx_Timestamp, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx_Timestamp, nanos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, addresssource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, addressdest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, outputamount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, inputaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, unlockscript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, unlockingprogram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Tx, updated_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocols::Mempool::Key, hashed_signature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ADL::Protocols::Mempool::Tx_Timestamp)},
  { 7, -1, sizeof(::ADL::Protocols::Mempool::Tx)},
  { 22, -1, sizeof(::ADL::Protocols::Mempool::Key)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocols::Mempool::_Tx_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocols::Mempool::_Tx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocols::Mempool::_Key_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Mempool.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rMempool.proto\022\025ADL.Protocols.Mempool\"\236"
      "\002\n\002Tx\022\025\n\raddressSource\030\001 \001(\t\022\023\n\013addressD"
      "est\030\002 \001(\t\022\021\n\tsignature\030\003 \001(\t\022\016\n\006amount\030\004"
      " \001(\007\022\013\n\003fee\030\005 \001(\007\022\024\n\014outputAmount\030\006 \001(\007\022"
      "\023\n\013inputAction\030\007 \001(\t\022\024\n\014unlockScript\030\010 \001"
      "(\t\022\030\n\020unlockingProgram\030\t \001(\t\0224\n\007updated\030"
      "\n \001(\0132#.ADL.Protocols.Mempool.Tx.Timesta"
      "mp\032+\n\tTimestamp\022\017\n\007seconds\030\001 \001(\003\022\r\n\005nano"
      "s\030\002 \001(\005\"\037\n\003Key\022\030\n\020hashed_signature\030\001 \001(\t"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 368);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Mempool.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Mempool_2eproto
namespace ADL {
namespace Protocols {
namespace Mempool {

// ===================================================================

void Tx_Timestamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tx_Timestamp::kSecondsFieldNumber;
const int Tx_Timestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tx_Timestamp::Tx_Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mempool_2eproto::scc_info_Tx_Timestamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocols.Mempool.Tx.Timestamp)
}
Tx_Timestamp::Tx_Timestamp(const Tx_Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:ADL.Protocols.Mempool.Tx.Timestamp)
}

void Tx_Timestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
}

Tx_Timestamp::~Tx_Timestamp() {
  // @@protoc_insertion_point(destructor:ADL.Protocols.Mempool.Tx.Timestamp)
  SharedDtor();
}

void Tx_Timestamp::SharedDtor() {
}

void Tx_Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tx_Timestamp::descriptor() {
  ::protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tx_Timestamp& Tx_Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mempool_2eproto::scc_info_Tx_Timestamp.base);
  return *internal_default_instance();
}


void Tx_Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocols.Mempool.Tx.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  _internal_metadata_.Clear();
}

bool Tx_Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocols.Mempool.Tx.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocols.Mempool.Tx.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocols.Mempool.Tx.Timestamp)
  return false;
#undef DO_
}

void Tx_Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocols.Mempool.Tx.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocols.Mempool.Tx.Timestamp)
}

::google::protobuf::uint8* Tx_Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocols.Mempool.Tx.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nanos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocols.Mempool.Tx.Timestamp)
  return target;
}

size_t Tx_Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocols.Mempool.Tx.Timestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  // int32 nanos = 2;
  if (this->nanos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nanos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tx_Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocols.Mempool.Tx.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Tx_Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tx_Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocols.Mempool.Tx.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocols.Mempool.Tx.Timestamp)
    MergeFrom(*source);
  }
}

void Tx_Timestamp::MergeFrom(const Tx_Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocols.Mempool.Tx.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.nanos() != 0) {
    set_nanos(from.nanos());
  }
}

void Tx_Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocols.Mempool.Tx.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tx_Timestamp::CopyFrom(const Tx_Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocols.Mempool.Tx.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tx_Timestamp::IsInitialized() const {
  return true;
}

void Tx_Timestamp::Swap(Tx_Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tx_Timestamp::InternalSwap(Tx_Timestamp* other) {
  using std::swap;
  swap(seconds_, other->seconds_);
  swap(nanos_, other->nanos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tx_Timestamp::GetMetadata() const {
  protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tx::InitAsDefaultInstance() {
  ::ADL::Protocols::Mempool::_Tx_default_instance_._instance.get_mutable()->updated_ = const_cast< ::ADL::Protocols::Mempool::Tx_Timestamp*>(
      ::ADL::Protocols::Mempool::Tx_Timestamp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tx::kAddressSourceFieldNumber;
const int Tx::kAddressDestFieldNumber;
const int Tx::kSignatureFieldNumber;
const int Tx::kAmountFieldNumber;
const int Tx::kFeeFieldNumber;
const int Tx::kOutputAmountFieldNumber;
const int Tx::kInputActionFieldNumber;
const int Tx::kUnlockScriptFieldNumber;
const int Tx::kUnlockingProgramFieldNumber;
const int Tx::kUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tx::Tx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mempool_2eproto::scc_info_Tx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocols.Mempool.Tx)
}
Tx::Tx(const Tx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addresssource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addresssource().size() > 0) {
    addresssource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addresssource_);
  }
  addressdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addressdest().size() > 0) {
    addressdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addressdest_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  inputaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inputaction().size() > 0) {
    inputaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputaction_);
  }
  unlockscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unlockscript().size() > 0) {
    unlockscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlockscript_);
  }
  unlockingprogram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unlockingprogram().size() > 0) {
    unlockingprogram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlockingprogram_);
  }
  if (from.has_updated()) {
    updated_ = new ::ADL::Protocols::Mempool::Tx_Timestamp(*from.updated_);
  } else {
    updated_ = NULL;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&outputamount_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(outputamount_));
  // @@protoc_insertion_point(copy_constructor:ADL.Protocols.Mempool.Tx)
}

void Tx::SharedCtor() {
  addresssource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addressdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockscript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockingprogram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&updated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outputamount_) -
      reinterpret_cast<char*>(&updated_)) + sizeof(outputamount_));
}

Tx::~Tx() {
  // @@protoc_insertion_point(destructor:ADL.Protocols.Mempool.Tx)
  SharedDtor();
}

void Tx::SharedDtor() {
  addresssource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addressdest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockscript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockingprogram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete updated_;
}

void Tx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tx::descriptor() {
  ::protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tx& Tx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mempool_2eproto::scc_info_Tx.base);
  return *internal_default_instance();
}


void Tx::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocols.Mempool.Tx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresssource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addressdest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inputaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockscript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlockingprogram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && updated_ != NULL) {
    delete updated_;
  }
  updated_ = NULL;
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outputamount_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(outputamount_));
  _internal_metadata_.Clear();
}

bool Tx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocols.Mempool.Tx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string addressSource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addresssource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addresssource().data(), static_cast<int>(this->addresssource().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.addressSource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addressDest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addressdest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addressdest().data(), static_cast<int>(this->addressdest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.addressDest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 fee = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 outputAmount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &outputamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inputAction = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inputaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inputaction().data(), static_cast<int>(this->inputaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.inputAction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unlockScript = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlockscript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unlockscript().data(), static_cast<int>(this->unlockscript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.unlockScript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unlockingProgram = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlockingprogram()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unlockingprogram().data(), static_cast<int>(this->unlockingprogram().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Tx.unlockingProgram"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ADL.Protocols.Mempool.Tx.Timestamp updated = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocols.Mempool.Tx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocols.Mempool.Tx)
  return false;
#undef DO_
}

void Tx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocols.Mempool.Tx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addressSource = 1;
  if (this->addresssource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresssource().data(), static_cast<int>(this->addresssource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.addressSource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addresssource(), output);
  }

  // string addressDest = 2;
  if (this->addressdest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addressdest().data(), static_cast<int>(this->addressdest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.addressDest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->addressdest(), output);
  }

  // string signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->signature(), output);
  }

  // fixed32 amount = 4;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->amount(), output);
  }

  // fixed32 fee = 5;
  if (this->fee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->fee(), output);
  }

  // fixed32 outputAmount = 6;
  if (this->outputamount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->outputamount(), output);
  }

  // string inputAction = 7;
  if (this->inputaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputaction().data(), static_cast<int>(this->inputaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.inputAction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->inputaction(), output);
  }

  // string unlockScript = 8;
  if (this->unlockscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlockscript().data(), static_cast<int>(this->unlockscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.unlockScript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->unlockscript(), output);
  }

  // string unlockingProgram = 9;
  if (this->unlockingprogram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlockingprogram().data(), static_cast<int>(this->unlockingprogram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.unlockingProgram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->unlockingprogram(), output);
  }

  // .ADL.Protocols.Mempool.Tx.Timestamp updated = 10;
  if (this->has_updated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_updated(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocols.Mempool.Tx)
}

::google::protobuf::uint8* Tx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocols.Mempool.Tx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addressSource = 1;
  if (this->addresssource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addresssource().data(), static_cast<int>(this->addresssource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.addressSource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addresssource(), target);
  }

  // string addressDest = 2;
  if (this->addressdest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addressdest().data(), static_cast<int>(this->addressdest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.addressDest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->addressdest(), target);
  }

  // string signature = 3;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->signature(), target);
  }

  // fixed32 amount = 4;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->amount(), target);
  }

  // fixed32 fee = 5;
  if (this->fee() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->fee(), target);
  }

  // fixed32 outputAmount = 6;
  if (this->outputamount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->outputamount(), target);
  }

  // string inputAction = 7;
  if (this->inputaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inputaction().data(), static_cast<int>(this->inputaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.inputAction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->inputaction(), target);
  }

  // string unlockScript = 8;
  if (this->unlockscript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlockscript().data(), static_cast<int>(this->unlockscript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.unlockScript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->unlockscript(), target);
  }

  // string unlockingProgram = 9;
  if (this->unlockingprogram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlockingprogram().data(), static_cast<int>(this->unlockingprogram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Tx.unlockingProgram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->unlockingprogram(), target);
  }

  // .ADL.Protocols.Mempool.Tx.Timestamp updated = 10;
  if (this->has_updated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_updated(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocols.Mempool.Tx)
  return target;
}

size_t Tx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocols.Mempool.Tx)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string addressSource = 1;
  if (this->addresssource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addresssource());
  }

  // string addressDest = 2;
  if (this->addressdest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addressdest());
  }

  // string signature = 3;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // string inputAction = 7;
  if (this->inputaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inputaction());
  }

  // string unlockScript = 8;
  if (this->unlockscript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlockscript());
  }

  // string unlockingProgram = 9;
  if (this->unlockingprogram().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlockingprogram());
  }

  // .ADL.Protocols.Mempool.Tx.Timestamp updated = 10;
  if (this->has_updated()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updated_);
  }

  // fixed32 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 fee = 5;
  if (this->fee() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 outputAmount = 6;
  if (this->outputamount() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocols.Mempool.Tx)
  GOOGLE_DCHECK_NE(&from, this);
  const Tx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocols.Mempool.Tx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocols.Mempool.Tx)
    MergeFrom(*source);
  }
}

void Tx::MergeFrom(const Tx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocols.Mempool.Tx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addresssource().size() > 0) {

    addresssource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addresssource_);
  }
  if (from.addressdest().size() > 0) {

    addressdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addressdest_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.inputaction().size() > 0) {

    inputaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inputaction_);
  }
  if (from.unlockscript().size() > 0) {

    unlockscript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlockscript_);
  }
  if (from.unlockingprogram().size() > 0) {

    unlockingprogram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlockingprogram_);
  }
  if (from.has_updated()) {
    mutable_updated()->::ADL::Protocols::Mempool::Tx_Timestamp::MergeFrom(from.updated());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.fee() != 0) {
    set_fee(from.fee());
  }
  if (from.outputamount() != 0) {
    set_outputamount(from.outputamount());
  }
}

void Tx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocols.Mempool.Tx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tx::CopyFrom(const Tx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocols.Mempool.Tx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tx::IsInitialized() const {
  return true;
}

void Tx::Swap(Tx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tx::InternalSwap(Tx* other) {
  using std::swap;
  addresssource_.Swap(&other->addresssource_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  addressdest_.Swap(&other->addressdest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inputaction_.Swap(&other->inputaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unlockscript_.Swap(&other->unlockscript_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unlockingprogram_.Swap(&other->unlockingprogram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(updated_, other->updated_);
  swap(amount_, other->amount_);
  swap(fee_, other->fee_);
  swap(outputamount_, other->outputamount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tx::GetMetadata() const {
  protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Key::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key::kHashedSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key::Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Mempool_2eproto::scc_info_Key.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocols.Mempool.Key)
}
Key::Key(const Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hashed_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashed_signature().size() > 0) {
    hashed_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_signature_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocols.Mempool.Key)
}

void Key::SharedCtor() {
  hashed_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Key::~Key() {
  // @@protoc_insertion_point(destructor:ADL.Protocols.Mempool.Key)
  SharedDtor();
}

void Key::SharedDtor() {
  hashed_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Key::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Key::descriptor() {
  ::protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Key& Key::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Mempool_2eproto::scc_info_Key.base);
  return *internal_default_instance();
}


void Key::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocols.Mempool.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hashed_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocols.Mempool.Key)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hashed_signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashed_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashed_signature().data(), static_cast<int>(this->hashed_signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocols.Mempool.Key.hashed_signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocols.Mempool.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocols.Mempool.Key)
  return false;
#undef DO_
}

void Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocols.Mempool.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hashed_signature = 1;
  if (this->hashed_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashed_signature().data(), static_cast<int>(this->hashed_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Key.hashed_signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hashed_signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocols.Mempool.Key)
}

::google::protobuf::uint8* Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocols.Mempool.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hashed_signature = 1;
  if (this->hashed_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashed_signature().data(), static_cast<int>(this->hashed_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocols.Mempool.Key.hashed_signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hashed_signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocols.Mempool.Key)
  return target;
}

size_t Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocols.Mempool.Key)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hashed_signature = 1;
  if (this->hashed_signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashed_signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocols.Mempool.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocols.Mempool.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocols.Mempool.Key)
    MergeFrom(*source);
  }
}

void Key::MergeFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocols.Mempool.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hashed_signature().size() > 0) {

    hashed_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashed_signature_);
  }
}

void Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocols.Mempool.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key::CopyFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocols.Mempool.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key::IsInitialized() const {
  return true;
}

void Key::Swap(Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key::InternalSwap(Key* other) {
  using std::swap;
  hashed_signature_.Swap(&other->hashed_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Key::GetMetadata() const {
  protobuf_Mempool_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Mempool_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Mempool
}  // namespace Protocols
}  // namespace ADL
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocols::Mempool::Tx_Timestamp* Arena::CreateMaybeMessage< ::ADL::Protocols::Mempool::Tx_Timestamp >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocols::Mempool::Tx_Timestamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocols::Mempool::Tx* Arena::CreateMaybeMessage< ::ADL::Protocols::Mempool::Tx >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocols::Mempool::Tx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocols::Mempool::Key* Arena::CreateMaybeMessage< ::ADL::Protocols::Mempool::Key >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocols::Mempool::Key >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
