// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.proto

#include "Rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ADL {
namespace Protocol {
namespace Rpc {
namespace Node {
class PingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PingRequest>
      _instance;
} _PingRequest_default_instance_;
class PongResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PongResponse>
      _instance;
} _PongResponse_default_instance_;
class VersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionRequest>
      _instance;
} _VersionRequest_default_instance_;
class VersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionResponse>
      _instance;
} _VersionResponse_default_instance_;
class GetInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetInfoRequest>
      _instance;
} _GetInfoRequest_default_instance_;
class GetInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetInfoResponse>
      _instance;
} _GetInfoResponse_default_instance_;
class CreateWalletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWalletRequest>
      _instance;
} _CreateWalletRequest_default_instance_;
class CreateWalletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateWalletResponse>
      _instance;
} _CreateWalletResponse_default_instance_;
class ListWalletRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWalletRequest>
      _instance;
} _ListWalletRequest_default_instance_;
class ListWalletResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWalletResponse>
      _instance;
} _ListWalletResponse_default_instance_;
class CreateAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAddressRequest>
      _instance;
} _CreateAddressRequest_default_instance_;
class CreateAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAddressResponse>
      _instance;
} _CreateAddressResponse_default_instance_;
class GetAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAddressRequest>
      _instance;
} _GetAddressRequest_default_instance_;
class GetAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAddressResponse>
      _instance;
} _GetAddressResponse_default_instance_;
class ListAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAddressRequest>
      _instance;
} _ListAddressRequest_default_instance_;
class ListAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListAddressResponse>
      _instance;
} _ListAddressResponse_default_instance_;
class ValidateAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAddressRequest>
      _instance;
} _ValidateAddressRequest_default_instance_;
class ValidateAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateAddressResponse>
      _instance;
} _ValidateAddressResponse_default_instance_;
class GetBalanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceRequest>
      _instance;
} _GetBalanceRequest_default_instance_;
class GetBalanceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBalanceResponse>
      _instance;
} _GetBalanceResponse_default_instance_;
class CreateRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRawTransactionRequest>
      _instance;
} _CreateRawTransactionRequest_default_instance_;
class CreateRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRawTransactionResponse>
      _instance;
} _CreateRawTransactionResponse_default_instance_;
class SignRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignRawTransactionRequest>
      _instance;
} _SignRawTransactionRequest_default_instance_;
class SignRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignRawTransactionResponse>
      _instance;
} _SignRawTransactionResponse_default_instance_;
class DecodeRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecodeRawTransactionRequest>
      _instance;
} _DecodeRawTransactionRequest_default_instance_;
class DecodeRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecodeRawTransactionResponse>
      _instance;
} _DecodeRawTransactionResponse_default_instance_;
class BroadcastRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastRawTransactionRequest>
      _instance;
} _BroadcastRawTransactionRequest_default_instance_;
class BroadcastRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastRawTransactionResponse>
      _instance;
} _BroadcastRawTransactionResponse_default_instance_;
class SendToRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToRequest>
      _instance;
} _SendToRequest_default_instance_;
class SendToResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToResponse>
      _instance;
} _SendToResponse_default_instance_;
class SendToFromRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToFromRequest>
      _instance;
} _SendToFromRequest_default_instance_;
class SendToFromResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendToFromResponse>
      _instance;
} _SendToFromResponse_default_instance_;
class SendManyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendManyRequest>
      _instance;
} _SendManyRequest_default_instance_;
class SendManyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendManyResponse>
      _instance;
} _SendManyResponse_default_instance_;
class SendFromManyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFromManyRequest>
      _instance;
} _SendFromManyRequest_default_instance_;
class SendFromManyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFromManyResponse>
      _instance;
} _SendFromManyResponse_default_instance_;
class AddNodeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNodeRequest>
      _instance;
} _AddNodeRequest_default_instance_;
class AddNodeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNodeResponse>
      _instance;
} _AddNodeResponse_default_instance_;
class GetPeerListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerListRequest>
      _instance;
} _GetPeerListRequest_default_instance_;
class GetPeerListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerListResponse>
      _instance;
} _GetPeerListResponse_default_instance_;
class GetPeerInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerInfoRequest>
      _instance;
} _GetPeerInfoRequest_default_instance_;
class GetPeerInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetPeerInfoResponse>
      _instance;
} _GetPeerInfoResponse_default_instance_;
class GetConnectionCountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetConnectionCountRequest>
      _instance;
} _GetConnectionCountRequest_default_instance_;
class GetConnectionCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetConnectionCountResponse>
      _instance;
} _GetConnectionCountResponse_default_instance_;
class GetDeltaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeltaRequest>
      _instance;
} _GetDeltaRequest_default_instance_;
class GetDeltaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeltaResponse>
      _instance;
} _GetDeltaResponse_default_instance_;
class GetMempoolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMempoolRequest>
      _instance;
} _GetMempoolRequest_default_instance_;
class GetMempoolResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMempoolResponse>
      _instance;
} _GetMempoolResponse_default_instance_;
class SignMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignMessageRequest>
      _instance;
} _SignMessageRequest_default_instance_;
class SignMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignMessageResponse>
      _instance;
} _SignMessageResponse_default_instance_;
class VerifyMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyMessageRequest>
      _instance;
} _VerifyMessageRequest_default_instance_;
class VerifyMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyMessageResponse>
      _instance;
} _VerifyMessageResponse_default_instance_;
class ServiceStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceStatusRequest>
      _instance;
} _ServiceStatusRequest_default_instance_;
class ServiceStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceStatusResponse>
      _instance;
} _ServiceStatusResponse_default_instance_;
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace ADL
namespace protobuf_Rpc_2eproto {
static void InitDefaultsPingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_PingRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::PingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::PingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPingRequest}, {}};

static void InitDefaultsPongResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_PongResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::PongResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::PongResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PongResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPongResponse}, {}};

static void InitDefaultsVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_VersionRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::VersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::VersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionRequest}, {}};

static void InitDefaultsVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_VersionResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::VersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::VersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionResponse}, {}};

static void InitDefaultsGetInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetInfoRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetInfoRequest}, {}};

static void InitDefaultsGetInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetInfoResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetInfoResponse}, {}};

static void InitDefaultsCreateWalletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateWalletRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateWalletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateWalletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateWalletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateWalletRequest}, {}};

static void InitDefaultsCreateWalletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateWalletResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateWalletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateWalletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateWalletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateWalletResponse}, {}};

static void InitDefaultsListWalletRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ListWalletRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ListWalletRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ListWalletRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWalletRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWalletRequest}, {}};

static void InitDefaultsListWalletResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ListWalletResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ListWalletResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ListWalletResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWalletResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWalletResponse}, {}};

static void InitDefaultsCreateAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateAddressRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAddressRequest}, {}};

static void InitDefaultsCreateAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateAddressResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAddressResponse}, {}};

static void InitDefaultsGetAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetAddressRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAddressRequest}, {}};

static void InitDefaultsGetAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetAddressResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAddressResponse}, {}};

static void InitDefaultsListAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ListAddressRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ListAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ListAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListAddressRequest}, {}};

static void InitDefaultsListAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ListAddressResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ListAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ListAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListAddressResponse}, {}};

static void InitDefaultsValidateAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ValidateAddressRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ValidateAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ValidateAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAddressRequest}, {}};

static void InitDefaultsValidateAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ValidateAddressResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ValidateAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ValidateAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidateAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidateAddressResponse}, {}};

static void InitDefaultsGetBalanceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetBalanceRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetBalanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetBalanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceRequest}, {}};

static void InitDefaultsGetBalanceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetBalanceResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetBalanceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetBalanceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBalanceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBalanceResponse}, {}};

static void InitDefaultsCreateRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateRawTransactionRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRawTransactionRequest}, {}};

static void InitDefaultsCreateRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_CreateRawTransactionResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRawTransactionResponse}, {}};

static void InitDefaultsSignRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SignRawTransactionRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SignRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SignRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignRawTransactionRequest}, {}};

static void InitDefaultsSignRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SignRawTransactionResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SignRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SignRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignRawTransactionResponse}, {}};

static void InitDefaultsDecodeRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_DecodeRawTransactionRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecodeRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecodeRawTransactionRequest}, {}};

static void InitDefaultsDecodeRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_DecodeRawTransactionResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DecodeRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecodeRawTransactionResponse}, {}};

static void InitDefaultsBroadcastRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_BroadcastRawTransactionRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastRawTransactionRequest}, {}};

static void InitDefaultsBroadcastRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_BroadcastRawTransactionResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastRawTransactionResponse}, {}};

static void InitDefaultsSendToRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendToRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendToRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendToRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToRequest}, {}};

static void InitDefaultsSendToResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendToResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendToResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendToResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToResponse}, {}};

static void InitDefaultsSendToFromRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendToFromRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendToFromRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendToFromRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToFromRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToFromRequest}, {}};

static void InitDefaultsSendToFromResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendToFromResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendToFromResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendToFromResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendToFromResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendToFromResponse}, {}};

static void InitDefaultsSendManyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendManyRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendManyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendManyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendManyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendManyRequest}, {}};

static void InitDefaultsSendManyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendManyResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendManyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendManyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendManyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendManyResponse}, {}};

static void InitDefaultsSendFromManyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendFromManyRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendFromManyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendFromManyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendFromManyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendFromManyRequest}, {}};

static void InitDefaultsSendFromManyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SendFromManyResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SendFromManyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SendFromManyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendFromManyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendFromManyResponse}, {}};

static void InitDefaultsAddNodeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_AddNodeRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::AddNodeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::AddNodeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddNodeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddNodeRequest}, {}};

static void InitDefaultsAddNodeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_AddNodeResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::AddNodeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::AddNodeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddNodeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddNodeResponse}, {}};

static void InitDefaultsGetPeerListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetPeerListRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetPeerListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetPeerListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerListRequest}, {}};

static void InitDefaultsGetPeerListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetPeerListResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetPeerListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetPeerListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerListResponse}, {}};

static void InitDefaultsGetPeerInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetPeerInfoRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetPeerInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetPeerInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerInfoRequest}, {}};

static void InitDefaultsGetPeerInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetPeerInfoResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetPeerInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetPeerInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetPeerInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetPeerInfoResponse}, {}};

static void InitDefaultsGetConnectionCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetConnectionCountRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetConnectionCountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetConnectionCountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetConnectionCountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetConnectionCountRequest}, {}};

static void InitDefaultsGetConnectionCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetConnectionCountResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetConnectionCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetConnectionCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetConnectionCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetConnectionCountResponse}, {}};

static void InitDefaultsGetDeltaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetDeltaRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetDeltaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetDeltaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDeltaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDeltaRequest}, {}};

static void InitDefaultsGetDeltaResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetDeltaResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetDeltaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetDeltaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDeltaResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDeltaResponse}, {}};

static void InitDefaultsGetMempoolRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetMempoolRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetMempoolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetMempoolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMempoolRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMempoolRequest}, {}};

static void InitDefaultsGetMempoolResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_GetMempoolResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::GetMempoolResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::GetMempoolResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMempoolResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMempoolResponse}, {}};

static void InitDefaultsSignMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SignMessageRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SignMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SignMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignMessageRequest}, {}};

static void InitDefaultsSignMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_SignMessageResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::SignMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::SignMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignMessageResponse}, {}};

static void InitDefaultsVerifyMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_VerifyMessageRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::VerifyMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::VerifyMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyMessageRequest}, {}};

static void InitDefaultsVerifyMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_VerifyMessageResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::VerifyMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::VerifyMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyMessageResponse}, {}};

static void InitDefaultsServiceStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ServiceStatusRequest_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ServiceStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ServiceStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceStatusRequest}, {}};

static void InitDefaultsServiceStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ADL::Protocol::Rpc::Node::_ServiceStatusResponse_default_instance_;
    new (ptr) ::ADL::Protocol::Rpc::Node::ServiceStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ADL::Protocol::Rpc::Node::ServiceStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceStatusResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PingRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PongResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWalletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateWalletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWalletRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWalletResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBalanceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecodeRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecodeRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToFromRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendToFromResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendManyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendManyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendFromManyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendFromManyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddNodeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddNodeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetPeerInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetConnectionCountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetConnectionCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeltaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeltaResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMempoolRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMempoolResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceStatusResponse.base);
}

::google::protobuf::Metadata file_level_metadata[54];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::PingRequest, ping_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::PongResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::PongResponse, pong_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VersionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VersionResponse, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetInfoRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetInfoResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateWalletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateWalletRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateWalletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateWalletResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListWalletRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListWalletRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListWalletResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListWalletResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ListAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ValidateAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ValidateAddressRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ValidateAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ValidateAddressResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetBalanceRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetBalanceResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToFromRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToFromRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToFromResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendToFromResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendManyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendManyRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendManyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendManyResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendFromManyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendFromManyRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendFromManyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SendFromManyResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::AddNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::AddNodeRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::AddNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::AddNodeResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerListRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerListResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerInfoRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetPeerInfoResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetConnectionCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetConnectionCountRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetConnectionCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetConnectionCountResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetDeltaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetDeltaRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetDeltaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetDeltaResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetMempoolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetMempoolRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetMempoolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::GetMempoolResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignMessageRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::SignMessageResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VerifyMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VerifyMessageRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VerifyMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::VerifyMessageResponse, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ServiceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ServiceStatusRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ServiceStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ADL::Protocol::Rpc::Node::ServiceStatusResponse, query_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ADL::Protocol::Rpc::Node::PingRequest)},
  { 6, -1, sizeof(::ADL::Protocol::Rpc::Node::PongResponse)},
  { 12, -1, sizeof(::ADL::Protocol::Rpc::Node::VersionRequest)},
  { 18, -1, sizeof(::ADL::Protocol::Rpc::Node::VersionResponse)},
  { 24, -1, sizeof(::ADL::Protocol::Rpc::Node::GetInfoRequest)},
  { 30, -1, sizeof(::ADL::Protocol::Rpc::Node::GetInfoResponse)},
  { 36, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateWalletRequest)},
  { 42, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateWalletResponse)},
  { 48, -1, sizeof(::ADL::Protocol::Rpc::Node::ListWalletRequest)},
  { 54, -1, sizeof(::ADL::Protocol::Rpc::Node::ListWalletResponse)},
  { 60, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateAddressRequest)},
  { 66, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateAddressResponse)},
  { 72, -1, sizeof(::ADL::Protocol::Rpc::Node::GetAddressRequest)},
  { 78, -1, sizeof(::ADL::Protocol::Rpc::Node::GetAddressResponse)},
  { 84, -1, sizeof(::ADL::Protocol::Rpc::Node::ListAddressRequest)},
  { 90, -1, sizeof(::ADL::Protocol::Rpc::Node::ListAddressResponse)},
  { 96, -1, sizeof(::ADL::Protocol::Rpc::Node::ValidateAddressRequest)},
  { 102, -1, sizeof(::ADL::Protocol::Rpc::Node::ValidateAddressResponse)},
  { 108, -1, sizeof(::ADL::Protocol::Rpc::Node::GetBalanceRequest)},
  { 114, -1, sizeof(::ADL::Protocol::Rpc::Node::GetBalanceResponse)},
  { 120, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest)},
  { 126, -1, sizeof(::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse)},
  { 132, -1, sizeof(::ADL::Protocol::Rpc::Node::SignRawTransactionRequest)},
  { 138, -1, sizeof(::ADL::Protocol::Rpc::Node::SignRawTransactionResponse)},
  { 144, -1, sizeof(::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest)},
  { 150, -1, sizeof(::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse)},
  { 156, -1, sizeof(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest)},
  { 162, -1, sizeof(::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse)},
  { 168, -1, sizeof(::ADL::Protocol::Rpc::Node::SendToRequest)},
  { 174, -1, sizeof(::ADL::Protocol::Rpc::Node::SendToResponse)},
  { 180, -1, sizeof(::ADL::Protocol::Rpc::Node::SendToFromRequest)},
  { 186, -1, sizeof(::ADL::Protocol::Rpc::Node::SendToFromResponse)},
  { 192, -1, sizeof(::ADL::Protocol::Rpc::Node::SendManyRequest)},
  { 198, -1, sizeof(::ADL::Protocol::Rpc::Node::SendManyResponse)},
  { 204, -1, sizeof(::ADL::Protocol::Rpc::Node::SendFromManyRequest)},
  { 210, -1, sizeof(::ADL::Protocol::Rpc::Node::SendFromManyResponse)},
  { 216, -1, sizeof(::ADL::Protocol::Rpc::Node::AddNodeRequest)},
  { 222, -1, sizeof(::ADL::Protocol::Rpc::Node::AddNodeResponse)},
  { 228, -1, sizeof(::ADL::Protocol::Rpc::Node::GetPeerListRequest)},
  { 234, -1, sizeof(::ADL::Protocol::Rpc::Node::GetPeerListResponse)},
  { 240, -1, sizeof(::ADL::Protocol::Rpc::Node::GetPeerInfoRequest)},
  { 246, -1, sizeof(::ADL::Protocol::Rpc::Node::GetPeerInfoResponse)},
  { 252, -1, sizeof(::ADL::Protocol::Rpc::Node::GetConnectionCountRequest)},
  { 258, -1, sizeof(::ADL::Protocol::Rpc::Node::GetConnectionCountResponse)},
  { 264, -1, sizeof(::ADL::Protocol::Rpc::Node::GetDeltaRequest)},
  { 270, -1, sizeof(::ADL::Protocol::Rpc::Node::GetDeltaResponse)},
  { 276, -1, sizeof(::ADL::Protocol::Rpc::Node::GetMempoolRequest)},
  { 282, -1, sizeof(::ADL::Protocol::Rpc::Node::GetMempoolResponse)},
  { 288, -1, sizeof(::ADL::Protocol::Rpc::Node::SignMessageRequest)},
  { 294, -1, sizeof(::ADL::Protocol::Rpc::Node::SignMessageResponse)},
  { 300, -1, sizeof(::ADL::Protocol::Rpc::Node::VerifyMessageRequest)},
  { 306, -1, sizeof(::ADL::Protocol::Rpc::Node::VerifyMessageResponse)},
  { 312, -1, sizeof(::ADL::Protocol::Rpc::Node::ServiceStatusRequest)},
  { 318, -1, sizeof(::ADL::Protocol::Rpc::Node::ServiceStatusResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_PingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_PongResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_VersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_VersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateWalletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateWalletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ListWalletRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ListWalletResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ListAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ListAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ValidateAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ValidateAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetBalanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_CreateRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SignRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SignRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_DecodeRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_DecodeRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_BroadcastRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_BroadcastRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendToRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendToResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendToFromRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendToFromResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendManyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendManyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendFromManyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SendFromManyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_AddNodeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_AddNodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetPeerListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetPeerListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetPeerInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetPeerInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetConnectionCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetConnectionCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetDeltaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetDeltaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetMempoolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_GetMempoolResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SignMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_SignMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_VerifyMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_VerifyMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ServiceStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ADL::Protocol::Rpc::Node::_ServiceStatusResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 54);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tRpc.proto\022\025ADL.Protocol.Rpc.Node\"\033\n\013Pi"
      "ngRequest\022\014\n\004ping\030\001 \001(\t\"\034\n\014PongResponse\022"
      "\014\n\004pong\030\002 \001(\t\"\037\n\016VersionRequest\022\r\n\005query"
      "\030\001 \001(\010\"\"\n\017VersionResponse\022\017\n\007version\030\001 \001"
      "(\t\"\037\n\016GetInfoRequest\022\r\n\005query\030\001 \001(\010\" \n\017G"
      "etInfoResponse\022\r\n\005query\030\001 \001(\t\"$\n\023CreateW"
      "alletRequest\022\r\n\005query\030\001 \001(\010\"%\n\024CreateWal"
      "letResponse\022\r\n\005query\030\001 \001(\t\"\"\n\021ListWallet"
      "Request\022\r\n\005query\030\001 \001(\010\"#\n\022ListWalletResp"
      "onse\022\r\n\005query\030\001 \001(\t\"%\n\024CreateAddressRequ"
      "est\022\r\n\005query\030\001 \001(\010\"&\n\025CreateAddressRespo"
      "nse\022\r\n\005query\030\001 \001(\t\"\"\n\021GetAddressRequest\022"
      "\r\n\005query\030\001 \001(\010\"#\n\022GetAddressResponse\022\r\n\005"
      "query\030\001 \001(\t\"#\n\022ListAddressRequest\022\r\n\005que"
      "ry\030\001 \001(\010\"$\n\023ListAddressResponse\022\r\n\005query"
      "\030\001 \001(\t\"\'\n\026ValidateAddressRequest\022\r\n\005quer"
      "y\030\001 \001(\010\"(\n\027ValidateAddressResponse\022\r\n\005qu"
      "ery\030\001 \001(\t\"\"\n\021GetBalanceRequest\022\r\n\005query\030"
      "\001 \001(\010\"#\n\022GetBalanceResponse\022\r\n\005query\030\001 \001"
      "(\t\",\n\033CreateRawTransactionRequest\022\r\n\005que"
      "ry\030\001 \001(\010\"-\n\034CreateRawTransactionResponse"
      "\022\r\n\005query\030\001 \001(\t\"*\n\031SignRawTransactionReq"
      "uest\022\r\n\005query\030\001 \001(\010\"+\n\032SignRawTransactio"
      "nResponse\022\r\n\005query\030\001 \001(\t\",\n\033DecodeRawTra"
      "nsactionRequest\022\r\n\005query\030\001 \001(\010\"-\n\034Decode"
      "RawTransactionResponse\022\r\n\005query\030\001 \001(\t\"/\n"
      "\036BroadcastRawTransactionRequest\022\r\n\005query"
      "\030\001 \001(\010\"0\n\037BroadcastRawTransactionRespons"
      "e\022\r\n\005query\030\001 \001(\t\"\036\n\rSendToRequest\022\r\n\005que"
      "ry\030\001 \001(\010\"\037\n\016SendToResponse\022\r\n\005query\030\001 \001("
      "\t\"\"\n\021SendToFromRequest\022\r\n\005query\030\001 \001(\010\"#\n"
      "\022SendToFromResponse\022\r\n\005query\030\001 \001(\t\" \n\017Se"
      "ndManyRequest\022\r\n\005query\030\001 \001(\010\"!\n\020SendMany"
      "Response\022\r\n\005query\030\001 \001(\t\"$\n\023SendFromManyR"
      "equest\022\r\n\005query\030\001 \001(\010\"%\n\024SendFromManyRes"
      "ponse\022\r\n\005query\030\001 \001(\t\"\037\n\016AddNodeRequest\022\r"
      "\n\005query\030\001 \001(\010\" \n\017AddNodeResponse\022\r\n\005quer"
      "y\030\001 \001(\t\"#\n\022GetPeerListRequest\022\r\n\005query\030\001"
      " \001(\010\"$\n\023GetPeerListResponse\022\r\n\005query\030\001 \001"
      "(\t\"#\n\022GetPeerInfoRequest\022\r\n\005query\030\001 \001(\010\""
      "$\n\023GetPeerInfoResponse\022\r\n\005query\030\001 \001(\t\"*\n"
      "\031GetConnectionCountRequest\022\r\n\005query\030\001 \001("
      "\010\"+\n\032GetConnectionCountResponse\022\r\n\005query"
      "\030\001 \001(\t\" \n\017GetDeltaRequest\022\r\n\005query\030\001 \001(\010"
      "\"!\n\020GetDeltaResponse\022\r\n\005query\030\001 \001(\t\"\"\n\021G"
      "etMempoolRequest\022\r\n\005query\030\001 \001(\010\"#\n\022GetMe"
      "mpoolResponse\022\r\n\005query\030\001 \001(\t\"#\n\022SignMess"
      "ageRequest\022\r\n\005query\030\001 \001(\010\"$\n\023SignMessage"
      "Response\022\r\n\005query\030\001 \001(\t\"%\n\024VerifyMessage"
      "Request\022\r\n\005query\030\001 \001(\010\"&\n\025VerifyMessageR"
      "esponse\022\r\n\005query\030\001 \001(\t\"%\n\024ServiceStatusR"
      "equest\022\r\n\005query\030\001 \001(\010\"&\n\025ServiceStatusRe"
      "sponse\022\r\n\005query\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Rpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Rpc_2eproto
namespace ADL {
namespace Protocol {
namespace Rpc {
namespace Node {

// ===================================================================

void PingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRequest::kPingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_PingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ping().size() > 0) {
    ping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.PingRequest)
}

void PingRequest::SharedCtor() {
  ping_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  ping_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRequest& PingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_PingRequest.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ping_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.PingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ping = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ping().data(), static_cast<int>(this->ping().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.PingRequest.ping"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ping = 1;
  if (this->ping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ping().data(), static_cast<int>(this->ping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.PingRequest.ping");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.PingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ping = 1;
  if (this->ping().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ping().data(), static_cast<int>(this->ping().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.PingRequest.ping");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.PingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ping = 1;
  if (this->ping().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ping().size() > 0) {

    ping_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_);
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  ping_.Swap(&other->ping_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PongResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PongResponse::kPongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PongResponse::PongResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_PongResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.PongResponse)
}
PongResponse::PongResponse(const PongResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pong_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pong().size() > 0) {
    pong_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.PongResponse)
}

void PongResponse::SharedCtor() {
  pong_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PongResponse::~PongResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.PongResponse)
  SharedDtor();
}

void PongResponse::SharedDtor() {
  pong_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PongResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PongResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PongResponse& PongResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_PongResponse.base);
  return *internal_default_instance();
}


void PongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PongResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.PongResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pong = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pong()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pong().data(), static_cast<int>(this->pong().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.PongResponse.pong"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.PongResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.PongResponse)
  return false;
#undef DO_
}

void PongResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pong = 2;
  if (this->pong().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pong().data(), static_cast<int>(this->pong().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.PongResponse.pong");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pong(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.PongResponse)
}

::google::protobuf::uint8* PongResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.PongResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pong = 2;
  if (this->pong().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pong().data(), static_cast<int>(this->pong().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.PongResponse.pong");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pong(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.PongResponse)
  return target;
}

size_t PongResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.PongResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pong = 2;
  if (this->pong().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pong());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PongResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PongResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PongResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.PongResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.PongResponse)
    MergeFrom(*source);
  }
}

void PongResponse::MergeFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pong().size() > 0) {

    pong_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_);
  }
}

void PongResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PongResponse::CopyFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PongResponse::IsInitialized() const {
  return true;
}

void PongResponse::Swap(PongResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PongResponse::InternalSwap(PongResponse* other) {
  using std::swap;
  pong_.Swap(&other->pong_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PongResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRequest::VersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.VersionRequest)
}

void VersionRequest::SharedCtor() {
  query_ = false;
}

VersionRequest::~VersionRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.VersionRequest)
  SharedDtor();
}

void VersionRequest::SharedDtor() {
}

void VersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionRequest& VersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VersionRequest.base);
  return *internal_default_instance();
}


void VersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool VersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.VersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.VersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.VersionRequest)
  return false;
#undef DO_
}

void VersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.VersionRequest)
}

::google::protobuf::uint8* VersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.VersionRequest)
  return target;
}

size_t VersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.VersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.VersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.VersionRequest)
    MergeFrom(*source);
  }
}

void VersionRequest::MergeFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void VersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRequest::CopyFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRequest::IsInitialized() const {
  return true;
}

void VersionRequest::Swap(VersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRequest::InternalSwap(VersionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionResponse::VersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.VersionResponse)
}

void VersionResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.VersionResponse)
  SharedDtor();
}

void VersionResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionResponse& VersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VersionResponse.base);
  return *internal_default_instance();
}


void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.VersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.VersionResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.VersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.VersionResponse)
  return false;
#undef DO_
}

void VersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.VersionResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.VersionResponse)
}

::google::protobuf::uint8* VersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.VersionResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.VersionResponse)
  return target;
}

size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.VersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.VersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.VersionResponse)
    MergeFrom(*source);
  }
}

void VersionResponse::MergeFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void VersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::Swap(VersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionResponse::InternalSwap(VersionResponse* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoRequest::GetInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(const GetInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetInfoRequest)
}

void GetInfoRequest::SharedCtor() {
  query_ = false;
}

GetInfoRequest::~GetInfoRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetInfoRequest)
  SharedDtor();
}

void GetInfoRequest::SharedDtor() {
}

void GetInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetInfoRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoRequest& GetInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetInfoRequest.base);
  return *internal_default_instance();
}


void GetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetInfoRequest)
  return false;
#undef DO_
}

void GetInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetInfoRequest)
}

::google::protobuf::uint8* GetInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetInfoRequest)
  return target;
}

size_t GetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetInfoRequest)
    MergeFrom(*source);
  }
}

void GetInfoRequest::MergeFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoRequest::CopyFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest::IsInitialized() const {
  return true;
}

void GetInfoRequest::Swap(GetInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoRequest::InternalSwap(GetInfoRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetInfoRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoResponse::GetInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetInfoResponse)
}
GetInfoResponse::GetInfoResponse(const GetInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetInfoResponse)
}

void GetInfoResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetInfoResponse)
  SharedDtor();
}

void GetInfoResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetInfoResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoResponse& GetInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetInfoResponse.base);
  return *internal_default_instance();
}


void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetInfoResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetInfoResponse)
  return false;
#undef DO_
}

void GetInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetInfoResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetInfoResponse)
}

::google::protobuf::uint8* GetInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetInfoResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetInfoResponse)
  return target;
}

size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetInfoResponse)
    MergeFrom(*source);
  }
}

void GetInfoResponse::MergeFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::Swap(GetInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoResponse::InternalSwap(GetInfoResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetInfoResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWalletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWalletRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWalletRequest::CreateWalletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateWalletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateWalletRequest)
}
CreateWalletRequest::CreateWalletRequest(const CreateWalletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateWalletRequest)
}

void CreateWalletRequest::SharedCtor() {
  query_ = false;
}

CreateWalletRequest::~CreateWalletRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  SharedDtor();
}

void CreateWalletRequest::SharedDtor() {
}

void CreateWalletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWalletRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWalletRequest& CreateWalletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateWalletRequest.base);
  return *internal_default_instance();
}


void CreateWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateWalletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  return false;
#undef DO_
}

void CreateWalletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateWalletRequest)
}

::google::protobuf::uint8* CreateWalletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  return target;
}

size_t CreateWalletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWalletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWalletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWalletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateWalletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateWalletRequest)
    MergeFrom(*source);
  }
}

void CreateWalletRequest::MergeFrom(const CreateWalletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateWalletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWalletRequest::CopyFrom(const CreateWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWalletRequest::IsInitialized() const {
  return true;
}

void CreateWalletRequest::Swap(CreateWalletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateWalletRequest::InternalSwap(CreateWalletRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWalletRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateWalletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateWalletResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateWalletResponse::CreateWalletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateWalletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateWalletResponse)
}
CreateWalletResponse::CreateWalletResponse(const CreateWalletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateWalletResponse)
}

void CreateWalletResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateWalletResponse::~CreateWalletResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  SharedDtor();
}

void CreateWalletResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateWalletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateWalletResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateWalletResponse& CreateWalletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateWalletResponse.base);
  return *internal_default_instance();
}


void CreateWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateWalletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.CreateWalletResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  return false;
#undef DO_
}

void CreateWalletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateWalletResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateWalletResponse)
}

::google::protobuf::uint8* CreateWalletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateWalletResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  return target;
}

size_t CreateWalletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWalletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWalletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateWalletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateWalletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateWalletResponse)
    MergeFrom(*source);
  }
}

void CreateWalletResponse::MergeFrom(const CreateWalletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateWalletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWalletResponse::CopyFrom(const CreateWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWalletResponse::IsInitialized() const {
  return true;
}

void CreateWalletResponse::Swap(CreateWalletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateWalletResponse::InternalSwap(CreateWalletResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateWalletResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWalletRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWalletRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWalletRequest::ListWalletRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListWalletRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ListWalletRequest)
}
ListWalletRequest::ListWalletRequest(const ListWalletRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ListWalletRequest)
}

void ListWalletRequest::SharedCtor() {
  query_ = false;
}

ListWalletRequest::~ListWalletRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ListWalletRequest)
  SharedDtor();
}

void ListWalletRequest::SharedDtor() {
}

void ListWalletRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWalletRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWalletRequest& ListWalletRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListWalletRequest.base);
  return *internal_default_instance();
}


void ListWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ListWalletRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ListWalletRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ListWalletRequest)
  return false;
#undef DO_
}

void ListWalletRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ListWalletRequest)
}

::google::protobuf::uint8* ListWalletRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ListWalletRequest)
  return target;
}

size_t ListWalletRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWalletRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWalletRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWalletRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ListWalletRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ListWalletRequest)
    MergeFrom(*source);
  }
}

void ListWalletRequest::MergeFrom(const ListWalletRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ListWalletRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWalletRequest::CopyFrom(const ListWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ListWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWalletRequest::IsInitialized() const {
  return true;
}

void ListWalletRequest::Swap(ListWalletRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWalletRequest::InternalSwap(ListWalletRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWalletRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListWalletResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWalletResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWalletResponse::ListWalletResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListWalletResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ListWalletResponse)
}
ListWalletResponse::ListWalletResponse(const ListWalletResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ListWalletResponse)
}

void ListWalletResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListWalletResponse::~ListWalletResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ListWalletResponse)
  SharedDtor();
}

void ListWalletResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListWalletResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListWalletResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListWalletResponse& ListWalletResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListWalletResponse.base);
  return *internal_default_instance();
}


void ListWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListWalletResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.ListWalletResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ListWalletResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ListWalletResponse)
  return false;
#undef DO_
}

void ListWalletResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ListWalletResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ListWalletResponse)
}

::google::protobuf::uint8* ListWalletResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ListWalletResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ListWalletResponse)
  return target;
}

size_t ListWalletResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWalletResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWalletResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListWalletResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ListWalletResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ListWalletResponse)
    MergeFrom(*source);
  }
}

void ListWalletResponse::MergeFrom(const ListWalletResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ListWalletResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWalletResponse::CopyFrom(const ListWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ListWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWalletResponse::IsInitialized() const {
  return true;
}

void ListWalletResponse::Swap(ListWalletResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWalletResponse::InternalSwap(ListWalletResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWalletResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAddressRequest::CreateAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateAddressRequest)
}
CreateAddressRequest::CreateAddressRequest(const CreateAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateAddressRequest)
}

void CreateAddressRequest::SharedCtor() {
  query_ = false;
}

CreateAddressRequest::~CreateAddressRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  SharedDtor();
}

void CreateAddressRequest::SharedDtor() {
}

void CreateAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAddressRequest& CreateAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateAddressRequest.base);
  return *internal_default_instance();
}


void CreateAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  return false;
#undef DO_
}

void CreateAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateAddressRequest)
}

::google::protobuf::uint8* CreateAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  return target;
}

size_t CreateAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateAddressRequest)
    MergeFrom(*source);
  }
}

void CreateAddressRequest::MergeFrom(const CreateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAddressRequest::CopyFrom(const CreateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAddressRequest::IsInitialized() const {
  return true;
}

void CreateAddressRequest::Swap(CreateAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAddressRequest::InternalSwap(CreateAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAddressResponse::CreateAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateAddressResponse)
}
CreateAddressResponse::CreateAddressResponse(const CreateAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateAddressResponse)
}

void CreateAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateAddressResponse::~CreateAddressResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  SharedDtor();
}

void CreateAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAddressResponse& CreateAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateAddressResponse.base);
  return *internal_default_instance();
}


void CreateAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.CreateAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  return false;
#undef DO_
}

void CreateAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateAddressResponse)
}

::google::protobuf::uint8* CreateAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  return target;
}

size_t CreateAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateAddressResponse)
    MergeFrom(*source);
  }
}

void CreateAddressResponse::MergeFrom(const CreateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAddressResponse::CopyFrom(const CreateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAddressResponse::IsInitialized() const {
  return true;
}

void CreateAddressResponse::Swap(CreateAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAddressResponse::InternalSwap(CreateAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressRequest::GetAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetAddressRequest)
}
GetAddressRequest::GetAddressRequest(const GetAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetAddressRequest)
}

void GetAddressRequest::SharedCtor() {
  query_ = false;
}

GetAddressRequest::~GetAddressRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetAddressRequest)
  SharedDtor();
}

void GetAddressRequest::SharedDtor() {
}

void GetAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressRequest& GetAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetAddressRequest.base);
  return *internal_default_instance();
}


void GetAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetAddressRequest)
  return false;
#undef DO_
}

void GetAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetAddressRequest)
}

::google::protobuf::uint8* GetAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetAddressRequest)
  return target;
}

size_t GetAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetAddressRequest)
    MergeFrom(*source);
  }
}

void GetAddressRequest::MergeFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressRequest::CopyFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressRequest::IsInitialized() const {
  return true;
}

void GetAddressRequest::Swap(GetAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressRequest::InternalSwap(GetAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressResponse::GetAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetAddressResponse)
}
GetAddressResponse::GetAddressResponse(const GetAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetAddressResponse)
}

void GetAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAddressResponse::~GetAddressResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetAddressResponse)
  SharedDtor();
}

void GetAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressResponse& GetAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetAddressResponse.base);
  return *internal_default_instance();
}


void GetAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetAddressResponse)
  return false;
#undef DO_
}

void GetAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetAddressResponse)
}

::google::protobuf::uint8* GetAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetAddressResponse)
  return target;
}

size_t GetAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetAddressResponse)
    MergeFrom(*source);
  }
}

void GetAddressResponse::MergeFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressResponse::CopyFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressResponse::IsInitialized() const {
  return true;
}

void GetAddressResponse::Swap(GetAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressResponse::InternalSwap(GetAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressRequest::ListAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ListAddressRequest)
}
ListAddressRequest::ListAddressRequest(const ListAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ListAddressRequest)
}

void ListAddressRequest::SharedCtor() {
  query_ = false;
}

ListAddressRequest::~ListAddressRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ListAddressRequest)
  SharedDtor();
}

void ListAddressRequest::SharedDtor() {
}

void ListAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressRequest& ListAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListAddressRequest.base);
  return *internal_default_instance();
}


void ListAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ListAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ListAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ListAddressRequest)
  return false;
#undef DO_
}

void ListAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ListAddressRequest)
}

::google::protobuf::uint8* ListAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ListAddressRequest)
  return target;
}

size_t ListAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ListAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ListAddressRequest)
    MergeFrom(*source);
  }
}

void ListAddressRequest::MergeFrom(const ListAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ListAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressRequest::CopyFrom(const ListAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ListAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressRequest::IsInitialized() const {
  return true;
}

void ListAddressRequest::Swap(ListAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressRequest::InternalSwap(ListAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListAddressResponse::ListAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ListAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ListAddressResponse)
}
ListAddressResponse::ListAddressResponse(const ListAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ListAddressResponse)
}

void ListAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListAddressResponse::~ListAddressResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ListAddressResponse)
  SharedDtor();
}

void ListAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListAddressResponse& ListAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ListAddressResponse.base);
  return *internal_default_instance();
}


void ListAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.ListAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ListAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ListAddressResponse)
  return false;
#undef DO_
}

void ListAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ListAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ListAddressResponse)
}

::google::protobuf::uint8* ListAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ListAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ListAddressResponse)
  return target;
}

size_t ListAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ListAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ListAddressResponse)
    MergeFrom(*source);
  }
}

void ListAddressResponse::MergeFrom(const ListAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ListAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListAddressResponse::CopyFrom(const ListAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ListAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAddressResponse::IsInitialized() const {
  return true;
}

void ListAddressResponse::Swap(ListAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListAddressResponse::InternalSwap(ListAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAddressRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAddressRequest::ValidateAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ValidateAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
}
ValidateAddressRequest::ValidateAddressRequest(const ValidateAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
}

void ValidateAddressRequest::SharedCtor() {
  query_ = false;
}

ValidateAddressRequest::~ValidateAddressRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  SharedDtor();
}

void ValidateAddressRequest::SharedDtor() {
}

void ValidateAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAddressRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAddressRequest& ValidateAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ValidateAddressRequest.base);
  return *internal_default_instance();
}


void ValidateAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ValidateAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  return false;
#undef DO_
}

void ValidateAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
}

::google::protobuf::uint8* ValidateAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  return target;
}

size_t ValidateAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
    MergeFrom(*source);
  }
}

void ValidateAddressRequest::MergeFrom(const ValidateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ValidateAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAddressRequest::CopyFrom(const ValidateAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ValidateAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAddressRequest::IsInitialized() const {
  return true;
}

void ValidateAddressRequest::Swap(ValidateAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAddressRequest::InternalSwap(ValidateAddressRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAddressRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateAddressResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateAddressResponse::ValidateAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ValidateAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
}
ValidateAddressResponse::ValidateAddressResponse(const ValidateAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
}

void ValidateAddressResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ValidateAddressResponse::~ValidateAddressResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  SharedDtor();
}

void ValidateAddressResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValidateAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateAddressResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateAddressResponse& ValidateAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ValidateAddressResponse.base);
  return *internal_default_instance();
}


void ValidateAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ValidateAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.ValidateAddressResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  return false;
#undef DO_
}

void ValidateAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ValidateAddressResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
}

::google::protobuf::uint8* ValidateAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ValidateAddressResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  return target;
}

size_t ValidateAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
    MergeFrom(*source);
  }
}

void ValidateAddressResponse::MergeFrom(const ValidateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ValidateAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateAddressResponse::CopyFrom(const ValidateAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ValidateAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateAddressResponse::IsInitialized() const {
  return true;
}

void ValidateAddressResponse::Swap(ValidateAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateAddressResponse::InternalSwap(ValidateAddressResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateAddressResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceRequest::GetBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetBalanceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetBalanceRequest)
}
GetBalanceRequest::GetBalanceRequest(const GetBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetBalanceRequest)
}

void GetBalanceRequest::SharedCtor() {
  query_ = false;
}

GetBalanceRequest::~GetBalanceRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  SharedDtor();
}

void GetBalanceRequest::SharedDtor() {
}

void GetBalanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceRequest& GetBalanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetBalanceRequest.base);
  return *internal_default_instance();
}


void GetBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  return false;
#undef DO_
}

void GetBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetBalanceRequest)
}

::google::protobuf::uint8* GetBalanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  return target;
}

size_t GetBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetBalanceRequest)
    MergeFrom(*source);
  }
}

void GetBalanceRequest::MergeFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceRequest::CopyFrom(const GetBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceRequest::IsInitialized() const {
  return true;
}

void GetBalanceRequest::Swap(GetBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceRequest::InternalSwap(GetBalanceRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBalanceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBalanceResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBalanceResponse::GetBalanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetBalanceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetBalanceResponse)
}
GetBalanceResponse::GetBalanceResponse(const GetBalanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetBalanceResponse)
}

void GetBalanceResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBalanceResponse::~GetBalanceResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  SharedDtor();
}

void GetBalanceResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBalanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBalanceResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBalanceResponse& GetBalanceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetBalanceResponse.base);
  return *internal_default_instance();
}


void GetBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetBalanceResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  return false;
#undef DO_
}

void GetBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetBalanceResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetBalanceResponse)
}

::google::protobuf::uint8* GetBalanceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetBalanceResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  return target;
}

size_t GetBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBalanceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBalanceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetBalanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetBalanceResponse)
    MergeFrom(*source);
  }
}

void GetBalanceResponse::MergeFrom(const GetBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBalanceResponse::CopyFrom(const GetBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceResponse::IsInitialized() const {
  return true;
}

void GetBalanceResponse::Swap(GetBalanceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBalanceResponse::InternalSwap(GetBalanceResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBalanceResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRawTransactionRequest::CreateRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
}
CreateRawTransactionRequest::CreateRawTransactionRequest(const CreateRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
}

void CreateRawTransactionRequest::SharedCtor() {
  query_ = false;
}

CreateRawTransactionRequest::~CreateRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  SharedDtor();
}

void CreateRawTransactionRequest::SharedDtor() {
}

void CreateRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRawTransactionRequest& CreateRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateRawTransactionRequest.base);
  return *internal_default_instance();
}


void CreateRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool CreateRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return false;
#undef DO_
}

void CreateRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
}

::google::protobuf::uint8* CreateRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  return target;
}

size_t CreateRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
    MergeFrom(*source);
  }
}

void CreateRawTransactionRequest::MergeFrom(const CreateRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void CreateRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRawTransactionRequest::CopyFrom(const CreateRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRawTransactionRequest::IsInitialized() const {
  return true;
}

void CreateRawTransactionRequest::Swap(CreateRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRawTransactionRequest::InternalSwap(CreateRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRawTransactionResponse::CreateRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_CreateRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
}
CreateRawTransactionResponse::CreateRawTransactionResponse(const CreateRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
}

void CreateRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateRawTransactionResponse::~CreateRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  SharedDtor();
}

void CreateRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRawTransactionResponse& CreateRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_CreateRawTransactionResponse.base);
  return *internal_default_instance();
}


void CreateRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.CreateRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return false;
#undef DO_
}

void CreateRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
}

::google::protobuf::uint8* CreateRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.CreateRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  return target;
}

size_t CreateRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
    MergeFrom(*source);
  }
}

void CreateRawTransactionResponse::MergeFrom(const CreateRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void CreateRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRawTransactionResponse::CopyFrom(const CreateRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.CreateRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRawTransactionResponse::IsInitialized() const {
  return true;
}

void CreateRawTransactionResponse::Swap(CreateRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRawTransactionResponse::InternalSwap(CreateRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignRawTransactionRequest::SignRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
}
SignRawTransactionRequest::SignRawTransactionRequest(const SignRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
}

void SignRawTransactionRequest::SharedCtor() {
  query_ = false;
}

SignRawTransactionRequest::~SignRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  SharedDtor();
}

void SignRawTransactionRequest::SharedDtor() {
}

void SignRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignRawTransactionRequest& SignRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignRawTransactionRequest.base);
  return *internal_default_instance();
}


void SignRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SignRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  return false;
#undef DO_
}

void SignRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
}

::google::protobuf::uint8* SignRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  return target;
}

size_t SignRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
    MergeFrom(*source);
  }
}

void SignRawTransactionRequest::MergeFrom(const SignRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SignRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignRawTransactionRequest::CopyFrom(const SignRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignRawTransactionRequest::IsInitialized() const {
  return true;
}

void SignRawTransactionRequest::Swap(SignRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignRawTransactionRequest::InternalSwap(SignRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignRawTransactionResponse::SignRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
}
SignRawTransactionResponse::SignRawTransactionResponse(const SignRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
}

void SignRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignRawTransactionResponse::~SignRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  SharedDtor();
}

void SignRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignRawTransactionResponse& SignRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignRawTransactionResponse.base);
  return *internal_default_instance();
}


void SignRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SignRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  return false;
#undef DO_
}

void SignRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SignRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
}

::google::protobuf::uint8* SignRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SignRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  return target;
}

size_t SignRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
    MergeFrom(*source);
  }
}

void SignRawTransactionResponse::MergeFrom(const SignRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SignRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignRawTransactionResponse::CopyFrom(const SignRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SignRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignRawTransactionResponse::IsInitialized() const {
  return true;
}

void SignRawTransactionResponse::Swap(SignRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignRawTransactionResponse::InternalSwap(SignRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecodeRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecodeRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecodeRawTransactionRequest::DecodeRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}
DecodeRawTransactionRequest::DecodeRawTransactionRequest(const DecodeRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}

void DecodeRawTransactionRequest::SharedCtor() {
  query_ = false;
}

DecodeRawTransactionRequest::~DecodeRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  SharedDtor();
}

void DecodeRawTransactionRequest::SharedDtor() {
}

void DecodeRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecodeRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecodeRawTransactionRequest& DecodeRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionRequest.base);
  return *internal_default_instance();
}


void DecodeRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool DecodeRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return false;
#undef DO_
}

void DecodeRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
}

::google::protobuf::uint8* DecodeRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  return target;
}

size_t DecodeRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecodeRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
    MergeFrom(*source);
  }
}

void DecodeRawTransactionRequest::MergeFrom(const DecodeRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void DecodeRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeRawTransactionRequest::CopyFrom(const DecodeRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeRawTransactionRequest::IsInitialized() const {
  return true;
}

void DecodeRawTransactionRequest::Swap(DecodeRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecodeRawTransactionRequest::InternalSwap(DecodeRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecodeRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecodeRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecodeRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecodeRawTransactionResponse::DecodeRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}
DecodeRawTransactionResponse::DecodeRawTransactionResponse(const DecodeRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}

void DecodeRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecodeRawTransactionResponse::~DecodeRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  SharedDtor();
}

void DecodeRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecodeRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecodeRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecodeRawTransactionResponse& DecodeRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_DecodeRawTransactionResponse.base);
  return *internal_default_instance();
}


void DecodeRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DecodeRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return false;
#undef DO_
}

void DecodeRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
}

::google::protobuf::uint8* DecodeRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  return target;
}

size_t DecodeRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecodeRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
    MergeFrom(*source);
  }
}

void DecodeRawTransactionResponse::MergeFrom(const DecodeRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void DecodeRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeRawTransactionResponse::CopyFrom(const DecodeRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.DecodeRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeRawTransactionResponse::IsInitialized() const {
  return true;
}

void DecodeRawTransactionResponse::Swap(DecodeRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecodeRawTransactionResponse::InternalSwap(DecodeRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecodeRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastRawTransactionRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastRawTransactionRequest::BroadcastRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}
BroadcastRawTransactionRequest::BroadcastRawTransactionRequest(const BroadcastRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}

void BroadcastRawTransactionRequest::SharedCtor() {
  query_ = false;
}

BroadcastRawTransactionRequest::~BroadcastRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  SharedDtor();
}

void BroadcastRawTransactionRequest::SharedDtor() {
}

void BroadcastRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastRawTransactionRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastRawTransactionRequest& BroadcastRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionRequest.base);
  return *internal_default_instance();
}


void BroadcastRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool BroadcastRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return false;
#undef DO_
}

void BroadcastRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
}

::google::protobuf::uint8* BroadcastRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  return target;
}

size_t BroadcastRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
    MergeFrom(*source);
  }
}

void BroadcastRawTransactionRequest::MergeFrom(const BroadcastRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void BroadcastRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastRawTransactionRequest::CopyFrom(const BroadcastRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRawTransactionRequest::IsInitialized() const {
  return true;
}

void BroadcastRawTransactionRequest::Swap(BroadcastRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastRawTransactionRequest::InternalSwap(BroadcastRawTransactionRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastRawTransactionRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastRawTransactionResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastRawTransactionResponse::BroadcastRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}
BroadcastRawTransactionResponse::BroadcastRawTransactionResponse(const BroadcastRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}

void BroadcastRawTransactionResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BroadcastRawTransactionResponse::~BroadcastRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  SharedDtor();
}

void BroadcastRawTransactionResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastRawTransactionResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastRawTransactionResponse& BroadcastRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_BroadcastRawTransactionResponse.base);
  return *internal_default_instance();
}


void BroadcastRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BroadcastRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return false;
#undef DO_
}

void BroadcastRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
}

::google::protobuf::uint8* BroadcastRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  return target;
}

size_t BroadcastRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
    MergeFrom(*source);
  }
}

void BroadcastRawTransactionResponse::MergeFrom(const BroadcastRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void BroadcastRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastRawTransactionResponse::CopyFrom(const BroadcastRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.BroadcastRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRawTransactionResponse::IsInitialized() const {
  return true;
}

void BroadcastRawTransactionResponse::Swap(BroadcastRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastRawTransactionResponse::InternalSwap(BroadcastRawTransactionResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastRawTransactionResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToRequest::SendToRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendToRequest)
}
SendToRequest::SendToRequest(const SendToRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendToRequest)
}

void SendToRequest::SharedCtor() {
  query_ = false;
}

SendToRequest::~SendToRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendToRequest)
  SharedDtor();
}

void SendToRequest::SharedDtor() {
}

void SendToRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToRequest& SendToRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToRequest.base);
  return *internal_default_instance();
}


void SendToRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendToRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendToRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendToRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendToRequest)
  return false;
#undef DO_
}

void SendToRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendToRequest)
}

::google::protobuf::uint8* SendToRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendToRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendToRequest)
  return target;
}

size_t SendToRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendToRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendToRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendToRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendToRequest)
    MergeFrom(*source);
  }
}

void SendToRequest::MergeFrom(const SendToRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendToRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendToRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToRequest::CopyFrom(const SendToRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToRequest::IsInitialized() const {
  return true;
}

void SendToRequest::Swap(SendToRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToRequest::InternalSwap(SendToRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToResponse::SendToResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendToResponse)
}
SendToResponse::SendToResponse(const SendToResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendToResponse)
}

void SendToResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendToResponse::~SendToResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendToResponse)
  SharedDtor();
}

void SendToResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendToResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToResponse& SendToResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToResponse.base);
  return *internal_default_instance();
}


void SendToResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendToResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendToResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SendToResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendToResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendToResponse)
  return false;
#undef DO_
}

void SendToResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendToResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendToResponse)
}

::google::protobuf::uint8* SendToResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendToResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendToResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendToResponse)
  return target;
}

size_t SendToResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendToResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendToResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendToResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendToResponse)
    MergeFrom(*source);
  }
}

void SendToResponse::MergeFrom(const SendToResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendToResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendToResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendToResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToResponse::CopyFrom(const SendToResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendToResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToResponse::IsInitialized() const {
  return true;
}

void SendToResponse::Swap(SendToResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToResponse::InternalSwap(SendToResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToFromRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToFromRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToFromRequest::SendToFromRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToFromRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendToFromRequest)
}
SendToFromRequest::SendToFromRequest(const SendToFromRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendToFromRequest)
}

void SendToFromRequest::SharedCtor() {
  query_ = false;
}

SendToFromRequest::~SendToFromRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendToFromRequest)
  SharedDtor();
}

void SendToFromRequest::SharedDtor() {
}

void SendToFromRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToFromRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToFromRequest& SendToFromRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToFromRequest.base);
  return *internal_default_instance();
}


void SendToFromRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendToFromRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendToFromRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendToFromRequest)
  return false;
#undef DO_
}

void SendToFromRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendToFromRequest)
}

::google::protobuf::uint8* SendToFromRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendToFromRequest)
  return target;
}

size_t SendToFromRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToFromRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToFromRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToFromRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendToFromRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendToFromRequest)
    MergeFrom(*source);
  }
}

void SendToFromRequest::MergeFrom(const SendToFromRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendToFromRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToFromRequest::CopyFrom(const SendToFromRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendToFromRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToFromRequest::IsInitialized() const {
  return true;
}

void SendToFromRequest::Swap(SendToFromRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToFromRequest::InternalSwap(SendToFromRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToFromRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendToFromResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendToFromResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendToFromResponse::SendToFromResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendToFromResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendToFromResponse)
}
SendToFromResponse::SendToFromResponse(const SendToFromResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendToFromResponse)
}

void SendToFromResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendToFromResponse::~SendToFromResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendToFromResponse)
  SharedDtor();
}

void SendToFromResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendToFromResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendToFromResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendToFromResponse& SendToFromResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendToFromResponse.base);
  return *internal_default_instance();
}


void SendToFromResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendToFromResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SendToFromResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendToFromResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendToFromResponse)
  return false;
#undef DO_
}

void SendToFromResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendToFromResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendToFromResponse)
}

::google::protobuf::uint8* SendToFromResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendToFromResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendToFromResponse)
  return target;
}

size_t SendToFromResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendToFromResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendToFromResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendToFromResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendToFromResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendToFromResponse)
    MergeFrom(*source);
  }
}

void SendToFromResponse::MergeFrom(const SendToFromResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendToFromResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendToFromResponse::CopyFrom(const SendToFromResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendToFromResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendToFromResponse::IsInitialized() const {
  return true;
}

void SendToFromResponse::Swap(SendToFromResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendToFromResponse::InternalSwap(SendToFromResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendToFromResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendManyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendManyRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendManyRequest::SendManyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendManyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendManyRequest)
}
SendManyRequest::SendManyRequest(const SendManyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendManyRequest)
}

void SendManyRequest::SharedCtor() {
  query_ = false;
}

SendManyRequest::~SendManyRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendManyRequest)
  SharedDtor();
}

void SendManyRequest::SharedDtor() {
}

void SendManyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendManyRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendManyRequest& SendManyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendManyRequest.base);
  return *internal_default_instance();
}


void SendManyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendManyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendManyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendManyRequest)
  return false;
#undef DO_
}

void SendManyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendManyRequest)
}

::google::protobuf::uint8* SendManyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendManyRequest)
  return target;
}

size_t SendManyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendManyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendManyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendManyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendManyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendManyRequest)
    MergeFrom(*source);
  }
}

void SendManyRequest::MergeFrom(const SendManyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendManyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendManyRequest::CopyFrom(const SendManyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendManyRequest::IsInitialized() const {
  return true;
}

void SendManyRequest::Swap(SendManyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendManyRequest::InternalSwap(SendManyRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendManyRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendManyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendManyResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendManyResponse::SendManyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendManyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendManyResponse)
}
SendManyResponse::SendManyResponse(const SendManyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendManyResponse)
}

void SendManyResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendManyResponse::~SendManyResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendManyResponse)
  SharedDtor();
}

void SendManyResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendManyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendManyResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendManyResponse& SendManyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendManyResponse.base);
  return *internal_default_instance();
}


void SendManyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendManyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SendManyResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendManyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendManyResponse)
  return false;
#undef DO_
}

void SendManyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendManyResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendManyResponse)
}

::google::protobuf::uint8* SendManyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendManyResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendManyResponse)
  return target;
}

size_t SendManyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendManyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendManyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendManyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendManyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendManyResponse)
    MergeFrom(*source);
  }
}

void SendManyResponse::MergeFrom(const SendManyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendManyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendManyResponse::CopyFrom(const SendManyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendManyResponse::IsInitialized() const {
  return true;
}

void SendManyResponse::Swap(SendManyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendManyResponse::InternalSwap(SendManyResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendManyResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFromManyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFromManyRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFromManyRequest::SendFromManyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendFromManyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendFromManyRequest)
}
SendFromManyRequest::SendFromManyRequest(const SendFromManyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendFromManyRequest)
}

void SendFromManyRequest::SharedCtor() {
  query_ = false;
}

SendFromManyRequest::~SendFromManyRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  SharedDtor();
}

void SendFromManyRequest::SharedDtor() {
}

void SendFromManyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendFromManyRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFromManyRequest& SendFromManyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendFromManyRequest.base);
  return *internal_default_instance();
}


void SendFromManyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SendFromManyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  return false;
#undef DO_
}

void SendFromManyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendFromManyRequest)
}

::google::protobuf::uint8* SendFromManyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  return target;
}

size_t SendFromManyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendFromManyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFromManyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFromManyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendFromManyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendFromManyRequest)
    MergeFrom(*source);
  }
}

void SendFromManyRequest::MergeFrom(const SendFromManyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SendFromManyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFromManyRequest::CopyFrom(const SendFromManyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendFromManyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFromManyRequest::IsInitialized() const {
  return true;
}

void SendFromManyRequest::Swap(SendFromManyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFromManyRequest::InternalSwap(SendFromManyRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendFromManyRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFromManyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFromManyResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFromManyResponse::SendFromManyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SendFromManyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SendFromManyResponse)
}
SendFromManyResponse::SendFromManyResponse(const SendFromManyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SendFromManyResponse)
}

void SendFromManyResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendFromManyResponse::~SendFromManyResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  SharedDtor();
}

void SendFromManyResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFromManyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendFromManyResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFromManyResponse& SendFromManyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SendFromManyResponse.base);
  return *internal_default_instance();
}


void SendFromManyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendFromManyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SendFromManyResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  return false;
#undef DO_
}

void SendFromManyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendFromManyResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SendFromManyResponse)
}

::google::protobuf::uint8* SendFromManyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SendFromManyResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  return target;
}

size_t SendFromManyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendFromManyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFromManyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFromManyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SendFromManyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SendFromManyResponse)
    MergeFrom(*source);
  }
}

void SendFromManyResponse::MergeFrom(const SendFromManyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SendFromManyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFromManyResponse::CopyFrom(const SendFromManyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SendFromManyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFromManyResponse::IsInitialized() const {
  return true;
}

void SendFromManyResponse::Swap(SendFromManyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFromManyResponse::InternalSwap(SendFromManyResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendFromManyResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNodeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeRequest::AddNodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddNodeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.AddNodeRequest)
}
AddNodeRequest::AddNodeRequest(const AddNodeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.AddNodeRequest)
}

void AddNodeRequest::SharedCtor() {
  query_ = false;
}

AddNodeRequest::~AddNodeRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.AddNodeRequest)
  SharedDtor();
}

void AddNodeRequest::SharedDtor() {
}

void AddNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddNodeRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNodeRequest& AddNodeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddNodeRequest.base);
  return *internal_default_instance();
}


void AddNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool AddNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.AddNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.AddNodeRequest)
  return false;
#undef DO_
}

void AddNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.AddNodeRequest)
}

::google::protobuf::uint8* AddNodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.AddNodeRequest)
  return target;
}

size_t AddNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNodeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.AddNodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.AddNodeRequest)
    MergeFrom(*source);
  }
}

void AddNodeRequest::MergeFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void AddNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeRequest::CopyFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeRequest::IsInitialized() const {
  return true;
}

void AddNodeRequest::Swap(AddNodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeRequest::InternalSwap(AddNodeRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddNodeRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNodeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeResponse::AddNodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_AddNodeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.AddNodeResponse)
}
AddNodeResponse::AddNodeResponse(const AddNodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.AddNodeResponse)
}

void AddNodeResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddNodeResponse::~AddNodeResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.AddNodeResponse)
  SharedDtor();
}

void AddNodeResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddNodeResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNodeResponse& AddNodeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_AddNodeResponse.base);
  return *internal_default_instance();
}


void AddNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AddNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.AddNodeResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.AddNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.AddNodeResponse)
  return false;
#undef DO_
}

void AddNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.AddNodeResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.AddNodeResponse)
}

::google::protobuf::uint8* AddNodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.AddNodeResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.AddNodeResponse)
  return target;
}

size_t AddNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.AddNodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.AddNodeResponse)
    MergeFrom(*source);
  }
}

void AddNodeResponse::MergeFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void AddNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeResponse::CopyFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeResponse::IsInitialized() const {
  return true;
}

void AddNodeResponse::Swap(AddNodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeResponse::InternalSwap(AddNodeResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddNodeResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerListRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerListRequest::GetPeerListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetPeerListRequest)
}
GetPeerListRequest::GetPeerListRequest(const GetPeerListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetPeerListRequest)
}

void GetPeerListRequest::SharedCtor() {
  query_ = false;
}

GetPeerListRequest::~GetPeerListRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  SharedDtor();
}

void GetPeerListRequest::SharedDtor() {
}

void GetPeerListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerListRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerListRequest& GetPeerListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerListRequest.base);
  return *internal_default_instance();
}


void GetPeerListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetPeerListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  return false;
#undef DO_
}

void GetPeerListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetPeerListRequest)
}

::google::protobuf::uint8* GetPeerListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  return target;
}

size_t GetPeerListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetPeerListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetPeerListRequest)
    MergeFrom(*source);
  }
}

void GetPeerListRequest::MergeFrom(const GetPeerListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetPeerListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerListRequest::CopyFrom(const GetPeerListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerListRequest::IsInitialized() const {
  return true;
}

void GetPeerListRequest::Swap(GetPeerListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerListRequest::InternalSwap(GetPeerListRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerListRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerListResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerListResponse::GetPeerListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetPeerListResponse)
}
GetPeerListResponse::GetPeerListResponse(const GetPeerListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetPeerListResponse)
}

void GetPeerListResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetPeerListResponse::~GetPeerListResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  SharedDtor();
}

void GetPeerListResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPeerListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerListResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerListResponse& GetPeerListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerListResponse.base);
  return *internal_default_instance();
}


void GetPeerListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetPeerListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetPeerListResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  return false;
#undef DO_
}

void GetPeerListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetPeerListResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetPeerListResponse)
}

::google::protobuf::uint8* GetPeerListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetPeerListResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  return target;
}

size_t GetPeerListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetPeerListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetPeerListResponse)
    MergeFrom(*source);
  }
}

void GetPeerListResponse::MergeFrom(const GetPeerListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetPeerListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerListResponse::CopyFrom(const GetPeerListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerListResponse::IsInitialized() const {
  return true;
}

void GetPeerListResponse::Swap(GetPeerListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerListResponse::InternalSwap(GetPeerListResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerListResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerInfoRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerInfoRequest::GetPeerInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
}
GetPeerInfoRequest::GetPeerInfoRequest(const GetPeerInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
}

void GetPeerInfoRequest::SharedCtor() {
  query_ = false;
}

GetPeerInfoRequest::~GetPeerInfoRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  SharedDtor();
}

void GetPeerInfoRequest::SharedDtor() {
}

void GetPeerInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerInfoRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerInfoRequest& GetPeerInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerInfoRequest.base);
  return *internal_default_instance();
}


void GetPeerInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetPeerInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  return false;
#undef DO_
}

void GetPeerInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
}

::google::protobuf::uint8* GetPeerInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  return target;
}

size_t GetPeerInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
    MergeFrom(*source);
  }
}

void GetPeerInfoRequest::MergeFrom(const GetPeerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetPeerInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerInfoRequest::CopyFrom(const GetPeerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerInfoRequest::IsInitialized() const {
  return true;
}

void GetPeerInfoRequest::Swap(GetPeerInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerInfoRequest::InternalSwap(GetPeerInfoRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerInfoRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetPeerInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPeerInfoResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPeerInfoResponse::GetPeerInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetPeerInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
}
GetPeerInfoResponse::GetPeerInfoResponse(const GetPeerInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
}

void GetPeerInfoResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetPeerInfoResponse::~GetPeerInfoResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  SharedDtor();
}

void GetPeerInfoResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPeerInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetPeerInfoResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPeerInfoResponse& GetPeerInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetPeerInfoResponse.base);
  return *internal_default_instance();
}


void GetPeerInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetPeerInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetPeerInfoResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  return false;
#undef DO_
}

void GetPeerInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetPeerInfoResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
}

::google::protobuf::uint8* GetPeerInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetPeerInfoResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  return target;
}

size_t GetPeerInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPeerInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPeerInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPeerInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
    MergeFrom(*source);
  }
}

void GetPeerInfoResponse::MergeFrom(const GetPeerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetPeerInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPeerInfoResponse::CopyFrom(const GetPeerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetPeerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerInfoResponse::IsInitialized() const {
  return true;
}

void GetPeerInfoResponse::Swap(GetPeerInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPeerInfoResponse::InternalSwap(GetPeerInfoResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetPeerInfoResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetConnectionCountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnectionCountRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnectionCountRequest::GetConnectionCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetConnectionCountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
}
GetConnectionCountRequest::GetConnectionCountRequest(const GetConnectionCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
}

void GetConnectionCountRequest::SharedCtor() {
  query_ = false;
}

GetConnectionCountRequest::~GetConnectionCountRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  SharedDtor();
}

void GetConnectionCountRequest::SharedDtor() {
}

void GetConnectionCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetConnectionCountRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnectionCountRequest& GetConnectionCountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetConnectionCountRequest.base);
  return *internal_default_instance();
}


void GetConnectionCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetConnectionCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  return false;
#undef DO_
}

void GetConnectionCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
}

::google::protobuf::uint8* GetConnectionCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  return target;
}

size_t GetConnectionCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnectionCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
    MergeFrom(*source);
  }
}

void GetConnectionCountRequest::MergeFrom(const GetConnectionCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetConnectionCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionCountRequest::CopyFrom(const GetConnectionCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionCountRequest::IsInitialized() const {
  return true;
}

void GetConnectionCountRequest::Swap(GetConnectionCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnectionCountRequest::InternalSwap(GetConnectionCountRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetConnectionCountRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetConnectionCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConnectionCountResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConnectionCountResponse::GetConnectionCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetConnectionCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
}
GetConnectionCountResponse::GetConnectionCountResponse(const GetConnectionCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
}

void GetConnectionCountResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetConnectionCountResponse::~GetConnectionCountResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  SharedDtor();
}

void GetConnectionCountResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetConnectionCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetConnectionCountResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConnectionCountResponse& GetConnectionCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetConnectionCountResponse.base);
  return *internal_default_instance();
}


void GetConnectionCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetConnectionCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetConnectionCountResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  return false;
#undef DO_
}

void GetConnectionCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetConnectionCountResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
}

::google::protobuf::uint8* GetConnectionCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetConnectionCountResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  return target;
}

size_t GetConnectionCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConnectionCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConnectionCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConnectionCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
    MergeFrom(*source);
  }
}

void GetConnectionCountResponse::MergeFrom(const GetConnectionCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetConnectionCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConnectionCountResponse::CopyFrom(const GetConnectionCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetConnectionCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectionCountResponse::IsInitialized() const {
  return true;
}

void GetConnectionCountResponse::Swap(GetConnectionCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConnectionCountResponse::InternalSwap(GetConnectionCountResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetConnectionCountResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeltaRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeltaRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeltaRequest::GetDeltaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetDeltaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetDeltaRequest)
}
GetDeltaRequest::GetDeltaRequest(const GetDeltaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetDeltaRequest)
}

void GetDeltaRequest::SharedCtor() {
  query_ = false;
}

GetDeltaRequest::~GetDeltaRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  SharedDtor();
}

void GetDeltaRequest::SharedDtor() {
}

void GetDeltaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeltaRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeltaRequest& GetDeltaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetDeltaRequest.base);
  return *internal_default_instance();
}


void GetDeltaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetDeltaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  return false;
#undef DO_
}

void GetDeltaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetDeltaRequest)
}

::google::protobuf::uint8* GetDeltaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  return target;
}

size_t GetDeltaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeltaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeltaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeltaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetDeltaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetDeltaRequest)
    MergeFrom(*source);
  }
}

void GetDeltaRequest::MergeFrom(const GetDeltaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetDeltaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeltaRequest::CopyFrom(const GetDeltaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetDeltaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeltaRequest::IsInitialized() const {
  return true;
}

void GetDeltaRequest::Swap(GetDeltaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeltaRequest::InternalSwap(GetDeltaRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeltaRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDeltaResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeltaResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeltaResponse::GetDeltaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetDeltaResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetDeltaResponse)
}
GetDeltaResponse::GetDeltaResponse(const GetDeltaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetDeltaResponse)
}

void GetDeltaResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDeltaResponse::~GetDeltaResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  SharedDtor();
}

void GetDeltaResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDeltaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeltaResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeltaResponse& GetDeltaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetDeltaResponse.base);
  return *internal_default_instance();
}


void GetDeltaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetDeltaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetDeltaResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  return false;
#undef DO_
}

void GetDeltaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetDeltaResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetDeltaResponse)
}

::google::protobuf::uint8* GetDeltaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetDeltaResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  return target;
}

size_t GetDeltaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeltaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeltaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeltaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetDeltaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetDeltaResponse)
    MergeFrom(*source);
  }
}

void GetDeltaResponse::MergeFrom(const GetDeltaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetDeltaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeltaResponse::CopyFrom(const GetDeltaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetDeltaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeltaResponse::IsInitialized() const {
  return true;
}

void GetDeltaResponse::Swap(GetDeltaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeltaResponse::InternalSwap(GetDeltaResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeltaResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMempoolRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMempoolRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMempoolRequest::GetMempoolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetMempoolRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetMempoolRequest)
}
GetMempoolRequest::GetMempoolRequest(const GetMempoolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetMempoolRequest)
}

void GetMempoolRequest::SharedCtor() {
  query_ = false;
}

GetMempoolRequest::~GetMempoolRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  SharedDtor();
}

void GetMempoolRequest::SharedDtor() {
}

void GetMempoolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMempoolRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMempoolRequest& GetMempoolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetMempoolRequest.base);
  return *internal_default_instance();
}


void GetMempoolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool GetMempoolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  return false;
#undef DO_
}

void GetMempoolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetMempoolRequest)
}

::google::protobuf::uint8* GetMempoolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  return target;
}

size_t GetMempoolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMempoolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetMempoolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetMempoolRequest)
    MergeFrom(*source);
  }
}

void GetMempoolRequest::MergeFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void GetMempoolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolRequest::CopyFrom(const GetMempoolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetMempoolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolRequest::IsInitialized() const {
  return true;
}

void GetMempoolRequest::Swap(GetMempoolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMempoolRequest::InternalSwap(GetMempoolRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMempoolRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMempoolResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMempoolResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMempoolResponse::GetMempoolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_GetMempoolResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.GetMempoolResponse)
}
GetMempoolResponse::GetMempoolResponse(const GetMempoolResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.GetMempoolResponse)
}

void GetMempoolResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMempoolResponse::~GetMempoolResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  SharedDtor();
}

void GetMempoolResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMempoolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMempoolResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMempoolResponse& GetMempoolResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_GetMempoolResponse.base);
  return *internal_default_instance();
}


void GetMempoolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMempoolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.GetMempoolResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  return false;
#undef DO_
}

void GetMempoolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetMempoolResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.GetMempoolResponse)
}

::google::protobuf::uint8* GetMempoolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.GetMempoolResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  return target;
}

size_t GetMempoolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMempoolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMempoolResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMempoolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.GetMempoolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.GetMempoolResponse)
    MergeFrom(*source);
  }
}

void GetMempoolResponse::MergeFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void GetMempoolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMempoolResponse::CopyFrom(const GetMempoolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.GetMempoolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolResponse::IsInitialized() const {
  return true;
}

void GetMempoolResponse::Swap(GetMempoolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMempoolResponse::InternalSwap(GetMempoolResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMempoolResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignMessageRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignMessageRequest::SignMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SignMessageRequest)
}
SignMessageRequest::SignMessageRequest(const SignMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SignMessageRequest)
}

void SignMessageRequest::SharedCtor() {
  query_ = false;
}

SignMessageRequest::~SignMessageRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SignMessageRequest)
  SharedDtor();
}

void SignMessageRequest::SharedDtor() {
}

void SignMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignMessageRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignMessageRequest& SignMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignMessageRequest.base);
  return *internal_default_instance();
}


void SignMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool SignMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SignMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SignMessageRequest)
  return false;
#undef DO_
}

void SignMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SignMessageRequest)
}

::google::protobuf::uint8* SignMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SignMessageRequest)
  return target;
}

size_t SignMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SignMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SignMessageRequest)
    MergeFrom(*source);
  }
}

void SignMessageRequest::MergeFrom(const SignMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void SignMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignMessageRequest::CopyFrom(const SignMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SignMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignMessageRequest::IsInitialized() const {
  return true;
}

void SignMessageRequest::Swap(SignMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignMessageRequest::InternalSwap(SignMessageRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignMessageRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignMessageResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignMessageResponse::SignMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_SignMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.SignMessageResponse)
}
SignMessageResponse::SignMessageResponse(const SignMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.SignMessageResponse)
}

void SignMessageResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignMessageResponse::~SignMessageResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.SignMessageResponse)
  SharedDtor();
}

void SignMessageResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignMessageResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignMessageResponse& SignMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_SignMessageResponse.base);
  return *internal_default_instance();
}


void SignMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.SignMessageResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.SignMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.SignMessageResponse)
  return false;
#undef DO_
}

void SignMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SignMessageResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.SignMessageResponse)
}

::google::protobuf::uint8* SignMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.SignMessageResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.SignMessageResponse)
  return target;
}

size_t SignMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SignMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.SignMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.SignMessageResponse)
    MergeFrom(*source);
  }
}

void SignMessageResponse::MergeFrom(const SignMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void SignMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignMessageResponse::CopyFrom(const SignMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.SignMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignMessageResponse::IsInitialized() const {
  return true;
}

void SignMessageResponse::Swap(SignMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignMessageResponse::InternalSwap(SignMessageResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignMessageResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyMessageRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyMessageRequest::VerifyMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VerifyMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
}
VerifyMessageRequest::VerifyMessageRequest(const VerifyMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
}

void VerifyMessageRequest::SharedCtor() {
  query_ = false;
}

VerifyMessageRequest::~VerifyMessageRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  SharedDtor();
}

void VerifyMessageRequest::SharedDtor() {
}

void VerifyMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyMessageRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyMessageRequest& VerifyMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VerifyMessageRequest.base);
  return *internal_default_instance();
}


void VerifyMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool VerifyMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  return false;
#undef DO_
}

void VerifyMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
}

::google::protobuf::uint8* VerifyMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  return target;
}

size_t VerifyMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
    MergeFrom(*source);
  }
}

void VerifyMessageRequest::MergeFrom(const VerifyMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void VerifyMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyMessageRequest::CopyFrom(const VerifyMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.VerifyMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyMessageRequest::IsInitialized() const {
  return true;
}

void VerifyMessageRequest::Swap(VerifyMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyMessageRequest::InternalSwap(VerifyMessageRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyMessageRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyMessageResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyMessageResponse::VerifyMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_VerifyMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
}
VerifyMessageResponse::VerifyMessageResponse(const VerifyMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
}

void VerifyMessageResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyMessageResponse::~VerifyMessageResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  SharedDtor();
}

void VerifyMessageResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyMessageResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyMessageResponse& VerifyMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_VerifyMessageResponse.base);
  return *internal_default_instance();
}


void VerifyMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VerifyMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.VerifyMessageResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  return false;
#undef DO_
}

void VerifyMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.VerifyMessageResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
}

::google::protobuf::uint8* VerifyMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.VerifyMessageResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  return target;
}

size_t VerifyMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
    MergeFrom(*source);
  }
}

void VerifyMessageResponse::MergeFrom(const VerifyMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void VerifyMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyMessageResponse::CopyFrom(const VerifyMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.VerifyMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyMessageResponse::IsInitialized() const {
  return true;
}

void VerifyMessageResponse::Swap(VerifyMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyMessageResponse::InternalSwap(VerifyMessageResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyMessageResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceStatusRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceStatusRequest::ServiceStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ServiceStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
}
ServiceStatusRequest::ServiceStatusRequest(const ServiceStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_ = from.query_;
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
}

void ServiceStatusRequest::SharedCtor() {
  query_ = false;
}

ServiceStatusRequest::~ServiceStatusRequest() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  SharedDtor();
}

void ServiceStatusRequest::SharedDtor() {
}

void ServiceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceStatusRequest::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceStatusRequest& ServiceStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ServiceStatusRequest.base);
  return *internal_default_instance();
}


void ServiceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_ = false;
  _internal_metadata_.Clear();
}

bool ServiceStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &query_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  return false;
#undef DO_
}

void ServiceStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
}

::google::protobuf::uint8* ServiceStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool query = 1;
  if (this->query() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  return target;
}

size_t ServiceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool query = 1;
  if (this->query() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
    MergeFrom(*source);
  }
}

void ServiceStatusRequest::MergeFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query() != 0) {
    set_query(from.query());
  }
}

void ServiceStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusRequest::CopyFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusRequest::IsInitialized() const {
  return true;
}

void ServiceStatusRequest::Swap(ServiceStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceStatusRequest::InternalSwap(ServiceStatusRequest* other) {
  using std::swap;
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceStatusRequest::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceStatusResponse::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceStatusResponse::ServiceStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Rpc_2eproto::scc_info_ServiceStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
}
ServiceStatusResponse::ServiceStatusResponse(const ServiceStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
}

void ServiceStatusResponse::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceStatusResponse::~ServiceStatusResponse() {
  // @@protoc_insertion_point(destructor:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  SharedDtor();
}

void ServiceStatusResponse::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceStatusResponse::descriptor() {
  ::protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceStatusResponse& ServiceStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Rpc_2eproto::scc_info_ServiceStatusResponse.base);
  return *internal_default_instance();
}


void ServiceStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServiceStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ADL.Protocol.Rpc.Node.ServiceStatusResponse.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  return false;
#undef DO_
}

void ServiceStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ServiceStatusResponse.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
}

::google::protobuf::uint8* ServiceStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ADL.Protocol.Rpc.Node.ServiceStatusResponse.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  return target;
}

size_t ServiceStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
    MergeFrom(*source);
  }
}

void ServiceStatusResponse::MergeFrom(const ServiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ServiceStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusResponse::CopyFrom(const ServiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ADL.Protocol.Rpc.Node.ServiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusResponse::IsInitialized() const {
  return true;
}

void ServiceStatusResponse::Swap(ServiceStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceStatusResponse::InternalSwap(ServiceStatusResponse* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceStatusResponse::GetMetadata() const {
  protobuf_Rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace ADL
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::PingRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::PingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::PingRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::PongResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::PongResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::PongResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::VersionRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::VersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::VersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::VersionResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::VersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::VersionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetInfoRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetInfoResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateWalletRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateWalletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateWalletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateWalletResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateWalletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateWalletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ListWalletRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ListWalletRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ListWalletRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ListWalletResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ListWalletResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ListWalletResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateAddressRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateAddressResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetAddressRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetAddressResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ListAddressRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ListAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ListAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ListAddressResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ListAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ListAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ValidateAddressRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ValidateAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ValidateAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ValidateAddressResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ValidateAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ValidateAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetBalanceRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetBalanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetBalanceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetBalanceResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetBalanceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetBalanceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::CreateRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SignRawTransactionRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SignRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SignRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SignRawTransactionResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SignRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SignRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::DecodeRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::DecodeRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::BroadcastRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendToRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendToRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendToRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendToResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendToResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendToResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendToFromRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendToFromRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendToFromRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendToFromResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendToFromResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendToFromResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendManyRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendManyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendManyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendManyResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendManyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendManyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendFromManyRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendFromManyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendFromManyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SendFromManyResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SendFromManyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SendFromManyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::AddNodeRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::AddNodeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::AddNodeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::AddNodeResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::AddNodeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::AddNodeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetPeerListRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetPeerListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetPeerListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetPeerListResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetPeerListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetPeerListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetPeerInfoRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetPeerInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetPeerInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetPeerInfoResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetPeerInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetPeerInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetConnectionCountRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetConnectionCountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetConnectionCountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetConnectionCountResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetConnectionCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetConnectionCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetDeltaRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetDeltaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetDeltaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetDeltaResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetDeltaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetDeltaResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetMempoolRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetMempoolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetMempoolRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::GetMempoolResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::GetMempoolResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::GetMempoolResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SignMessageRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SignMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SignMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::SignMessageResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::SignMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::SignMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::VerifyMessageRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::VerifyMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::VerifyMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::VerifyMessageResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::VerifyMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::VerifyMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ServiceStatusRequest* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ServiceStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ServiceStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ADL::Protocol::Rpc::Node::ServiceStatusResponse* Arena::CreateMaybeMessage< ::ADL::Protocol::Rpc::Node::ServiceStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ADL::Protocol::Rpc::Node::ServiceStatusResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
