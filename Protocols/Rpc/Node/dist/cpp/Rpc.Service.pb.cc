// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.Service.proto

#include "Rpc.Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ADL {
namespace Protocol {
namespace Rpc {
namespace Node {
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace ADL
namespace protobuf_Rpc_2eService_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Rpc.Service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Rpc.Service.proto\022\025ADL.Protocol.Rpc.No"
      "de\032\tRpc.proto2\215\026\n\tRpcServer\022O\n\004Ping\022\".AD"
      "L.Protocol.Rpc.Node.PingRequest\032#.ADL.Pr"
      "otocol.Rpc.Node.PongResponse\022X\n\007Version\022"
      "%.ADL.Protocol.Rpc.Node.VersionRequest\032&"
      ".ADL.Protocol.Rpc.Node.VersionResponse\022X"
      "\n\007GetInfo\022%.ADL.Protocol.Rpc.Node.GetInf"
      "oRequest\032&.ADL.Protocol.Rpc.Node.GetInfo"
      "Response\022g\n\014CreateWallet\022*.ADL.Protocol."
      "Rpc.Node.CreateWalletRequest\032+.ADL.Proto"
      "col.Rpc.Node.CreateWalletResponse\022a\n\nLis"
      "tWallet\022(.ADL.Protocol.Rpc.Node.ListWall"
      "etRequest\032).ADL.Protocol.Rpc.Node.ListWa"
      "lletResponse\022j\n\rCreateAddress\022+.ADL.Prot"
      "ocol.Rpc.Node.CreateAddressRequest\032,.ADL"
      ".Protocol.Rpc.Node.CreateAddressResponse"
      "\022a\n\nGetAddress\022(.ADL.Protocol.Rpc.Node.G"
      "etAddressRequest\032).ADL.Protocol.Rpc.Node"
      ".GetAddressResponse\022d\n\013ListAddress\022).ADL"
      ".Protocol.Rpc.Node.ListAddressRequest\032*."
      "ADL.Protocol.Rpc.Node.ListAddressRespons"
      "e\022p\n\017ValidateAddress\022-.ADL.Protocol.Rpc."
      "Node.ValidateAddressRequest\032..ADL.Protoc"
      "ol.Rpc.Node.ValidateAddressResponse\022a\n\nG"
      "etBalance\022(.ADL.Protocol.Rpc.Node.GetBal"
      "anceRequest\032).ADL.Protocol.Rpc.Node.GetB"
      "alanceResponse\022\177\n\024CreateRawTransaction\0222"
      ".ADL.Protocol.Rpc.Node.CreateRawTransact"
      "ionRequest\0323.ADL.Protocol.Rpc.Node.Creat"
      "eRawTransactionResponse\022y\n\022SignRawTransa"
      "ction\0220.ADL.Protocol.Rpc.Node.SignRawTra"
      "nsactionRequest\0321.ADL.Protocol.Rpc.Node."
      "SignRawTransactionResponse\022\177\n\024DecodeRawT"
      "ransaction\0222.ADL.Protocol.Rpc.Node.Decod"
      "eRawTransactionRequest\0323.ADL.Protocol.Rp"
      "c.Node.DecodeRawTransactionResponse\022\210\001\n\027"
      "BroadcastRawTransaction\0225.ADL.Protocol.R"
      "pc.Node.BroadcastRawTransactionRequest\0326"
      ".ADL.Protocol.Rpc.Node.BroadcastRawTrans"
      "actionResponse\022U\n\006SendTo\022$.ADL.Protocol."
      "Rpc.Node.SendToRequest\032%.ADL.Protocol.Rp"
      "c.Node.SendToResponse\022a\n\nSendToFrom\022(.AD"
      "L.Protocol.Rpc.Node.SendToFromRequest\032)."
      "ADL.Protocol.Rpc.Node.SendToFromResponse"
      "\022[\n\010SendMany\022&.ADL.Protocol.Rpc.Node.Sen"
      "dManyRequest\032\'.ADL.Protocol.Rpc.Node.Sen"
      "dManyResponse\022g\n\014SendFromMany\022*.ADL.Prot"
      "ocol.Rpc.Node.SendFromManyRequest\032+.ADL."
      "Protocol.Rpc.Node.SendFromManyResponse\022X"
      "\n\007AddNode\022%.ADL.Protocol.Rpc.Node.AddNod"
      "eRequest\032&.ADL.Protocol.Rpc.Node.AddNode"
      "Response\022d\n\013GetPeerList\022).ADL.Protocol.R"
      "pc.Node.GetPeerListRequest\032*.ADL.Protoco"
      "l.Rpc.Node.GetPeerListResponse\022d\n\013GetPee"
      "rInfo\022).ADL.Protocol.Rpc.Node.GetPeerInf"
      "oRequest\032*.ADL.Protocol.Rpc.Node.GetPeer"
      "InfoResponse\022y\n\022GetConnectionCount\0220.ADL"
      ".Protocol.Rpc.Node.GetConnectionCountReq"
      "uest\0321.ADL.Protocol.Rpc.Node.GetConnecti"
      "onCountResponse\022[\n\010GetDelta\022&.ADL.Protoc"
      "ol.Rpc.Node.GetDeltaRequest\032\'.ADL.Protoc"
      "ol.Rpc.Node.GetDeltaResponse\022a\n\nGetMempo"
      "ol\022(.ADL.Protocol.Rpc.Node.GetMempoolReq"
      "uest\032).ADL.Protocol.Rpc.Node.GetMempoolR"
      "esponse\022d\n\013SignMessage\022).ADL.Protocol.Rp"
      "c.Node.SignMessageRequest\032*.ADL.Protocol"
      ".Rpc.Node.SignMessageResponse\022j\n\rVerifyM"
      "essage\022+.ADL.Protocol.Rpc.Node.VerifyMes"
      "sageRequest\032,.ADL.Protocol.Rpc.Node.Veri"
      "fyMessageResponse\022j\n\rServiceStatus\022+.ADL"
      ".Protocol.Rpc.Node.ServiceStatusRequest\032"
      ",.ADL.Protocol.Rpc.Node.ServiceStatusRes"
      "ponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2893);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Rpc.Service.proto", &protobuf_RegisterTypes);
  ::protobuf_Rpc_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Rpc_2eService_2eproto
namespace ADL {
namespace Protocol {
namespace Rpc {
namespace Node {

// @@protoc_insertion_point(namespace_scope)
}  // namespace Node
}  // namespace Rpc
}  // namespace Protocol
}  // namespace ADL
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
