// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.Service.proto

#include "Rpc.Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ADL {
namespace Node {
namespace Core {
namespace Modules {
namespace Rpc {
}  // namespace Rpc
}  // namespace Modules
}  // namespace Core
}  // namespace Node
}  // namespace ADL
namespace protobuf_Rpc_2eService_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Rpc.Service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Rpc.Service.proto\022\031ADL.Node.Core.Modul"
      "es.Rpc\032\tRpc.proto2\215\026\n\tRpcServer\022O\n\004Ping\022"
      "\".ADL.Protocol.Rpc.Node.PingRequest\032#.AD"
      "L.Protocol.Rpc.Node.PongResponse\022X\n\007Vers"
      "ion\022%.ADL.Protocol.Rpc.Node.VersionReque"
      "st\032&.ADL.Protocol.Rpc.Node.VersionRespon"
      "se\022X\n\007GetInfo\022%.ADL.Protocol.Rpc.Node.Ge"
      "tInfoRequest\032&.ADL.Protocol.Rpc.Node.Get"
      "InfoResponse\022g\n\014CreateWallet\022*.ADL.Proto"
      "col.Rpc.Node.CreateWalletRequest\032+.ADL.P"
      "rotocol.Rpc.Node.CreateWalletResponse\022a\n"
      "\nListWallet\022(.ADL.Protocol.Rpc.Node.List"
      "WalletRequest\032).ADL.Protocol.Rpc.Node.Li"
      "stWalletResponse\022j\n\rCreateAddress\022+.ADL."
      "Protocol.Rpc.Node.CreateAddressRequest\032,"
      ".ADL.Protocol.Rpc.Node.CreateAddressResp"
      "onse\022a\n\nGetAddress\022(.ADL.Protocol.Rpc.No"
      "de.GetAddressRequest\032).ADL.Protocol.Rpc."
      "Node.GetAddressResponse\022d\n\013ListAddress\022)"
      ".ADL.Protocol.Rpc.Node.ListAddressReques"
      "t\032*.ADL.Protocol.Rpc.Node.ListAddressRes"
      "ponse\022p\n\017ValidateAddress\022-.ADL.Protocol."
      "Rpc.Node.ValidateAddressRequest\032..ADL.Pr"
      "otocol.Rpc.Node.ValidateAddressResponse\022"
      "a\n\nGetBalance\022(.ADL.Protocol.Rpc.Node.Ge"
      "tBalanceRequest\032).ADL.Protocol.Rpc.Node."
      "GetBalanceResponse\022\177\n\024CreateRawTransacti"
      "on\0222.ADL.Protocol.Rpc.Node.CreateRawTran"
      "sactionRequest\0323.ADL.Protocol.Rpc.Node.C"
      "reateRawTransactionResponse\022y\n\022SignRawTr"
      "ansaction\0220.ADL.Protocol.Rpc.Node.SignRa"
      "wTransactionRequest\0321.ADL.Protocol.Rpc.N"
      "ode.SignRawTransactionResponse\022\177\n\024Decode"
      "RawTransaction\0222.ADL.Protocol.Rpc.Node.D"
      "ecodeRawTransactionRequest\0323.ADL.Protoco"
      "l.Rpc.Node.DecodeRawTransactionResponse\022"
      "\210\001\n\027BroadcastRawTransaction\0225.ADL.Protoc"
      "ol.Rpc.Node.BroadcastRawTransactionReque"
      "st\0326.ADL.Protocol.Rpc.Node.BroadcastRawT"
      "ransactionResponse\022U\n\006SendTo\022$.ADL.Proto"
      "col.Rpc.Node.SendToRequest\032%.ADL.Protoco"
      "l.Rpc.Node.SendToResponse\022a\n\nSendToFrom\022"
      "(.ADL.Protocol.Rpc.Node.SendToFromReques"
      "t\032).ADL.Protocol.Rpc.Node.SendToFromResp"
      "onse\022[\n\010SendMany\022&.ADL.Protocol.Rpc.Node"
      ".SendManyRequest\032\'.ADL.Protocol.Rpc.Node"
      ".SendManyResponse\022g\n\014SendFromMany\022*.ADL."
      "Protocol.Rpc.Node.SendFromManyRequest\032+."
      "ADL.Protocol.Rpc.Node.SendFromManyRespon"
      "se\022X\n\007AddNode\022%.ADL.Protocol.Rpc.Node.Ad"
      "dNodeRequest\032&.ADL.Protocol.Rpc.Node.Add"
      "NodeResponse\022d\n\013GetPeerList\022).ADL.Protoc"
      "ol.Rpc.Node.GetPeerListRequest\032*.ADL.Pro"
      "tocol.Rpc.Node.GetPeerListResponse\022d\n\013Ge"
      "tPeerInfo\022).ADL.Protocol.Rpc.Node.GetPee"
      "rInfoRequest\032*.ADL.Protocol.Rpc.Node.Get"
      "PeerInfoResponse\022y\n\022GetConnectionCount\0220"
      ".ADL.Protocol.Rpc.Node.GetConnectionCoun"
      "tRequest\0321.ADL.Protocol.Rpc.Node.GetConn"
      "ectionCountResponse\022[\n\010GetDelta\022&.ADL.Pr"
      "otocol.Rpc.Node.GetDeltaRequest\032\'.ADL.Pr"
      "otocol.Rpc.Node.GetDeltaResponse\022a\n\nGetM"
      "empool\022(.ADL.Protocol.Rpc.Node.GetMempoo"
      "lRequest\032).ADL.Protocol.Rpc.Node.GetMemp"
      "oolResponse\022d\n\013SignMessage\022).ADL.Protoco"
      "l.Rpc.Node.SignMessageRequest\032*.ADL.Prot"
      "ocol.Rpc.Node.SignMessageResponse\022j\n\rVer"
      "ifyMessage\022+.ADL.Protocol.Rpc.Node.Verif"
      "yMessageRequest\032,.ADL.Protocol.Rpc.Node."
      "VerifyMessageResponse\022j\n\rServiceStatus\022+"
      ".ADL.Protocol.Rpc.Node.ServiceStatusRequ"
      "est\032,.ADL.Protocol.Rpc.Node.ServiceStatu"
      "sResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2897);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Rpc.Service.proto", &protobuf_RegisterTypes);
  ::protobuf_Rpc_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Rpc_2eService_2eproto
namespace ADL {
namespace Node {
namespace Core {
namespace Modules {
namespace Rpc {

// @@protoc_insertion_point(namespace_scope)
}  // namespace Rpc
}  // namespace Modules
}  // namespace Core
}  // namespace Node
}  // namespace ADL
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
