// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rpc.Service.proto

#include "Rpc.Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ADL {
namespace NodeGrpc {
}  // namespace NodeGrpc
}  // namespace ADL
namespace protobuf_Rpc_2eService_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Rpc.Service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021Rpc.Service.proto\022\014ADL.NodeGrpc\032\tRpc.p"
      "roto2\215\026\n\tRpcServer\022O\n\004Ping\022\".ADL.Protoco"
      "l.Rpc.Node.PingRequest\032#.ADL.Protocol.Rp"
      "c.Node.PongResponse\022X\n\007Version\022%.ADL.Pro"
      "tocol.Rpc.Node.VersionRequest\032&.ADL.Prot"
      "ocol.Rpc.Node.VersionResponse\022X\n\007GetInfo"
      "\022%.ADL.Protocol.Rpc.Node.GetInfoRequest\032"
      "&.ADL.Protocol.Rpc.Node.GetInfoResponse\022"
      "g\n\014CreateWallet\022*.ADL.Protocol.Rpc.Node."
      "CreateWalletRequest\032+.ADL.Protocol.Rpc.N"
      "ode.CreateWalletResponse\022a\n\nListWallet\022("
      ".ADL.Protocol.Rpc.Node.ListWalletRequest"
      "\032).ADL.Protocol.Rpc.Node.ListWalletRespo"
      "nse\022j\n\rCreateAddress\022+.ADL.Protocol.Rpc."
      "Node.CreateAddressRequest\032,.ADL.Protocol"
      ".Rpc.Node.CreateAddressResponse\022a\n\nGetAd"
      "dress\022(.ADL.Protocol.Rpc.Node.GetAddress"
      "Request\032).ADL.Protocol.Rpc.Node.GetAddre"
      "ssResponse\022d\n\013ListAddress\022).ADL.Protocol"
      ".Rpc.Node.ListAddressRequest\032*.ADL.Proto"
      "col.Rpc.Node.ListAddressResponse\022p\n\017Vali"
      "dateAddress\022-.ADL.Protocol.Rpc.Node.Vali"
      "dateAddressRequest\032..ADL.Protocol.Rpc.No"
      "de.ValidateAddressResponse\022a\n\nGetBalance"
      "\022(.ADL.Protocol.Rpc.Node.GetBalanceReque"
      "st\032).ADL.Protocol.Rpc.Node.GetBalanceRes"
      "ponse\022\177\n\024CreateRawTransaction\0222.ADL.Prot"
      "ocol.Rpc.Node.CreateRawTransactionReques"
      "t\0323.ADL.Protocol.Rpc.Node.CreateRawTrans"
      "actionResponse\022y\n\022SignRawTransaction\0220.A"
      "DL.Protocol.Rpc.Node.SignRawTransactionR"
      "equest\0321.ADL.Protocol.Rpc.Node.SignRawTr"
      "ansactionResponse\022\177\n\024DecodeRawTransactio"
      "n\0222.ADL.Protocol.Rpc.Node.DecodeRawTrans"
      "actionRequest\0323.ADL.Protocol.Rpc.Node.De"
      "codeRawTransactionResponse\022\210\001\n\027Broadcast"
      "RawTransaction\0225.ADL.Protocol.Rpc.Node.B"
      "roadcastRawTransactionRequest\0326.ADL.Prot"
      "ocol.Rpc.Node.BroadcastRawTransactionRes"
      "ponse\022U\n\006SendTo\022$.ADL.Protocol.Rpc.Node."
      "SendToRequest\032%.ADL.Protocol.Rpc.Node.Se"
      "ndToResponse\022a\n\nSendToFrom\022(.ADL.Protoco"
      "l.Rpc.Node.SendToFromRequest\032).ADL.Proto"
      "col.Rpc.Node.SendToFromResponse\022[\n\010SendM"
      "any\022&.ADL.Protocol.Rpc.Node.SendManyRequ"
      "est\032\'.ADL.Protocol.Rpc.Node.SendManyResp"
      "onse\022g\n\014SendFromMany\022*.ADL.Protocol.Rpc."
      "Node.SendFromManyRequest\032+.ADL.Protocol."
      "Rpc.Node.SendFromManyResponse\022X\n\007AddNode"
      "\022%.ADL.Protocol.Rpc.Node.AddNodeRequest\032"
      "&.ADL.Protocol.Rpc.Node.AddNodeResponse\022"
      "d\n\013GetPeerList\022).ADL.Protocol.Rpc.Node.G"
      "etPeerListRequest\032*.ADL.Protocol.Rpc.Nod"
      "e.GetPeerListResponse\022d\n\013GetPeerInfo\022).A"
      "DL.Protocol.Rpc.Node.GetPeerInfoRequest\032"
      "*.ADL.Protocol.Rpc.Node.GetPeerInfoRespo"
      "nse\022y\n\022GetConnectionCount\0220.ADL.Protocol"
      ".Rpc.Node.GetConnectionCountRequest\0321.AD"
      "L.Protocol.Rpc.Node.GetConnectionCountRe"
      "sponse\022[\n\010GetDelta\022&.ADL.Protocol.Rpc.No"
      "de.GetDeltaRequest\032\'.ADL.Protocol.Rpc.No"
      "de.GetDeltaResponse\022a\n\nGetMempool\022(.ADL."
      "Protocol.Rpc.Node.GetMempoolRequest\032).AD"
      "L.Protocol.Rpc.Node.GetMempoolResponse\022d"
      "\n\013SignMessage\022).ADL.Protocol.Rpc.Node.Si"
      "gnMessageRequest\032*.ADL.Protocol.Rpc.Node"
      ".SignMessageResponse\022j\n\rVerifyMessage\022+."
      "ADL.Protocol.Rpc.Node.VerifyMessageReque"
      "st\032,.ADL.Protocol.Rpc.Node.VerifyMessage"
      "Response\022j\n\rServiceStatus\022+.ADL.Protocol"
      ".Rpc.Node.ServiceStatusRequest\032,.ADL.Pro"
      "tocol.Rpc.Node.ServiceStatusResponseb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2884);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Rpc.Service.proto", &protobuf_RegisterTypes);
  ::protobuf_Rpc_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Rpc_2eService_2eproto
namespace ADL {
namespace NodeGrpc {

// @@protoc_insertion_point(namespace_scope)
}  // namespace NodeGrpc
}  // namespace ADL
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
