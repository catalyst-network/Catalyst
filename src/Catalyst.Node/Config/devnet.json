{
    "CatalystNodeConfiguration": {
        "Consensus": {
            "nDepth": 100
        },
        "Contract": {
            "StorageType": "Catalyst.Helpers.Ipfs"
        },
        "Peer": {
            "Network": "devnet",
            "PublicKey": "1AemkEe4z3rZHr7RWSUyZHPuVozyCQnT1H7SfpzcGCQRuT",
            "Announce": true,
            "AnnounceServer": "127.0.0.1:21420",
            "Port": 42076,
            "BindAddress": "127.0.0.1",
            "DnsServers": [
                "127.0.0.1:5053"
            ],
            "SeedServers": [
                "seed1.catalystnetwork.io",
                "seed2.catalystnetwork.io",
                "seed3.catalystnetwork.io",
                "seed4.catalystnetwork.io",
                "seed5.catalystnetwork.io"
            ],
            "QueryAnswerValues": [ // Only use for development
                "0x41437c30317c39322e3230372e3137382e3139387c34323036397c3031323334353637383930313233343536373839",
                "0x41437c30317c39322e3230372e3137382e3139387c34323036397c3031323334353637383930313233343536373839",
                "0x41437c30317c39322e3230372e3137382e3139387c34323036397c3031323334353637383930313233343536373839",
                "0x41437c30317c39322e3230372e3137382e3139387c34323036397c3031323334353637383930313233343536373839",
                "0x41437c30317c39322e3230372e3137382e3139387c34323036397c3031323334353637383930313233343536373839"
            ]
        },
        "Rpc": {
            "BindAddress": "127.0.0.1",
            "Port": 42066,
            "MutualAuthentication": false,
            "AcceptInvalidCerts": false,
            "PfxFileName": "mycert.pfx"
        },
        "PersistenceConfiguration": {
            "repositories": {
                "default": "inMemoryNoCaching",
                "inMemory": {
                    "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
                },
                //"mongoDb": {
                //  "factory": "SharpRepository.MongoDbRepository.MongoDbConfigRepositoryFactory, SharpRepository.MongoDbRepository",
                //  "connectionString": "mongodb:://127.0.0.1"
                //},
                "inMemoryNoCaching": {
                    "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository",
                    "cachingStrategy": "none",
                    "cachingProvider": "noCachingProvider"
                }
            },
            "cachingProviders": {
                "default": "inMemoryProvider",
                "inMemoryProvider": {
                    "factory": "SharpRepository.Repository.Caching.InMemoryConfigCachingProviderFactory, SharpRepository.Repository"
                },
                "noCachingProvider": {
                    "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingProviderFactory, SharpRepository.Repository"
                }
            },
            "cachingStrategies": {
                "default": "standard",
                "standard": {
                    "factory": "SharpRepository.Repository.Caching.StandardConfigCachingStrategyFactory, SharpRepository.Repository",
                    "generational": "true",
                    "writeThrough": "false"
                },
                //"redisProvider": {
                //  "factory": "SharpRepository.Caching.Redis.RedisConfigCachingProviderFactory, SharpRepository.Caching.Redis",
                //  "host": "127.0.0.1",
                //  "port": "6379",
                //  "ssl": false,
                //  "password": "",
                //  "defaultDatabase": "0"
                //},
                "timeout": {
                    "factory": "SharpRepository.Repository.Caching.TimeoutConfigCachingStrategyFactory, SharpRepository.Repository",
                    "timeout": "200"
                },
                "none": {
                    "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingStrategyFactory, SharpRepository.Repository"
                }
            }
        }
    }
}
