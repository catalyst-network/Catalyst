{
  "defaultAssembly": "Catalyst.Core.Lib",
    "components": [
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Consensus",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.IConsensus, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaBuilder",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaBuilder, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.TransactionComparerByFeeTimestampAndHash",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.ITransactionComparer, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaTransactionRetriever",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaTransactionRetriever, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.PoaDeltaProducersProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaProducersProvider, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaHub",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaHub, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaVoter",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaVoter, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaElector",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaElector, Catalyst.Common"
                }
            ]
        },
        {
            "type": "SharpRepository.InMemoryRepository.InMemoryRepository`1[[Catalyst.Common.P2P.Peer, Catalyst.Common]], SharpRepository.InMemoryRepository",
            "services": [
                {
                    "type": "SharpRepository.Repository.IRepository`1[[Catalyst.Common.P2P.Peer, Catalyst.Common]], SharpRepository.Repository"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaHashProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaHashProvider, Catalyst.Common"
                }
            ],
            "parameters": {
                "capacity": 10000
            }
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaCache",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaCache, Catalyst.Common"
                }
            ],
            "instanceScope": "singleinstance"
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaDfsReader",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaDfsReader, Catalyst.Common"
                }
            ],
            "instanceScope": "singleinstance"
        },
        {
            "type": "Catalyst.Core.Lib.P2P.IO.Observers.DeltaDfsHashObserver",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.IO.Observers.IP2PMessageObserver, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Core.Lib.Modules.Consensus.Deltas.DeltaCacheChangeTokenProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Deltas.IDeltaCacheChangeTokenProvider, Catalyst.Common"
                }
            ],
            "parameters": {
                "timeToLiveInMs": 600000 //10mn
            }
        }
    ]
}
