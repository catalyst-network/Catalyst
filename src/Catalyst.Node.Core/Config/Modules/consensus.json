{
  "defaultAssembly": "Catalyst.Node.Core",
    "components": [
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Consensus",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.IConsensus, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaBuilder",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaBuilder, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.TransactionComparerByFeeTimestampAndHash",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.ITransactionComparer, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaTransactionRetriever",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaTransactionRetriever, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.PoaDeltaProducersProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaProducersProvider, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaHub",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaHub, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaVoter",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaVoter, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaElector",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaElector, Catalyst.Common"
                }
            ]
        },
        {
            "type": "SharpRepository.InMemoryRepository.InMemoryRepository`1[[Catalyst.Common.P2P.Peer, Catalyst.Common]], SharpRepository.InMemoryRepository",
            "services": [
                {
                    "type": "SharpRepository.Repository.IRepository`1[[Catalyst.Common.P2P.Peer, Catalyst.Common]], SharpRepository.Repository"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaHashProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaHashProvider, Catalyst.Common"
                }
            ],
            "parameters": {
                "capacity": 10000
            }
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaCache",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaCache, Catalyst.Common"
                }
            ],
            "instanceScope": "singleinstance"
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaDfsReader",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaDfsReader, Catalyst.Common"
                }
            ],
            "instanceScope": "singleinstance"
        },
        {
            "type": "Catalyst.Node.Core.P2P.IO.Observers.DeltaDfsHashObserver",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.IO.Observers.IP2PMessageObserver, Catalyst.Common"
                }
            ]
        },
        {
            "type": "Catalyst.Node.Core.Modules.Consensus.Delta.DeltaCacheChangeTokenProvider",
            "services": [
                {
                    "type": "Catalyst.Common.Interfaces.Modules.Consensus.Delta.IDeltaCacheChangeTokenProvider, Catalyst.Common"
                }
            ],
            "parameters": {
                "timeToLiveInMs": 600000 //10mn
            }
        }
    ]
}
