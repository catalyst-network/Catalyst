<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>netcoreapp3.0</TargetFramework>
        <RootNamespace>Catalyst.Core.Modules.Cryptography.BulletProofs</RootNamespace>
        <Authors>James Kirby (nshcore@protonmail.com)</Authors>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>Catalyst.Core.Modules.Cryptography.BulletProofs.snk</AssemblyOriginatorKeyFile>
        <PublicSign>true</PublicSign>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <NoWarn>1701;1702;CS8002</NoWarn>
    </PropertyGroup>
    <Import Project="../Common.Packable.props" />
    <Import Project="../Common.Projects.props" />
    <ItemGroup>
        <ProjectReference Include="..\Catalyst.Abstractions\Catalyst.Abstractions.csproj" />
        <ProjectReference Include="..\Catalyst.Core.Lib\Catalyst.Core.Lib.csproj" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Autofac" Version="4.8.1" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.2" />
    </ItemGroup>
    <ItemGroup>
        <None Include="Runtimes/**/*.*" PackagePath="Runtimes/" Pack="true">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Include="./Runtimes/osx-x64/*/libcatalyst_ffi.dylib" Link="libcatalystffi.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Include="./Runtimes/win-x64/*/catalyst_ffi.dll" Link="catalystffi.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Include="./Runtimes/linux-x64/*/libcatalyst_ffi.so" Link="libcatalystffi.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <!-- build tasks for Catalyst.Cryptography.FFI.Rust -->
    <!-- @TODO at moment this only assumes debug target for rust build, we should pass $(configuration) rust build command-->
    <Target Name="CompileNativeRuntimes" BeforeTargets="BeforeBuild">
        <!-- build for osx -->
        <Exec Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'" Command="cargo build --manifest-path ../../submodules/Cryptography.FFI.Rust/packages/catalyst-ffi/Cargo.toml --target-dir ./Runtimes/osx-x64" ConsoleToMSBuild="true" />
        <ItemGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">
            <None Include=".\Runtimes\osx-x64\*\libcatalyst_ffi.dylib" Link="libcatalyst_ffi.dylib">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            </None>
        </ItemGroup>
        <!-- build for windows -->
        <Exec Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'" Command="cargo build --manifest-path ..\..\submodules\Cryptography.FFI.Rust\packages\catalyst-ffi\Cargo.toml --target-dir .\Runtimes\win-x64" ConsoleToMSBuild="true" />
        <ItemGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">
            <None Include=".\Runtimes\win-x64\*\catalyst_ffi.dll" Link="catalyst_ffi.dll">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            </None>
        </ItemGroup>
        <!-- build for *nix -->
        <Exec Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'" Command="cargo build --manifest-path ../../submodules/Cryptography.FFI.Rust/packages/catalyst-ffi/Cargo.toml --target-dir ./Runtimes/linux-x64" ConsoleToMSBuild="true" />
        <ItemGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">
            <None Include=".\Runtimes\linux-x64/*\libcatalyst_ffi.so" Link="libcatalyst_ffi.so">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            </None>
        </ItemGroup>
    </Target>
    <!-- end build natives -->

    <!-- remove cargo build guff from sln -->
    <ItemGroup>
        <None Remove="Runtimes\*\*\.cargo-lock" />
        <None Remove="Runtimes\*\*\incremental\**" />
        <None Remove="Runtimes\*\*\deps\**" />
        <None Remove="Runtimes\*\*\build\**" />
        <None Remove="Runtimes\*\.rustc_info.json" />
    </ItemGroup>
    <ItemGroup>
        <Compile Remove="Runtimes\*\*\incremental\**" />
        <Compile Remove="Runtimes\*\*\deps\**" />
        <Compile Remove="Runtimes\*\*\build\**" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Remove="Runtimes\*\*\incremental\**" />
        <EmbeddedResource Remove="Runtimes\*\*\deps\**" />
        <EmbeddedResource Remove="Runtimes\*\*\build\**" />
    </ItemGroup>
    <ItemGroup>
      <_UnmanagedRegistrationCache Remove="obj\Catalyst.Core.Modules.Cryptography.BulletProofs.csproj.UnmanagedRegistration.cache" />
    </ItemGroup>
    <ItemGroup>
      <_ResolveComReferenceCache Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.csproj.ResolveComReference.cache" />
    </ItemGroup>
    <ItemGroup>
      <IntermediateAssembly Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.dll" />
    </ItemGroup>
    <ItemGroup>
      <_DebugSymbolsIntermediatePath Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.pdb" />
    </ItemGroup>
    <ItemGroup>
      <_DeploymentManifestEntryPoint Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.dll" />
    </ItemGroup>
    <ItemGroup>
      <ApplicationManifest Remove="obj\Debug\netcoreapp3.0\Native.Catalyst.Core.Modules.Cryptography.BulletProofs.manifest" />
    </ItemGroup>
    <ItemGroup>
      <DeployManifest Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.application" />
    </ItemGroup>
    <ItemGroup>
      <ClsidMap Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.clsidmap" />
    </ItemGroup>
    <ItemGroup>
      <RegFreeComManifest Remove="obj\Debug\netcoreapp3.0\Catalyst.Core.Modules.Cryptography.BulletProofs.X.manifest" />
    </ItemGroup>
</Project>
